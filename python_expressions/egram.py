> Python( EGRAM, resultname="GRAM");
GRAM = numpy.mat([[(complex(0, -1) * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) + (complex(0, -1) * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) + (complex(0, -1) * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])),(complex(0, -1) * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) + (complex(0, -1) * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) + (complex(0, -1) * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0]))],[(complex(0, -1) * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[3] - (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[3] - x[2] / zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) + (complex(0, -1) * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) + (complex(0, -1) * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[3] - (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[3] - x[2] / zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])),(complex(0, -1) * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[3] - (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[3] - x[2] / zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) + (complex(0, -1) * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[3] - (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[3] - x[2] / zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) + (complex(0, -1) * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[3] - (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[3] - x[2] / zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + complex(0, -1) * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0]))]])
> appendto(terminal);
