from numpy import complex, complex64, mat, dot, trace, pi, sqrt, mat
from mpmath import ellipk, ellipe
from cmath import exp


def ddmus(zeta, x, k):

    K = complex64(ellipk(k**2))

    E = complex64(ellipe(k**2))

    cm= (2*E-K)/K

    k1 = sqrt(1-k**2)

    xp = x[0]+complex(0,1)*x[1]
    xm = x[0]-complex(0,1)*x[1]
    S =  sqrt(K**2-4*xp*xm)
    SP = sqrt(K**2-4*xp**2)
    SM = sqrt(K**2-4*xm**2)
    SPM = sqrt(-k1**2*(K**2*k**2-4*xm*xp)+(xm-xp)**2)
    R = 2*K**2*k1**2-S**2-8*x[2]**2
    RM = complex(0,1)*SM**2*(xm*(2*k1**2-1)+xp)-(16*complex(0,1))*xm*x[2]**2
    RP = complex(0,1)*SM**2*(xp*(2*k1**2-1)+xm)+(16*complex(0,1))*xp*x[2]**2
    RMBAR=-complex(0,1)*SP**2*( xp*(2*k1**2-1)+xm ) +16*complex(0,1)*xp*x[2]**2
    RPBAR=-complex(0,1)*SP**2*( xm*(2*k1**2-1)+xp ) -16*complex(0,1)*xm*x[2]**2
    r=sqrt(x[0]**2+x[1]**2+x[2]**2)

    DDM = [None,None,None,None]

    DDM[0] = [None]*3
    DDM[1] = [None]*3
    DDM[2] = [None]*3
    DDM[3] = [None]*3

    DDM[0][0] = complex(0, 2) * (48 * K ** 2 * zeta[0] ** 7 * x[0] * x[1] * x[2] - 224 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[2] ** 2 + 80 * K ** 2 * zeta[0] ** 5 * x[0] * x[1] * x[2] - 6 * E * K ** 3 * k1 ** 2 * zeta[0] ** 2 * x[0] - 40 * E * K * zeta[0] ** 4 * x[0] * x[1] ** 2 + 160 * E * K * zeta[0] ** 4 * x[0] * x[2] ** 2 + 48 * E * K * zeta[0] ** 2 * x[0] * x[2] ** 2 - 10 * E * K ** 3 * k1 ** 2 * zeta[0] ** 6 * x[0] + 36 * E * K * zeta[0] ** 8 * x[0] * x[1] ** 2 - 18 * E * K ** 3 * k1 ** 2 * zeta[0] ** 4 * x[0] + 112 * E * K * zeta[0] ** 6 * x[0] * x[2] ** 2 + 56 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] * x[1] ** 2 - 160 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] * x[2] ** 2 + 16 * K ** 2 * zeta[0] ** 3 * x[0] * x[1] * x[2] - 16 * K ** 2 * zeta[0] * x[0] * x[1] * x[2] + 40 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 88 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] * x[1] ** 2 - 32 * K ** 2 * zeta[0] ** 6 * x[0] ** 3 - 48 * K ** 2 * zeta[0] ** 4 * x[0] ** 3 - 2 * K ** 4 * k1 ** 2 * x[0] + 8 * K ** 2 * k1 ** 2 * x[0] ** 3 - 32 * K ** 2 * zeta[0] ** 2 * x[0] ** 3 + 384 * zeta[0] ** 2 * x[0] * x[2] ** 4 + 96 * x[0] * x[1] ** 2 * x[2] ** 2 - 8 * K ** 2 * zeta[0] ** 8 * x[0] ** 3 + 144 * zeta[0] ** 8 * x[0] * x[1] ** 4 + 4 * K ** 4 * zeta[0] ** 6 * x[0] - 224 * zeta[0] ** 6 * x[0] * x[1] ** 4 + 6 * K ** 4 * zeta[0] ** 4 * x[0] + 640 * zeta[0] ** 4 * x[0] * x[2] ** 4 + 4 * K ** 4 * zeta[0] ** 2 * x[0] + 96 * zeta[0] ** 2 * x[0] * x[1] ** 4 + 4 * E * K * x[0] ** 3 + 160 * zeta[0] ** 2 * x[0] ** 3 * x[1] ** 2 - 480 * zeta[0] ** 2 * x[0] ** 3 * x[2] ** 2 - 224 * zeta[0] ** 8 * x[0] ** 3 * x[1] ** 2 - 288 * zeta[0] ** 6 * x[0] ** 3 * x[1] ** 2 - 416 * zeta[0] ** 6 * x[0] ** 3 * x[2] ** 2 + 96 * zeta[0] ** 4 * x[0] ** 3 * x[1] ** 2 - 864 * zeta[0] ** 4 * x[0] ** 3 * x[2] ** 2 + 128 * zeta[0] * x[0] ** 3 * x[1] * x[2] + 16 * x[0] ** 5 + complex(0, -16) * K ** 2 * zeta[0] ** 7 * x[1] ** 2 * x[2] + complex(0, -6) * E * K ** 3 * zeta[0] ** 6 * x[1] + complex(0, 16) * E * K * zeta[0] ** 6 * x[1] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[0] ** 2 * x[1] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[0] ** 6 * x[1] * x[2] ** 2 + complex(0, -8) * E * K ** 3 * zeta[0] ** 5 * x[2] + complex(0, -64) * E * K * zeta[0] ** 5 * x[2] ** 3 + complex(0, 128) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[2] ** 3 + complex(0, -16) * K ** 2 * zeta[0] ** 5 * x[1] ** 2 * x[2] + complex(0, -4) * E * K ** 3 * zeta[0] ** 4 * x[1] + complex(0, 8) * E * K * zeta[0] ** 4 * x[1] ** 3 + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] ** 3 + complex(0, 24) * K ** 2 * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, -32) * K ** 2 * zeta[0] ** 4 * x[1] * x[2] ** 2 + complex(0, -4) * E * K ** 3 * zeta[0] ** 3 * x[2] + complex(0, -64) * E * K * zeta[0] ** 3 * x[2] ** 3 + complex(0, 16) * K ** 2 * zeta[0] ** 3 * x[1] ** 2 * x[2] + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[0] ** 4 * x[1] - 288 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] * x[1] * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] * x[1] * x[2] + 96 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * x[1] * x[2] - 64 * E * K * zeta[0] ** 3 * x[0] * x[1] * x[2] - 32 * E * K * zeta[0] * x[0] * x[1] * x[2] + 128 * E * K * zeta[0] ** 7 * x[0] * x[1] * x[2] + 96 * E * K * zeta[0] ** 5 * x[0] * x[1] * x[2] + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[0] ** 6 * x[1] + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[0] ** 5 * x[2] + complex(0, -3) * E * K ** 3 * zeta[0] ** 8 * x[1] + complex(0, -12) * E * K * zeta[0] ** 8 * x[1] ** 3 + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[0] ** 4 * x[1] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[0] ** 6 * x[1] + complex(0, 48) * K ** 2 * zeta[0] ** 6 * x[0] ** 2 * x[1] + complex(0, 1632) * zeta[0] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 96) * K ** 2 * zeta[0] ** 5 * x[0] ** 2 * x[2] + complex(0, 576) * zeta[0] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 1632) * zeta[0] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 96) * K ** 2 * zeta[0] ** 3 * x[0] ** 2 * x[2] + complex(0, -768) * zeta[0] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + complex(0, -16) * K ** 2 * zeta[0] ** 2 * x[0] ** 2 * x[1] + complex(0, -96) * zeta[0] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 32) * K ** 2 * zeta[0] * x[0] ** 2 * x[2] + complex(0, -192) * zeta[0] * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 2) * E * K ** 3 * k1 ** 2 * x[1] + complex(0, -2) * E * K ** 3 * zeta[0] ** 2 * x[1] + complex(0, -16) * E * K * zeta[0] ** 2 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 16) * K ** 2 * zeta[0] * x[1] ** 2 * x[2] + complex(0, 4) * E * K * x[0] ** 2 * x[1] + complex(0, 20) * K ** 2 * zeta[0] ** 8 * x[0] ** 2 * x[1] + complex(0, 32) * K ** 2 * zeta[0] ** 7 * x[0] ** 2 * x[2] + complex(0, 1152) * zeta[0] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[1] ** 3 + complex(0, -4) * E * K ** 3 * zeta[0] ** 7 * x[2] + complex(0, -16) * K ** 4 * k1 ** 4 * zeta[0] ** 3 * x[2] + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] ** 2 * x[2] + complex(0, 48) * E * K * zeta[0] ** 6 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 128) * E * K * zeta[0] ** 5 * x[0] ** 2 * x[2] + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] ** 2 * x[2] + complex(0, -8) * E * K * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[0] ** 3 * x[0] ** 2 * x[2] + complex(0, -16) * E * K * zeta[0] ** 2 * x[0] ** 2 * x[1] + complex(0, -64) * E * K * zeta[0] ** 7 * x[1] ** 2 * x[2] + complex(0, 160) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[1] ** 2 * x[2] + complex(0, 6) * E * K ** 3 * k1 ** 2 * zeta[0] ** 4 * x[1] + complex(0, -112) * E * K * zeta[0] ** 6 * x[1] * x[2] ** 2 + complex(0, 256) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] * x[2] ** 2 + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[0] ** 3 * x[2] + complex(0, 32) * E * K * zeta[0] ** 5 * x[1] ** 2 * x[2] + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[1] ** 2 * x[2] + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, -32) * E * K * zeta[0] ** 4 * x[1] * x[2] ** 2 + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 64) * E * K * zeta[0] ** 3 * x[1] ** 2 * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[0] * x[0] ** 2 * x[2] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[0] * x[1] ** 2 * x[2] + complex(0, 80) * E * K * zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, -32) * E * K * zeta[0] * x[1] ** 2 * x[2] + complex(0, 36) * E * K * zeta[0] ** 8 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[0] ** 7 * x[0] ** 2 * x[2] - 32 * x[0] ** 3 * x[2] ** 2 + 64 * zeta[0] ** 2 * x[0] ** 5 - 8 * K ** 2 * x[0] ** 3 - 16 * x[0] * x[1] ** 4 + 96 * zeta[0] ** 4 * x[0] ** 5 + 64 * zeta[0] ** 6 * x[0] ** 5 + 16 * zeta[0] ** 8 * x[0] ** 5 + K ** 4 * x[0] + complex(0, 4) * K ** 4 * zeta[0] ** 6 * x[1] + complex(0, -192) * zeta[0] ** 4 * x[0] ** 4 * x[1] + complex(0, -800) * zeta[0] ** 6 * x[1] ** 3 * x[2] ** 2 + complex(0, 576) * zeta[0] ** 5 * x[1] ** 4 * x[2] + complex(0, -1216) * zeta[0] ** 5 * x[1] ** 2 * x[2] ** 3 + complex(0, 6) * K ** 4 * zeta[0] ** 4 * x[1] + complex(0, 8) * K ** 2 * zeta[0] ** 4 * x[1] ** 3 + complex(0, 1248) * zeta[0] ** 4 * x[1] ** 3 * x[2] ** 2 + complex(0, -896) * zeta[0] ** 4 * x[1] * x[2] ** 4 + complex(0, -384) * zeta[0] ** 3 * x[1] ** 4 * x[2] + complex(0, 1) * K ** 4 * zeta[0] ** 8 * x[1] - 1152 * zeta[0] ** 5 * x[0] ** 3 * x[1] * x[2] - 384 * zeta[0] ** 3 * x[0] ** 3 * x[1] * x[2] - 640 * zeta[0] ** 7 * x[0] ** 3 * x[1] * x[2] - 16 * K ** 2 * zeta[0] ** 4 * x[0] * x[1] ** 2 + 64 * K ** 2 * zeta[0] ** 4 * x[0] * x[2] ** 2 - 480 * zeta[0] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 - 384 * zeta[0] ** 3 * x[0] * x[1] ** 3 * x[2] + 512 * zeta[0] ** 3 * x[0] * x[1] * x[2] ** 3 - 16 * K ** 2 * zeta[0] ** 2 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 864 * zeta[0] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + 256 * zeta[0] * x[0] * x[1] ** 3 * x[2] - 384 * zeta[0] * x[0] * x[1] * x[2] ** 3 + 896 * zeta[0] ** 7 * x[0] * x[1] ** 3 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[0] ** 2 * x[0] - 14 * K ** 4 * k1 ** 2 * zeta[0] ** 4 * x[0] + 16 * K ** 2 * zeta[0] ** 6 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[0] ** 6 * x[0] * x[2] ** 2 + 2016 * zeta[0] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 - 768 * zeta[0] ** 5 * x[0] * x[1] ** 3 * x[2] + 1920 * zeta[0] ** 5 * x[0] * x[1] * x[2] ** 3 - 10 * K ** 4 * k1 ** 2 * zeta[0] ** 2 * x[0] + 16 * K ** 4 * k1 ** 4 * zeta[0] ** 4 * x[0] - 6 * K ** 4 * k1 ** 2 * zeta[0] ** 6 * x[0] + 16 * K ** 2 * zeta[0] ** 8 * x[0] * x[1] ** 2 + 2 * E * K ** 3 * k1 ** 2 * x[0] + 4 * E * K * x[0] * x[1] ** 2 - 12 * E * K * zeta[0] ** 8 * x[0] ** 3 - 32 * E * K * zeta[0] ** 6 * x[0] ** 3 - 24 * E * K * zeta[0] ** 4 * x[0] ** 3 + 40 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] ** 3 - 8 * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + 24 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] ** 3 + 56 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] ** 3 + 3 * E * K ** 3 * zeta[0] ** 8 * x[0] + 8 * E * K ** 3 * zeta[0] ** 6 * x[0] + 6 * E * K ** 3 * zeta[0] ** 4 * x[0] + K ** 4 * zeta[0] ** 8 * x[0] + complex(0, 1) * K ** 4 * x[1] + complex(0, -4) * K ** 2 * x[1] ** 3 + complex(0, -32) * zeta[0] ** 8 * x[1] ** 5 + complex(0, 96) * zeta[0] ** 6 * x[1] ** 5 + complex(0, -96) * zeta[0] ** 4 * x[1] ** 5 + complex(0, -256) * zeta[0] ** 3 * x[2] ** 5 + complex(0, 32) * zeta[0] ** 2 * x[1] ** 5 + complex(0, 32) * x[1] ** 3 * x[2] ** 2 + complex(0, 32) * x[0] ** 4 * x[1] + complex(0, 32) * x[0] ** 2 * x[1] ** 3 - E * K ** 3 * x[0] + complex(0, 1152) * zeta[0] ** 3 * x[1] ** 2 * x[2] ** 3 + complex(0, 4) * K ** 4 * zeta[0] ** 2 * x[1] + complex(0, -480) * zeta[0] ** 2 * x[1] ** 3 * x[2] ** 2 + complex(0, 384) * zeta[0] ** 2 * x[1] * x[2] ** 4 + complex(0, 64) * zeta[0] * x[1] ** 4 * x[2] + complex(0, -192) * zeta[0] * x[1] ** 2 * x[2] ** 3 + complex(0, -1) * E * K ** 3 * x[1] + complex(0, 4) * E * K * x[1] ** 3 + complex(0, -96) * zeta[0] ** 8 * x[0] ** 4 * x[1] + complex(0, 256) * zeta[0] ** 8 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[0] ** 7 * x[0] ** 4 * x[2] + complex(0, -2) * K ** 4 * k1 ** 2 * x[1] + complex(0, -96) * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, -256) * zeta[0] ** 6 * x[0] ** 4 * x[1] + complex(0, -32) * zeta[0] ** 6 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[0] ** 5 * x[0] ** 4 * x[2] + complex(0, 704) * zeta[0] ** 5 * x[0] ** 2 * x[2] ** 3 + complex(0, -288) * zeta[0] ** 4 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[0] ** 3 * x[0] ** 4 * x[2] + complex(0, 896) * zeta[0] ** 3 * x[0] ** 2 * x[2] ** 3 + complex(0, 32) * zeta[0] ** 2 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[0] * x[0] ** 4 * x[2] + complex(0, 192) * zeta[0] * x[0] ** 2 * x[2] ** 3 + complex(0, -12) * K ** 2 * x[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * zeta[0] ** 8 * x[1] ** 3 + complex(0, -256) * zeta[0] ** 7 * x[1] ** 4 * x[2]) / (4 * zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[0] - K ** 2 * zeta[0] ** 3 + 4 * x[0] ** 2 * zeta[0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] ** 2 - 12 * zeta[0] ** 2 * x[1] * x[2] - K ** 2 * zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[0] - 8 * zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[1][0] = complex(0, 2) * (-18 * E * K ** 3 * k1 ** 2 * zeta[1] ** 4 * x[0] + 112 * E * K * zeta[1] ** 6 * x[0] * x[2] ** 2 - 10 * E * K ** 3 * k1 ** 2 * zeta[1] ** 6 * x[0] + 36 * E * K * zeta[1] ** 8 * x[0] * x[1] ** 2 + 48 * K ** 2 * zeta[1] ** 7 * x[0] * x[1] * x[2] - 224 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[2] ** 2 + 80 * K ** 2 * zeta[1] ** 5 * x[0] * x[1] * x[2] - 88 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] * x[1] ** 2 + 56 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] * x[1] ** 2 - 160 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] * x[2] ** 2 + 16 * K ** 2 * zeta[1] ** 3 * x[0] * x[1] * x[2] - 16 * K ** 2 * zeta[1] * x[0] * x[1] * x[2] - 6 * E * K ** 3 * k1 ** 2 * zeta[1] ** 2 * x[0] - 40 * E * K * zeta[1] ** 4 * x[0] * x[1] ** 2 + 160 * E * K * zeta[1] ** 4 * x[0] * x[2] ** 2 + 48 * E * K * zeta[1] ** 2 * x[0] * x[2] ** 2 + 40 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[1] ** 2 - 288 * zeta[1] ** 6 * x[0] ** 3 * x[1] ** 2 - 416 * zeta[1] ** 6 * x[0] ** 3 * x[2] ** 2 + 96 * zeta[1] ** 4 * x[0] ** 3 * x[1] ** 2 - 864 * zeta[1] ** 4 * x[0] ** 3 * x[2] ** 2 - 224 * zeta[1] ** 8 * x[0] ** 3 * x[1] ** 2 + 160 * zeta[1] ** 2 * x[0] ** 3 * x[1] ** 2 - 480 * zeta[1] ** 2 * x[0] ** 3 * x[2] ** 2 - 8 * K ** 2 * zeta[1] ** 8 * x[0] ** 3 + 144 * zeta[1] ** 8 * x[0] * x[1] ** 4 + 4 * K ** 4 * zeta[1] ** 6 * x[0] - 224 * zeta[1] ** 6 * x[0] * x[1] ** 4 + 6 * K ** 4 * zeta[1] ** 4 * x[0] + 640 * zeta[1] ** 4 * x[0] * x[2] ** 4 + 4 * K ** 4 * zeta[1] ** 2 * x[0] + 96 * zeta[1] ** 2 * x[0] * x[1] ** 4 + 384 * zeta[1] ** 2 * x[0] * x[2] ** 4 - 48 * K ** 2 * zeta[1] ** 4 * x[0] ** 3 - 32 * K ** 2 * zeta[1] ** 2 * x[0] ** 3 - 32 * K ** 2 * zeta[1] ** 6 * x[0] ** 3 - 2 * K ** 4 * k1 ** 2 * x[0] + 8 * K ** 2 * k1 ** 2 * x[0] ** 3 + 96 * x[0] * x[1] ** 2 * x[2] ** 2 + 4 * E * K * x[0] ** 3 + 16 * x[0] ** 5 + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[1] ** 2 * x[1] + complex(0, -32) * E * K * zeta[1] ** 4 * x[1] * x[2] ** 2 + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] * x[2] ** 2 - 64 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] * x[1] * x[2] + 96 * K ** 2 * k1 ** 2 * zeta[1] * x[0] * x[1] * x[2] - 288 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] * x[1] * x[2] + 96 * E * K * zeta[1] ** 5 * x[0] * x[1] * x[2] - 64 * E * K * zeta[1] ** 3 * x[0] * x[1] * x[2] - 32 * E * K * zeta[1] * x[0] * x[1] * x[2] + 128 * E * K * zeta[1] ** 7 * x[0] * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + complex(0, 2) * E * K ** 3 * k1 ** 2 * x[1] + complex(0, 4) * E * K * x[0] ** 2 * x[1] + complex(0, 96) * K ** 2 * zeta[1] ** 3 * x[0] ** 2 * x[2] - 32 * x[0] ** 3 * x[2] ** 2 - 8 * K ** 2 * x[0] ** 3 - 16 * x[0] * x[1] ** 4 + 96 * zeta[1] ** 4 * x[0] ** 5 + 64 * zeta[1] ** 2 * x[0] ** 5 + 64 * zeta[1] ** 6 * x[0] ** 5 + 16 * zeta[1] ** 8 * x[0] ** 5 + K ** 4 * x[0] - 640 * zeta[1] ** 7 * x[0] ** 3 * x[1] * x[2] - 1152 * zeta[1] ** 5 * x[0] ** 3 * x[1] * x[2] + 6 * E * K ** 3 * zeta[1] ** 4 * x[0] + 3 * E * K ** 3 * zeta[1] ** 8 * x[0] + 8 * E * K ** 3 * zeta[1] ** 6 * x[0] + 16 * K ** 4 * k1 ** 4 * zeta[1] ** 4 * x[0] - 6 * K ** 4 * k1 ** 2 * zeta[1] ** 6 * x[0] + 16 * K ** 2 * zeta[1] ** 8 * x[0] * x[1] ** 2 + complex(0, 4) * K ** 4 * zeta[1] ** 6 * x[1] + complex(0, -192) * zeta[1] ** 4 * x[0] ** 4 * x[1] + complex(0, -800) * zeta[1] ** 6 * x[1] ** 3 * x[2] ** 2 + complex(0, 576) * zeta[1] ** 5 * x[1] ** 4 * x[2] + complex(0, -1216) * zeta[1] ** 5 * x[1] ** 2 * x[2] ** 3 + complex(0, 6) * K ** 4 * zeta[1] ** 4 * x[1] + complex(0, 8) * K ** 2 * zeta[1] ** 4 * x[1] ** 3 + complex(0, 1248) * zeta[1] ** 4 * x[1] ** 3 * x[2] ** 2 + complex(0, -896) * zeta[1] ** 4 * x[1] * x[2] ** 4 + complex(0, -384) * zeta[1] ** 3 * x[1] ** 4 * x[2] + complex(0, 1152) * zeta[1] ** 3 * x[1] ** 2 * x[2] ** 3 + complex(0, 4) * K ** 4 * zeta[1] ** 2 * x[1] + complex(0, -480) * zeta[1] ** 2 * x[1] ** 3 * x[2] ** 2 + complex(0, 384) * zeta[1] ** 2 * x[1] * x[2] ** 4 + complex(0, 64) * zeta[1] * x[1] ** 4 * x[2] + complex(0, -192) * zeta[1] * x[1] ** 2 * x[2] ** 3 + complex(0, -4) * K ** 2 * zeta[1] ** 8 * x[1] ** 3 + K ** 4 * zeta[1] ** 8 * x[0] + complex(0, 1) * K ** 4 * zeta[1] ** 8 * x[1] + complex(0, -288) * zeta[1] ** 4 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[1] ** 3 * x[0] ** 4 * x[2] + complex(0, 896) * zeta[1] ** 3 * x[0] ** 2 * x[2] ** 3 + complex(0, 32) * zeta[1] ** 2 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[1] * x[0] ** 4 * x[2] + complex(0, 192) * zeta[1] * x[0] ** 2 * x[2] ** 3 + complex(0, -32) * zeta[1] ** 8 * x[1] ** 5 + complex(0, 96) * zeta[1] ** 6 * x[1] ** 5 + complex(0, -96) * zeta[1] ** 4 * x[1] ** 5 + complex(0, -256) * zeta[1] ** 3 * x[2] ** 5 + complex(0, 32) * zeta[1] ** 2 * x[1] ** 5 + complex(0, -96) * zeta[1] ** 8 * x[0] ** 4 * x[1] + complex(0, 256) * zeta[1] ** 8 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[1] ** 7 * x[0] ** 4 * x[2] + complex(0, -256) * zeta[1] ** 6 * x[0] ** 4 * x[1] + complex(0, -32) * zeta[1] ** 6 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[1] ** 5 * x[0] ** 4 * x[2] + complex(0, 704) * zeta[1] ** 5 * x[0] ** 2 * x[2] ** 3 + complex(0, -256) * zeta[1] ** 7 * x[1] ** 4 * x[2] + 2 * E * K ** 3 * k1 ** 2 * x[0] + 4 * E * K * x[0] * x[1] ** 2 - 8 * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + 24 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] ** 3 + 56 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] ** 3 + 40 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] ** 3 - 480 * zeta[1] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 - 384 * zeta[1] ** 3 * x[0] * x[1] ** 3 * x[2] + 512 * zeta[1] ** 3 * x[0] * x[1] * x[2] ** 3 - 16 * K ** 2 * zeta[1] ** 2 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[1] ** 2 * x[0] * x[2] ** 2 - 864 * zeta[1] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + 256 * zeta[1] * x[0] * x[1] ** 3 * x[2] - 384 * zeta[1] * x[0] * x[1] * x[2] ** 3 + 896 * zeta[1] ** 7 * x[0] * x[1] ** 3 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[1] ** 2 * x[0] - 14 * K ** 4 * k1 ** 2 * zeta[1] ** 4 * x[0] + 16 * K ** 2 * zeta[1] ** 6 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[1] ** 6 * x[0] * x[2] ** 2 + 2016 * zeta[1] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 - 768 * zeta[1] ** 5 * x[0] * x[1] ** 3 * x[2] + 1920 * zeta[1] ** 5 * x[0] * x[1] * x[2] ** 3 - 10 * K ** 4 * k1 ** 2 * zeta[1] ** 2 * x[0] - 16 * K ** 2 * zeta[1] ** 4 * x[0] * x[1] ** 2 + 64 * K ** 2 * zeta[1] ** 4 * x[0] * x[2] ** 2 - 32 * E * K * zeta[1] ** 6 * x[0] ** 3 - 24 * E * K * zeta[1] ** 4 * x[0] ** 3 - 12 * E * K * zeta[1] ** 8 * x[0] ** 3 + 128 * zeta[1] * x[0] ** 3 * x[1] * x[2] - 384 * zeta[1] ** 3 * x[0] ** 3 * x[1] * x[2] + complex(0, -768) * zeta[1] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, -16) * K ** 2 * zeta[1] ** 2 * x[0] ** 2 * x[1] + complex(0, -96) * zeta[1] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 32) * K ** 2 * zeta[1] * x[0] ** 2 * x[2] + complex(0, -192) * zeta[1] * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 48) * K ** 2 * zeta[1] ** 6 * x[0] ** 2 * x[1] + complex(0, 1632) * zeta[1] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 96) * K ** 2 * zeta[1] ** 5 * x[0] ** 2 * x[2] + complex(0, 576) * zeta[1] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 1632) * zeta[1] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[1] ** 4 * x[1] + complex(0, -2) * E * K ** 3 * zeta[1] ** 2 * x[1] + complex(0, -16) * E * K * zeta[1] ** 2 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, 16) * K ** 2 * zeta[1] * x[1] ** 2 * x[2] + complex(0, 20) * K ** 2 * zeta[1] ** 8 * x[0] ** 2 * x[1] + complex(0, 32) * K ** 2 * zeta[1] ** 7 * x[0] ** 2 * x[2] + complex(0, 1152) * zeta[1] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, -16) * K ** 2 * zeta[1] ** 5 * x[1] ** 2 * x[2] + complex(0, -4) * E * K ** 3 * zeta[1] ** 4 * x[1] + complex(0, 8) * E * K * zeta[1] ** 4 * x[1] ** 3 + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[1] ** 2 * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] ** 3 + complex(0, 24) * K ** 2 * zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, -32) * K ** 2 * zeta[1] ** 4 * x[1] * x[2] ** 2 + complex(0, -4) * E * K ** 3 * zeta[1] ** 3 * x[2] + complex(0, -64) * E * K * zeta[1] ** 3 * x[2] ** 3 + complex(0, 16) * K ** 2 * zeta[1] ** 3 * x[1] ** 2 * x[2] + complex(0, -3) * E * K ** 3 * zeta[1] ** 8 * x[1] + complex(0, -12) * E * K * zeta[1] ** 8 * x[1] ** 3 + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[1] ** 4 * x[1] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[1] ** 6 * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[1] ** 3 + complex(0, -4) * E * K ** 3 * zeta[1] ** 7 * x[2] + complex(0, -16) * K ** 4 * k1 ** 4 * zeta[1] ** 3 * x[2] + complex(0, -16) * K ** 2 * zeta[1] ** 7 * x[1] ** 2 * x[2] + complex(0, -6) * E * K ** 3 * zeta[1] ** 6 * x[1] + complex(0, 16) * E * K * zeta[1] ** 6 * x[1] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[1] ** 2 * x[1] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[1] ** 6 * x[1] * x[2] ** 2 + complex(0, -8) * E * K ** 3 * zeta[1] ** 5 * x[2] + complex(0, -64) * E * K * zeta[1] ** 5 * x[2] ** 3 + complex(0, 128) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[2] ** 3 + complex(0, 64) * E * K * zeta[1] ** 3 * x[1] ** 2 * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[1] * x[0] ** 2 * x[2] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[1] * x[1] ** 2 * x[2] + complex(0, 80) * E * K * zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -32) * E * K * zeta[1] * x[1] ** 2 * x[2] + complex(0, 36) * E * K * zeta[1] ** 8 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[1] ** 7 * x[0] ** 2 * x[2] + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] ** 2 * x[2] + complex(0, 48) * E * K * zeta[1] ** 6 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 128) * E * K * zeta[1] ** 5 * x[0] ** 2 * x[2] + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] ** 2 * x[2] + complex(0, -8) * E * K * zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[1] ** 3 * x[0] ** 2 * x[2] + complex(0, -16) * E * K * zeta[1] ** 2 * x[0] ** 2 * x[1] + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[1] ** 6 * x[1] + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[1] ** 5 * x[2] + complex(0, -64) * E * K * zeta[1] ** 7 * x[1] ** 2 * x[2] + complex(0, 160) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[1] ** 2 * x[2] + complex(0, 6) * E * K ** 3 * k1 ** 2 * zeta[1] ** 4 * x[1] + complex(0, -112) * E * K * zeta[1] ** 6 * x[1] * x[2] ** 2 + complex(0, 256) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] * x[2] ** 2 + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[1] ** 3 * x[2] + complex(0, 32) * E * K * zeta[1] ** 5 * x[1] ** 2 * x[2] + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[1] ** 2 * x[2] + complex(0, 1) * K ** 4 * x[1] + complex(0, -4) * K ** 2 * x[1] ** 3 + complex(0, 32) * x[1] ** 3 * x[2] ** 2 + complex(0, 32) * x[0] ** 4 * x[1] + complex(0, 32) * x[0] ** 2 * x[1] ** 3 - E * K ** 3 * x[0] + complex(0, -1) * E * K ** 3 * x[1] + complex(0, 4) * E * K * x[1] ** 3 + complex(0, -2) * K ** 4 * k1 ** 2 * x[1] + complex(0, -96) * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, -12) * K ** 2 * x[0] ** 2 * x[1]) / (4 * zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[1] - K ** 2 * zeta[1] ** 3 + 4 * x[0] ** 2 * zeta[1] + complex(0, -12) * zeta[1] ** 2 * x[0] * x[2] - 4 * zeta[1] ** 3 * x[1] ** 2 - 12 * zeta[1] ** 2 * x[1] * x[2] - K ** 2 * zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[1] - 8 * zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[2][0] = complex(0, 2) * (-224 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[2] ** 2 + 80 * K ** 2 * zeta[2] ** 5 * x[0] * x[1] * x[2] + 56 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] * x[1] ** 2 - 160 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] * x[2] ** 2 + 16 * K ** 2 * zeta[2] ** 3 * x[0] * x[1] * x[2] - 16 * K ** 2 * zeta[2] * x[0] * x[1] * x[2] - 88 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] * x[1] ** 2 + 48 * K ** 2 * zeta[2] ** 7 * x[0] * x[1] * x[2] + 40 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[1] ** 2 - 18 * E * K ** 3 * k1 ** 2 * zeta[2] ** 4 * x[0] + 112 * E * K * zeta[2] ** 6 * x[0] * x[2] ** 2 - 6 * E * K ** 3 * k1 ** 2 * zeta[2] ** 2 * x[0] - 40 * E * K * zeta[2] ** 4 * x[0] * x[1] ** 2 + 160 * E * K * zeta[2] ** 4 * x[0] * x[2] ** 2 + 48 * E * K * zeta[2] ** 2 * x[0] * x[2] ** 2 - 10 * E * K ** 3 * k1 ** 2 * zeta[2] ** 6 * x[0] + 36 * E * K * zeta[2] ** 8 * x[0] * x[1] ** 2 + 96 * zeta[2] ** 4 * x[0] ** 3 * x[1] ** 2 - 864 * zeta[2] ** 4 * x[0] ** 3 * x[2] ** 2 + 160 * zeta[2] ** 2 * x[0] ** 3 * x[1] ** 2 - 480 * zeta[2] ** 2 * x[0] ** 3 * x[2] ** 2 - 224 * zeta[2] ** 8 * x[0] ** 3 * x[1] ** 2 - 288 * zeta[2] ** 6 * x[0] ** 3 * x[1] ** 2 - 416 * zeta[2] ** 6 * x[0] ** 3 * x[2] ** 2 - 8 * K ** 2 * zeta[2] ** 8 * x[0] ** 3 - 32 * K ** 2 * zeta[2] ** 6 * x[0] ** 3 - 48 * K ** 2 * zeta[2] ** 4 * x[0] ** 3 - 32 * K ** 2 * zeta[2] ** 2 * x[0] ** 3 + 96 * zeta[2] ** 2 * x[0] * x[1] ** 4 + 384 * zeta[2] ** 2 * x[0] * x[2] ** 4 + 144 * zeta[2] ** 8 * x[0] * x[1] ** 4 + 4 * K ** 4 * zeta[2] ** 6 * x[0] - 224 * zeta[2] ** 6 * x[0] * x[1] ** 4 + 6 * K ** 4 * zeta[2] ** 4 * x[0] + 640 * zeta[2] ** 4 * x[0] * x[2] ** 4 - 2 * K ** 4 * k1 ** 2 * x[0] + 8 * K ** 2 * k1 ** 2 * x[0] ** 3 + 96 * x[0] * x[1] ** 2 * x[2] ** 2 + 4 * E * K * x[0] ** 3 + 16 * x[0] ** 5 + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[2] ** 2 * x[1] + complex(0, -32) * E * K * zeta[2] ** 4 * x[1] * x[2] ** 2 + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] * x[2] ** 2 + complex(0, 1152) * zeta[2] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 48) * K ** 2 * zeta[2] ** 6 * x[0] ** 2 * x[1] + complex(0, 1632) * zeta[2] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 64) * E * K * zeta[2] ** 3 * x[1] ** 2 * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[2] * x[0] ** 2 * x[2] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[2] * x[1] ** 2 * x[2] + complex(0, 80) * E * K * zeta[2] ** 2 * x[1] * x[2] ** 2 + complex(0, -32) * E * K * zeta[2] * x[1] ** 2 * x[2] + complex(0, 36) * E * K * zeta[2] ** 8 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[2] ** 7 * x[0] ** 2 * x[2] + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] ** 2 * x[2] + complex(0, 48) * E * K * zeta[2] ** 6 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] ** 2 * x[1] + complex(0, 128) * E * K * zeta[2] ** 5 * x[0] ** 2 * x[2] + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] ** 2 * x[2] + complex(0, -8) * E * K * zeta[2] ** 4 * x[0] ** 2 * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[2] ** 3 * x[0] ** 2 * x[2] + complex(0, -16) * E * K * zeta[2] ** 2 * x[0] ** 2 * x[1] + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[2] ** 6 * x[1] + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[2] ** 5 * x[2] + complex(0, -64) * E * K * zeta[2] ** 7 * x[1] ** 2 * x[2] + complex(0, 160) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[1] ** 2 * x[2] + complex(0, 6) * E * K ** 3 * k1 ** 2 * zeta[2] ** 4 * x[1] + complex(0, -112) * E * K * zeta[2] ** 6 * x[1] * x[2] ** 2 + complex(0, 256) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] * x[2] ** 2 + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[2] ** 3 * x[2] + complex(0, 32) * E * K * zeta[2] ** 5 * x[1] ** 2 * x[2] + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[1] ** 2 * x[2] + complex(0, -16) * E * K * zeta[2] ** 2 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[2] ** 2 * x[1] * x[2] ** 2 + complex(0, 16) * K ** 2 * zeta[2] * x[1] ** 2 * x[2] + complex(0, 20) * K ** 2 * zeta[2] ** 8 * x[0] ** 2 * x[1] + complex(0, 32) * K ** 2 * zeta[2] ** 7 * x[0] ** 2 * x[2] + complex(0, -4) * E * K ** 3 * zeta[2] ** 7 * x[2] + complex(0, -16) * K ** 4 * k1 ** 4 * zeta[2] ** 3 * x[2] + complex(0, -16) * K ** 2 * zeta[2] ** 7 * x[1] ** 2 * x[2] + complex(0, -6) * E * K ** 3 * zeta[2] ** 6 * x[1] + complex(0, 16) * E * K * zeta[2] ** 6 * x[1] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[2] ** 2 * x[1] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[2] ** 6 * x[1] * x[2] ** 2 + complex(0, -8) * E * K ** 3 * zeta[2] ** 5 * x[2] + complex(0, -64) * E * K * zeta[2] ** 5 * x[2] ** 3 + complex(0, 128) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[2] ** 3 + complex(0, -16) * K ** 2 * zeta[2] ** 5 * x[1] ** 2 * x[2] + complex(0, -4) * E * K ** 3 * zeta[2] ** 4 * x[1] + complex(0, 8) * E * K * zeta[2] ** 4 * x[1] ** 3 + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[2] ** 2 * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] ** 3 + complex(0, 24) * K ** 2 * zeta[2] ** 4 * x[0] ** 2 * x[1] + complex(0, -32) * K ** 2 * zeta[2] ** 4 * x[1] * x[2] ** 2 + complex(0, -4) * E * K ** 3 * zeta[2] ** 3 * x[2] + complex(0, -64) * E * K * zeta[2] ** 3 * x[2] ** 3 + complex(0, 16) * K ** 2 * zeta[2] ** 3 * x[1] ** 2 * x[2] + complex(0, -2) * E * K ** 3 * zeta[2] ** 2 * x[1] + complex(0, -3) * E * K ** 3 * zeta[2] ** 8 * x[1] + complex(0, -12) * E * K * zeta[2] ** 8 * x[1] ** 3 + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[2] ** 4 * x[1] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[2] ** 6 * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[1] ** 3 + complex(0, 96) * K ** 2 * zeta[2] ** 5 * x[0] ** 2 * x[2] + complex(0, 576) * zeta[2] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 1632) * zeta[2] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 96) * K ** 2 * zeta[2] ** 3 * x[0] ** 2 * x[2] + complex(0, -768) * zeta[2] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, -16) * K ** 2 * zeta[2] ** 2 * x[0] ** 2 * x[1] + complex(0, -96) * zeta[2] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 32) * K ** 2 * zeta[2] * x[0] ** 2 * x[2] + complex(0, -192) * zeta[2] * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[2] ** 4 * x[1] - 64 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] * x[1] * x[2] + 96 * K ** 2 * k1 ** 2 * zeta[2] * x[0] * x[1] * x[2] - 288 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] * x[1] * x[2] + 96 * E * K * zeta[2] ** 5 * x[0] * x[1] * x[2] - 64 * E * K * zeta[2] ** 3 * x[0] * x[1] * x[2] - 32 * E * K * zeta[2] * x[0] * x[1] * x[2] + 128 * E * K * zeta[2] ** 7 * x[0] * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + complex(0, 2) * E * K ** 3 * k1 ** 2 * x[1] + complex(0, 4) * E * K * x[0] ** 2 * x[1] + 4 * K ** 4 * zeta[2] ** 2 * x[0] - 32 * x[0] ** 3 * x[2] ** 2 - 8 * K ** 2 * x[0] ** 3 - 16 * x[0] * x[1] ** 4 + 64 * zeta[2] ** 2 * x[0] ** 5 + 96 * zeta[2] ** 4 * x[0] ** 5 + 64 * zeta[2] ** 6 * x[0] ** 5 + 16 * zeta[2] ** 8 * x[0] ** 5 + K ** 4 * x[0] + 56 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] ** 3 + 40 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] ** 3 + 24 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] ** 3 - 640 * zeta[2] ** 7 * x[0] ** 3 * x[1] * x[2] - 1152 * zeta[2] ** 5 * x[0] ** 3 * x[1] * x[2] - 384 * zeta[2] ** 3 * x[0] ** 3 * x[1] * x[2] + 128 * zeta[2] * x[0] ** 3 * x[1] * x[2] + 6 * E * K ** 3 * zeta[2] ** 4 * x[0] + 3 * E * K ** 3 * zeta[2] ** 8 * x[0] + 8 * E * K ** 3 * zeta[2] ** 6 * x[0] - 24 * E * K * zeta[2] ** 4 * x[0] ** 3 - 12 * E * K * zeta[2] ** 8 * x[0] ** 3 - 32 * E * K * zeta[2] ** 6 * x[0] ** 3 - 10 * K ** 4 * k1 ** 2 * zeta[2] ** 2 * x[0] - 16 * K ** 2 * zeta[2] ** 4 * x[0] * x[1] ** 2 + 64 * K ** 2 * zeta[2] ** 4 * x[0] * x[2] ** 2 - 480 * zeta[2] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 - 384 * zeta[2] ** 3 * x[0] * x[1] ** 3 * x[2] + 512 * zeta[2] ** 3 * x[0] * x[1] * x[2] ** 3 - 16 * K ** 2 * zeta[2] ** 2 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[2] ** 2 * x[0] * x[2] ** 2 - 864 * zeta[2] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + 256 * zeta[2] * x[0] * x[1] ** 3 * x[2] - 384 * zeta[2] * x[0] * x[1] * x[2] ** 3 + 16 * K ** 4 * k1 ** 4 * zeta[2] ** 4 * x[0] - 6 * K ** 4 * k1 ** 2 * zeta[2] ** 6 * x[0] + 16 * K ** 2 * zeta[2] ** 8 * x[0] * x[1] ** 2 + 896 * zeta[2] ** 7 * x[0] * x[1] ** 3 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[2] ** 2 * x[0] - 14 * K ** 4 * k1 ** 2 * zeta[2] ** 4 * x[0] + 16 * K ** 2 * zeta[2] ** 6 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[2] ** 6 * x[0] * x[2] ** 2 + 2016 * zeta[2] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 - 768 * zeta[2] ** 5 * x[0] * x[1] ** 3 * x[2] + 1920 * zeta[2] ** 5 * x[0] * x[1] * x[2] ** 3 + complex(0, -96) * zeta[2] ** 4 * x[1] ** 5 + complex(0, -256) * zeta[2] ** 3 * x[2] ** 5 + complex(0, 32) * zeta[2] ** 2 * x[1] ** 5 + complex(0, -32) * zeta[2] ** 8 * x[1] ** 5 + complex(0, 96) * zeta[2] ** 6 * x[1] ** 5 + complex(0, 704) * zeta[2] ** 5 * x[0] ** 2 * x[2] ** 3 + complex(0, -288) * zeta[2] ** 4 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[2] ** 3 * x[0] ** 4 * x[2] + complex(0, 896) * zeta[2] ** 3 * x[0] ** 2 * x[2] ** 3 + complex(0, 32) * zeta[2] ** 2 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[2] * x[0] ** 4 * x[2] + complex(0, 192) * zeta[2] * x[0] ** 2 * x[2] ** 3 + complex(0, -4) * K ** 2 * zeta[2] ** 8 * x[1] ** 3 + complex(0, -256) * zeta[2] ** 7 * x[1] ** 4 * x[2] + complex(0, 4) * K ** 4 * zeta[2] ** 6 * x[1] + complex(0, -192) * zeta[2] ** 4 * x[0] ** 4 * x[1] + complex(0, -800) * zeta[2] ** 6 * x[1] ** 3 * x[2] ** 2 + complex(0, 576) * zeta[2] ** 5 * x[1] ** 4 * x[2] + complex(0, -1216) * zeta[2] ** 5 * x[1] ** 2 * x[2] ** 3 + complex(0, 6) * K ** 4 * zeta[2] ** 4 * x[1] + complex(0, 8) * K ** 2 * zeta[2] ** 4 * x[1] ** 3 + complex(0, 1248) * zeta[2] ** 4 * x[1] ** 3 * x[2] ** 2 + complex(0, -896) * zeta[2] ** 4 * x[1] * x[2] ** 4 + complex(0, -384) * zeta[2] ** 3 * x[1] ** 4 * x[2] + complex(0, 1152) * zeta[2] ** 3 * x[1] ** 2 * x[2] ** 3 + complex(0, 1) * K ** 4 * zeta[2] ** 8 * x[1] + complex(0, 4) * K ** 4 * zeta[2] ** 2 * x[1] + complex(0, -480) * zeta[2] ** 2 * x[1] ** 3 * x[2] ** 2 + complex(0, 384) * zeta[2] ** 2 * x[1] * x[2] ** 4 + complex(0, 64) * zeta[2] * x[1] ** 4 * x[2] + complex(0, -192) * zeta[2] * x[1] ** 2 * x[2] ** 3 + complex(0, -96) * zeta[2] ** 8 * x[0] ** 4 * x[1] + complex(0, 256) * zeta[2] ** 8 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[2] ** 7 * x[0] ** 4 * x[2] + complex(0, -256) * zeta[2] ** 6 * x[0] ** 4 * x[1] + complex(0, -32) * zeta[2] ** 6 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[2] ** 5 * x[0] ** 4 * x[2] + K ** 4 * zeta[2] ** 8 * x[0] + 2 * E * K ** 3 * k1 ** 2 * x[0] + 4 * E * K * x[0] * x[1] ** 2 - 8 * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + complex(0, 1) * K ** 4 * x[1] + complex(0, -4) * K ** 2 * x[1] ** 3 + complex(0, 32) * x[1] ** 3 * x[2] ** 2 + complex(0, 32) * x[0] ** 4 * x[1] + complex(0, 32) * x[0] ** 2 * x[1] ** 3 - E * K ** 3 * x[0] + complex(0, -1) * E * K ** 3 * x[1] + complex(0, 4) * E * K * x[1] ** 3 + complex(0, -2) * K ** 4 * k1 ** 2 * x[1] + complex(0, -96) * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, -12) * K ** 2 * x[0] ** 2 * x[1]) / (4 * zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[2] - K ** 2 * zeta[2] ** 3 + 4 * x[0] ** 2 * zeta[2] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] ** 2 - 12 * zeta[2] ** 2 * x[1] * x[2] - K ** 2 * zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[2] - 8 * zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[3][0] = complex(0, 2) * (40 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[1] ** 2 + 56 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] * x[1] ** 2 - 160 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] * x[2] ** 2 + 16 * K ** 2 * zeta[3] ** 3 * x[0] * x[1] * x[2] - 16 * K ** 2 * zeta[3] * x[0] * x[1] * x[2] + 48 * K ** 2 * zeta[3] ** 7 * x[0] * x[1] * x[2] - 224 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[2] ** 2 + 80 * K ** 2 * zeta[3] ** 5 * x[0] * x[1] * x[2] - 88 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] * x[1] ** 2 + 48 * E * K * zeta[3] ** 2 * x[0] * x[2] ** 2 - 18 * E * K ** 3 * k1 ** 2 * zeta[3] ** 4 * x[0] + 112 * E * K * zeta[3] ** 6 * x[0] * x[2] ** 2 - 6 * E * K ** 3 * k1 ** 2 * zeta[3] ** 2 * x[0] - 40 * E * K * zeta[3] ** 4 * x[0] * x[1] ** 2 + 160 * E * K * zeta[3] ** 4 * x[0] * x[2] ** 2 - 10 * E * K ** 3 * k1 ** 2 * zeta[3] ** 6 * x[0] + 36 * E * K * zeta[3] ** 8 * x[0] * x[1] ** 2 - 2 * K ** 4 * k1 ** 2 * x[0] + 8 * K ** 2 * k1 ** 2 * x[0] ** 3 + 96 * x[0] * x[1] ** 2 * x[2] ** 2 + 4 * E * K * x[0] ** 3 + 16 * x[0] ** 5 + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[3] ** 4 * x[1] + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[3] ** 6 * x[1] + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[3] ** 5 * x[2] + complex(0, -64) * E * K * zeta[3] ** 7 * x[1] ** 2 * x[2] + complex(0, 160) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[1] ** 2 * x[2] + complex(0, 6) * E * K ** 3 * k1 ** 2 * zeta[3] ** 4 * x[1] + complex(0, -112) * E * K * zeta[3] ** 6 * x[1] * x[2] ** 2 + complex(0, 256) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] * x[2] ** 2 + complex(0, 16) * E * K ** 3 * k1 ** 2 * zeta[3] ** 3 * x[2] + complex(0, 32) * E * K * zeta[3] ** 5 * x[1] ** 2 * x[2] + complex(0, 96) * K ** 2 * zeta[3] ** 5 * x[0] ** 2 * x[2] + complex(0, 576) * zeta[3] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 16) * E * K * zeta[3] ** 6 * x[1] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[3] ** 2 * x[1] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[3] ** 6 * x[1] * x[2] ** 2 + complex(0, -8) * E * K ** 3 * zeta[3] ** 5 * x[2] + complex(0, -64) * E * K * zeta[3] ** 5 * x[2] ** 3 + complex(0, 128) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[2] ** 3 + complex(0, -16) * K ** 2 * zeta[3] ** 5 * x[1] ** 2 * x[2] + complex(0, -4) * E * K ** 3 * zeta[3] ** 4 * x[1] + complex(0, 8) * E * K * zeta[3] ** 4 * x[1] ** 3 + complex(0, -6) * K ** 4 * k1 ** 2 * zeta[3] ** 2 * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] ** 3 + complex(0, 24) * K ** 2 * zeta[3] ** 4 * x[0] ** 2 * x[1] + complex(0, -32) * K ** 2 * zeta[3] ** 4 * x[1] * x[2] ** 2 + complex(0, -4) * E * K ** 3 * zeta[3] ** 3 * x[2] + complex(0, -64) * E * K * zeta[3] ** 3 * x[2] ** 3 + complex(0, 16) * K ** 2 * zeta[3] ** 3 * x[1] ** 2 * x[2] + complex(0, -2) * E * K ** 3 * zeta[3] ** 2 * x[1] + complex(0, -16) * E * K * zeta[3] ** 2 * x[1] ** 3 + complex(0, -16) * K ** 2 * zeta[3] ** 2 * x[1] * x[2] ** 2 + complex(0, 16) * K ** 2 * zeta[3] * x[1] ** 2 * x[2] + complex(0, -3) * E * K ** 3 * zeta[3] ** 8 * x[1] + complex(0, -12) * E * K * zeta[3] ** 8 * x[1] ** 3 + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[3] ** 4 * x[1] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[3] ** 6 * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[1] ** 3 + complex(0, -4) * E * K ** 3 * zeta[3] ** 7 * x[2] + complex(0, -16) * K ** 4 * k1 ** 4 * zeta[3] ** 3 * x[2] + complex(0, -16) * K ** 2 * zeta[3] ** 7 * x[1] ** 2 * x[2] + complex(0, -6) * E * K ** 3 * zeta[3] ** 6 * x[1] + complex(0, 1632) * zeta[3] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 96) * K ** 2 * zeta[3] ** 3 * x[0] ** 2 * x[2] + complex(0, -768) * zeta[3] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, -16) * K ** 2 * zeta[3] ** 2 * x[0] ** 2 * x[1] + complex(0, -96) * zeta[3] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 32) * K ** 2 * zeta[3] * x[0] ** 2 * x[2] + complex(0, -192) * zeta[3] * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 20) * K ** 2 * zeta[3] ** 8 * x[0] ** 2 * x[1] + complex(0, 32) * K ** 2 * zeta[3] ** 7 * x[0] ** 2 * x[2] + complex(0, 1152) * zeta[3] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] + complex(0, 48) * K ** 2 * zeta[3] ** 6 * x[0] ** 2 * x[1] + complex(0, 1632) * zeta[3] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[1] ** 2 * x[2] + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[3] ** 2 * x[1] + complex(0, -32) * E * K * zeta[3] ** 4 * x[1] * x[2] ** 2 + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] * x[2] ** 2 + complex(0, 64) * E * K * zeta[3] ** 3 * x[1] ** 2 * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[3] * x[0] ** 2 * x[2] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[3] * x[1] ** 2 * x[2] + complex(0, 80) * E * K * zeta[3] ** 2 * x[1] * x[2] ** 2 + complex(0, -32) * E * K * zeta[3] * x[1] ** 2 * x[2] + complex(0, 36) * E * K * zeta[3] ** 8 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[3] ** 7 * x[0] ** 2 * x[2] + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] ** 2 * x[2] + complex(0, 48) * E * K * zeta[3] ** 6 * x[0] ** 2 * x[1] + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] ** 2 * x[1] + complex(0, 128) * E * K * zeta[3] ** 5 * x[0] ** 2 * x[2] + complex(0, -192) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] ** 2 * x[2] + complex(0, -8) * E * K * zeta[3] ** 4 * x[0] ** 2 * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] ** 2 * x[1] + complex(0, 64) * E * K * zeta[3] ** 3 * x[0] ** 2 * x[2] + complex(0, -16) * E * K * zeta[3] ** 2 * x[0] ** 2 * x[1] + 96 * E * K * zeta[3] ** 5 * x[0] * x[1] * x[2] - 64 * E * K * zeta[3] ** 3 * x[0] * x[1] * x[2] - 32 * E * K * zeta[3] * x[0] * x[1] * x[2] + 128 * E * K * zeta[3] ** 7 * x[0] * x[1] * x[2] - 288 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] * x[1] * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] * x[1] * x[2] + 96 * K ** 2 * k1 ** 2 * zeta[3] * x[0] * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + complex(0, 2) * E * K ** 3 * k1 ** 2 * x[1] + complex(0, 4) * E * K * x[0] ** 2 * x[1] - 48 * K ** 2 * zeta[3] ** 4 * x[0] ** 3 - 32 * K ** 2 * zeta[3] ** 2 * x[0] ** 3 + 144 * zeta[3] ** 8 * x[0] * x[1] ** 4 + 4 * K ** 4 * zeta[3] ** 6 * x[0] - 224 * zeta[3] ** 6 * x[0] * x[1] ** 4 + 6 * K ** 4 * zeta[3] ** 4 * x[0] + 640 * zeta[3] ** 4 * x[0] * x[2] ** 4 + 4 * K ** 4 * zeta[3] ** 2 * x[0] + 96 * zeta[3] ** 2 * x[0] * x[1] ** 4 + 384 * zeta[3] ** 2 * x[0] * x[2] ** 4 + 96 * zeta[3] ** 4 * x[0] ** 3 * x[1] ** 2 - 864 * zeta[3] ** 4 * x[0] ** 3 * x[2] ** 2 + 160 * zeta[3] ** 2 * x[0] ** 3 * x[1] ** 2 - 480 * zeta[3] ** 2 * x[0] ** 3 * x[2] ** 2 - 224 * zeta[3] ** 8 * x[0] ** 3 * x[1] ** 2 - 288 * zeta[3] ** 6 * x[0] ** 3 * x[1] ** 2 - 416 * zeta[3] ** 6 * x[0] ** 3 * x[2] ** 2 - 8 * K ** 2 * zeta[3] ** 8 * x[0] ** 3 - 32 * K ** 2 * zeta[3] ** 6 * x[0] ** 3 + 96 * zeta[3] ** 4 * x[0] ** 5 + 64 * zeta[3] ** 2 * x[0] ** 5 + 64 * zeta[3] ** 6 * x[0] ** 5 + 16 * zeta[3] ** 8 * x[0] ** 5 - 32 * x[0] ** 3 * x[2] ** 2 - 8 * K ** 2 * x[0] ** 3 - 16 * x[0] * x[1] ** 4 + K ** 4 * x[0] + complex(0, 896) * zeta[3] ** 3 * x[0] ** 2 * x[2] ** 3 + complex(0, 32) * zeta[3] ** 2 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[3] * x[0] ** 4 * x[2] + complex(0, 192) * zeta[3] * x[0] ** 2 * x[2] ** 3 + complex(0, -32) * zeta[3] ** 8 * x[1] ** 5 + complex(0, 96) * zeta[3] ** 6 * x[1] ** 5 + complex(0, -96) * zeta[3] ** 4 * x[1] ** 5 + complex(0, -256) * zeta[3] ** 3 * x[2] ** 5 + complex(0, 32) * zeta[3] ** 2 * x[1] ** 5 + complex(0, -1216) * zeta[3] ** 5 * x[1] ** 2 * x[2] ** 3 + complex(0, 6) * K ** 4 * zeta[3] ** 4 * x[1] + complex(0, 8) * K ** 2 * zeta[3] ** 4 * x[1] ** 3 + complex(0, 1248) * zeta[3] ** 4 * x[1] ** 3 * x[2] ** 2 + complex(0, -896) * zeta[3] ** 4 * x[1] * x[2] ** 4 + complex(0, -384) * zeta[3] ** 3 * x[1] ** 4 * x[2] + complex(0, 1152) * zeta[3] ** 3 * x[1] ** 2 * x[2] ** 3 + complex(0, 4) * K ** 4 * zeta[3] ** 2 * x[1] + complex(0, -480) * zeta[3] ** 2 * x[1] ** 3 * x[2] ** 2 + complex(0, 384) * zeta[3] ** 2 * x[1] * x[2] ** 4 + complex(0, 64) * zeta[3] * x[1] ** 4 * x[2] + complex(0, -192) * zeta[3] * x[1] ** 2 * x[2] ** 3 + complex(0, -96) * zeta[3] ** 8 * x[0] ** 4 * x[1] + complex(0, 256) * zeta[3] ** 8 * x[0] ** 2 * x[1] ** 3 + complex(0, -128) * zeta[3] ** 7 * x[0] ** 4 * x[2] + complex(0, 1) * K ** 4 * zeta[3] ** 8 * x[1] + complex(0, -4) * K ** 2 * zeta[3] ** 8 * x[1] ** 3 + complex(0, -256) * zeta[3] ** 7 * x[1] ** 4 * x[2] + complex(0, 4) * K ** 4 * zeta[3] ** 6 * x[1] + complex(0, -192) * zeta[3] ** 4 * x[0] ** 4 * x[1] + complex(0, -800) * zeta[3] ** 6 * x[1] ** 3 * x[2] ** 2 + complex(0, 576) * zeta[3] ** 5 * x[1] ** 4 * x[2] + complex(0, -256) * zeta[3] ** 6 * x[0] ** 4 * x[1] + complex(0, -32) * zeta[3] ** 6 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[3] ** 5 * x[0] ** 4 * x[2] + complex(0, 704) * zeta[3] ** 5 * x[0] ** 2 * x[2] ** 3 + complex(0, -288) * zeta[3] ** 4 * x[0] ** 2 * x[1] ** 3 + complex(0, -384) * zeta[3] ** 3 * x[0] ** 4 * x[2] + K ** 4 * zeta[3] ** 8 * x[0] + 896 * zeta[3] ** 7 * x[0] * x[1] ** 3 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[3] ** 2 * x[0] - 14 * K ** 4 * k1 ** 2 * zeta[3] ** 4 * x[0] + 16 * K ** 2 * zeta[3] ** 6 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[3] ** 6 * x[0] * x[2] ** 2 + 2016 * zeta[3] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 - 768 * zeta[3] ** 5 * x[0] * x[1] ** 3 * x[2] + 1920 * zeta[3] ** 5 * x[0] * x[1] * x[2] ** 3 - 10 * K ** 4 * k1 ** 2 * zeta[3] ** 2 * x[0] - 16 * K ** 2 * zeta[3] ** 4 * x[0] * x[1] ** 2 + 16 * K ** 4 * k1 ** 4 * zeta[3] ** 4 * x[0] - 6 * K ** 4 * k1 ** 2 * zeta[3] ** 6 * x[0] + 8 * E * K ** 3 * zeta[3] ** 6 * x[0] + 6 * E * K ** 3 * zeta[3] ** 4 * x[0] + 3 * E * K ** 3 * zeta[3] ** 8 * x[0] + 128 * zeta[3] * x[0] ** 3 * x[1] * x[2] - 1152 * zeta[3] ** 5 * x[0] ** 3 * x[1] * x[2] - 384 * zeta[3] ** 3 * x[0] ** 3 * x[1] * x[2] - 640 * zeta[3] ** 7 * x[0] ** 3 * x[1] * x[2] - 24 * E * K * zeta[3] ** 4 * x[0] ** 3 - 12 * E * K * zeta[3] ** 8 * x[0] ** 3 - 32 * E * K * zeta[3] ** 6 * x[0] ** 3 + 56 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] ** 3 + 40 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] ** 3 + 24 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] ** 3 + 64 * K ** 2 * zeta[3] ** 4 * x[0] * x[2] ** 2 - 480 * zeta[3] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 - 384 * zeta[3] ** 3 * x[0] * x[1] ** 3 * x[2] + 512 * zeta[3] ** 3 * x[0] * x[1] * x[2] ** 3 - 16 * K ** 2 * zeta[3] ** 2 * x[0] * x[1] ** 2 + 32 * K ** 2 * zeta[3] ** 2 * x[0] * x[2] ** 2 - 864 * zeta[3] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + 256 * zeta[3] * x[0] * x[1] ** 3 * x[2] - 384 * zeta[3] * x[0] * x[1] * x[2] ** 3 + 16 * K ** 2 * zeta[3] ** 8 * x[0] * x[1] ** 2 + 2 * E * K ** 3 * k1 ** 2 * x[0] + 4 * E * K * x[0] * x[1] ** 2 - 8 * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + complex(0, 1) * K ** 4 * x[1] + complex(0, -4) * K ** 2 * x[1] ** 3 + complex(0, 32) * x[1] ** 3 * x[2] ** 2 + complex(0, 32) * x[0] ** 4 * x[1] + complex(0, 32) * x[0] ** 2 * x[1] ** 3 - E * K ** 3 * x[0] + complex(0, -1) * E * K ** 3 * x[1] + complex(0, 4) * E * K * x[1] ** 3 + complex(0, -2) * K ** 4 * k1 ** 2 * x[1] + complex(0, -96) * x[0] ** 2 * x[1] * x[2] ** 2 + complex(0, -12) * K ** 2 * x[0] ** 2 * x[1]) / (4 * zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[3] - K ** 2 * zeta[3] ** 3 + 4 * x[0] ** 2 * zeta[3] + complex(0, -12) * zeta[3] ** 2 * x[0] * x[2] - 4 * zeta[3] ** 3 * x[1] ** 2 - 12 * zeta[3] ** 2 * x[1] * x[2] - K ** 2 * zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[3] - 8 * zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[0][1] = 2 * (-32 * E * K * zeta[0] * x[0] ** 2 * x[2] - 40 * E * K * zeta[0] ** 4 * x[0] ** 2 * x[1] - 56 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] ** 2 * x[1] - 64 * E * K * zeta[0] ** 3 * x[0] ** 2 * x[2] - 64 * E * K * zeta[0] ** 7 * x[1] ** 2 * x[2] - 128 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[1] ** 2 * x[2] - 18 * E * K ** 3 * k1 ** 2 * zeta[0] ** 4 * x[1] - 112 * E * K * zeta[0] ** 6 * x[1] * x[2] ** 2 - 224 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] * x[2] ** 2 - 16 * E * K ** 3 * k1 ** 2 * zeta[0] ** 3 * x[2] + 128 * E * K * zeta[0] ** 5 * x[1] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[1] ** 2 * x[2] + 6 * E * K ** 3 * k1 ** 2 * zeta[0] ** 2 * x[1] + 160 * E * K * zeta[0] ** 4 * x[1] * x[2] ** 2 + 160 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] * x[2] ** 2 - 64 * E * K * zeta[0] ** 3 * x[1] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[0] * x[0] ** 2 * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[0] * x[1] ** 2 * x[2] - 48 * E * K * zeta[0] ** 2 * x[1] * x[2] ** 2 + 10 * E * K ** 3 * k1 ** 2 * zeta[0] ** 6 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[0] ** 5 * x[2] + 36 * E * K * zeta[0] ** 8 * x[0] ** 2 * x[1] + 88 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] ** 2 * x[1] + 64 * E * K * zeta[0] ** 7 * x[0] ** 2 * x[2] + 160 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] ** 2 * x[2] + 40 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] ** 2 * x[1] + 32 * E * K * zeta[0] ** 5 * x[0] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] ** 2 * x[2] + 96 * x[0] ** 2 * x[1] * x[2] ** 2 + 224 * zeta[0] ** 6 * x[0] ** 4 * x[1] + 288 * zeta[0] ** 6 * x[0] ** 2 * x[1] ** 3 + 576 * zeta[0] ** 5 * x[0] ** 4 * x[2] - 1216 * zeta[0] ** 5 * x[0] ** 2 * x[2] ** 3 + 96 * zeta[0] ** 4 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[0] ** 3 * x[0] ** 4 * x[2] - 1152 * zeta[0] ** 3 * x[0] ** 2 * x[2] ** 3 - 160 * zeta[0] ** 2 * x[0] ** 2 * x[1] ** 3 + 64 * zeta[0] * x[0] ** 4 * x[2] - 192 * zeta[0] * x[0] ** 2 * x[2] ** 3 + 4 * K ** 2 * x[0] ** 2 * x[1] + 20 * K ** 2 * zeta[0] ** 8 * x[1] ** 3 + 128 * zeta[0] ** 7 * x[1] ** 4 * x[2] + 4 * K ** 4 * zeta[0] ** 6 * x[1] + 416 * zeta[0] ** 6 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[0] ** 5 * x[1] ** 4 * x[2] + 704 * zeta[0] ** 5 * x[1] ** 2 * x[2] ** 3 - 4 * K ** 4 * zeta[0] ** 4 * x[1] + 16 * K ** 2 * zeta[0] ** 4 * x[1] ** 3 - 864 * zeta[0] ** 4 * x[1] ** 3 * x[2] ** 2 + 640 * zeta[0] ** 4 * x[1] * x[2] ** 4 + 384 * zeta[0] ** 3 * x[1] ** 4 * x[2] + 4 * K ** 4 * zeta[0] ** 8 * x[1] - 896 * zeta[0] ** 3 * x[1] ** 2 * x[2] ** 3 - 4 * K ** 4 * zeta[0] ** 2 * x[1] + 480 * zeta[0] ** 2 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[0] ** 2 * x[1] * x[2] ** 4 - 128 * zeta[0] * x[1] ** 4 * x[2] + 192 * zeta[0] * x[1] ** 2 * x[2] ** 3 - E * K ** 3 * x[1] + 4 * E * K * x[1] ** 3 + 144 * zeta[0] ** 8 * x[0] ** 4 * x[1] - 224 * zeta[0] ** 8 * x[0] ** 2 * x[1] ** 3 + 256 * zeta[0] ** 7 * x[0] ** 4 * x[2] + complex(0, 128) * K ** 2 * zeta[0] ** 6 * x[0] * x[2] ** 2 + complex(0, 1632) * zeta[0] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[0] ** 6 * x[0] + complex(0, -36) * E * K * zeta[0] ** 8 * x[0] * x[1] ** 2 + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] * x[1] ** 2 + complex(0, 176) * K ** 2 * zeta[0] ** 7 * x[0] * x[1] * x[2] + complex(0, -6) * E * K ** 3 * k1 ** 2 * zeta[0] ** 4 * x[0] + complex(0, 80) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[1] ** 2 + complex(0, 48) * E * K * zeta[0] ** 6 * x[0] * x[1] ** 2 + complex(0, -112) * E * K * zeta[0] ** 6 * x[0] * x[2] ** 2 + complex(0, -256) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[2] ** 2 + complex(0, 112) * K ** 2 * zeta[0] ** 5 * x[0] * x[1] * x[2] + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[0] ** 2 * x[0] + complex(0, 8) * E * K * zeta[0] ** 4 * x[0] * x[1] ** 2 + complex(0, 32) * E * K * zeta[0] ** 4 * x[0] * x[2] ** 2 + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] * x[1] ** 2 + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] * x[2] ** 2 + complex(0, -112) * K ** 2 * zeta[0] ** 3 * x[0] * x[1] * x[2] + complex(0, -16) * E * K * zeta[0] ** 2 * x[0] * x[1] ** 2 + complex(0, 80) * E * K * zeta[0] ** 2 * x[0] * x[2] ** 2 + complex(0, -48) * K ** 2 * zeta[0] * x[0] * x[1] * x[2] + complex(0, -1152) * zeta[0] ** 5 * x[0] * x[1] ** 3 * x[2] + complex(0, 1920) * zeta[0] ** 5 * x[0] * x[1] * x[2] ** 3 + complex(0, 2) * E * K ** 3 * zeta[0] ** 4 * x[0] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[0] ** 2 * x[0] + complex(0, -64) * K ** 2 * zeta[0] ** 4 * x[0] * x[1] ** 2 + complex(0, 192) * K ** 2 * zeta[0] ** 4 * x[0] * x[2] ** 2 + complex(0, -1632) * zeta[0] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 384) * zeta[0] ** 3 * x[0] * x[1] ** 3 * x[2] + complex(0, -512) * zeta[0] ** 3 * x[0] * x[1] * x[2] ** 3 + complex(0, -2) * E * K ** 3 * k1 ** 2 * x[0] + 16 * x[1] ** 5 + complex(0, 4) * E * K ** 3 * zeta[0] ** 2 * x[0] + complex(0, -16) * E * K * zeta[0] ** 2 * x[0] ** 3 + complex(0, -16) * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + complex(0, 64) * K ** 2 * zeta[0] ** 2 * x[0] * x[2] ** 2 + complex(0, -96) * zeta[0] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 128) * zeta[0] * x[0] * x[1] ** 3 * x[2] + complex(0, -384) * zeta[0] * x[0] * x[1] * x[2] ** 3 + complex(0, -4) * E * K * x[0] * x[1] ** 2 + complex(0, 12) * E * K * zeta[0] ** 8 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] ** 3 + complex(0, -896) * zeta[0] ** 7 * x[0] ** 3 * x[1] * x[2] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] ** 3 + complex(0, -128) * E * K * zeta[0] ** 7 * x[0] * x[1] * x[2] + complex(0, -288) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] * x[1] * x[2] + complex(0, 96) * E * K * zeta[0] ** 5 * x[0] * x[1] * x[2] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] * x[1] * x[2] + complex(0, 64) * E * K * zeta[0] ** 3 * x[0] * x[1] * x[2] + complex(0, 96) * K ** 2 * k1 ** 2 * zeta[0] * x[0] * x[1] * x[2] + complex(0, -32) * E * K * zeta[0] * x[0] * x[1] * x[2] - 96 * zeta[0] ** 2 * x[0] ** 4 * x[1] + 4 * K ** 4 * zeta[0] ** 3 * x[2] + 64 * K ** 2 * zeta[0] ** 3 * x[2] ** 3 + 8 * K ** 2 * zeta[0] ** 2 * x[1] ** 3 + 4 * K ** 4 * zeta[0] ** 7 * x[2] - 40 * K ** 2 * zeta[0] ** 6 * x[1] ** 3 + 8 * K ** 4 * zeta[0] ** 5 * x[2] + 64 * K ** 2 * zeta[0] ** 5 * x[2] ** 3 + 8 * K ** 2 * k1 ** 2 * x[1] ** 3 + complex(0, -48) * K ** 2 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 288) * zeta[0] ** 4 * x[0] ** 3 * x[1] ** 2 + complex(0, -1248) * zeta[0] ** 4 * x[0] ** 3 * x[2] ** 2 + complex(0, -16) * K ** 2 * zeta[0] ** 2 * x[0] ** 3 + complex(0, 32) * zeta[0] ** 2 * x[0] ** 3 * x[1] ** 2 + complex(0, -480) * zeta[0] ** 2 * x[0] ** 3 * x[2] ** 2 + complex(0, 32) * zeta[0] ** 8 * x[0] ** 5 + complex(0, 96) * zeta[0] ** 6 * x[0] ** 5 + complex(0, 96) * zeta[0] ** 4 * x[0] ** 5 + complex(0, 32) * zeta[0] ** 2 * x[0] ** 5 + complex(0, -32) * x[0] ** 3 * x[2] ** 2 + complex(0, -32) * x[0] ** 3 * x[1] ** 2 + complex(0, -32) * x[0] * x[1] ** 4 - 4 * K ** 2 * x[1] ** 3 + 16 * zeta[0] ** 8 * x[1] ** 5 - 64 * zeta[0] ** 6 * x[1] ** 5 + 96 * zeta[0] ** 4 * x[1] ** 5 + 256 * zeta[0] ** 3 * x[2] ** 5 - 64 * zeta[0] ** 2 * x[1] ** 5 - 32 * x[1] ** 3 * x[2] ** 2 - 16 * x[0] ** 4 * x[1] + complex(0, -256) * zeta[0] ** 6 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[0] ** 4 * x[0] + complex(0, 192) * zeta[0] ** 4 * x[0] * x[1] ** 4 + complex(0, 896) * zeta[0] ** 4 * x[0] * x[2] ** 4 + complex(0, 2) * K ** 4 * zeta[0] ** 2 * x[0] + complex(0, 384) * zeta[0] ** 2 * x[0] * x[2] ** 4 + complex(0, -4) * E * K * x[0] ** 3 + complex(0, 8) * K ** 2 * x[0] * x[1] ** 2 + complex(0, 96) * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -16) * K ** 2 * zeta[0] ** 8 * x[0] ** 3 + complex(0, -256) * zeta[0] ** 8 * x[0] ** 3 * x[1] ** 2 + complex(0, -48) * K ** 2 * zeta[0] ** 6 * x[0] ** 3 + complex(0, -32) * zeta[0] ** 6 * x[0] ** 3 * x[1] ** 2 + complex(0, -800) * zeta[0] ** 6 * x[0] ** 3 * x[2] ** 2 + complex(0, 1) * E * K ** 3 * x[0] + complex(0, 2) * K ** 4 * zeta[0] ** 8 * x[0] + complex(0, 96) * zeta[0] ** 8 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[0] ** 6 * x[0] - 16 * K ** 4 * k1 ** 2 * zeta[0] ** 5 * x[2] - 16 * K ** 4 * k1 ** 2 * zeta[0] ** 3 * x[2] + complex(0, 16) * K ** 2 * zeta[0] ** 2 * x[0] * x[1] ** 2 + complex(0, -3) * E * K ** 3 * zeta[0] ** 8 * x[0] + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[0] ** 4 * x[0] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[0] ** 6 * x[0] + complex(0, 56) * K ** 2 * zeta[0] ** 8 * x[0] * x[1] ** 2 + complex(0, 640) * zeta[0] ** 7 * x[0] * x[1] ** 3 * x[2] + complex(0, -4) * E * K ** 3 * zeta[0] ** 6 * x[0] + complex(0, 16) * E * K * zeta[0] ** 6 * x[0] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[0] ** 2 * x[0] + complex(0, -16) * K ** 4 * k1 ** 2 * zeta[0] ** 4 * x[0] + complex(0, -16) * K ** 2 * zeta[0] ** 6 * x[0] * x[1] ** 2 + complex(0, -768) * zeta[0] ** 5 * x[0] ** 3 * x[1] * x[2] + complex(0, -8) * E * K * zeta[0] ** 4 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] ** 3 + complex(0, 384) * zeta[0] ** 3 * x[0] ** 3 * x[1] * x[2] + complex(0, 256) * zeta[0] * x[0] ** 3 * x[1] * x[2] - 3 * E * K ** 3 * zeta[0] ** 8 * x[1] - 12 * E * K * zeta[0] ** 8 * x[1] ** 3 + 16 * K ** 4 * k1 ** 4 * zeta[0] ** 4 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[0] ** 6 * x[1] - 72 * K ** 2 * zeta[0] ** 6 * x[0] ** 2 * x[1] - 2016 * zeta[0] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 - 176 * K ** 2 * zeta[0] ** 5 * x[0] ** 2 * x[2] + 576 * zeta[0] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] - 480 * zeta[0] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 - 112 * K ** 2 * zeta[0] ** 3 * x[0] ** 2 * x[2] + 768 * zeta[0] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] - 8 * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + 40 * K ** 2 * zeta[0] ** 2 * x[0] ** 2 * x[1] + 864 * zeta[0] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 - 16 * K ** 2 * zeta[0] * x[0] ** 2 * x[2] - 192 * zeta[0] * x[0] ** 2 * x[1] ** 2 * x[2] + 2 * E * K ** 3 * k1 ** 2 * x[1] - 6 * E * K ** 3 * zeta[0] ** 2 * x[1] - 80 * K ** 2 * zeta[0] ** 2 * x[1] * x[2] ** 2 + 32 * K ** 2 * zeta[0] * x[1] ** 2 * x[2] + 4 * E * K * x[0] ** 2 * x[1] - 52 * K ** 2 * zeta[0] ** 8 * x[0] ** 2 * x[1] - 80 * K ** 2 * zeta[0] ** 7 * x[0] ** 2 * x[2] - 1152 * zeta[0] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] - 24 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[1] ** 3 - 4 * E * K ** 3 * zeta[0] ** 7 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[0] ** 3 * x[2] + 96 * K ** 2 * zeta[0] ** 7 * x[1] ** 2 * x[2] - 2 * E * K ** 3 * zeta[0] ** 6 * x[1] + 32 * E * K * zeta[0] ** 6 * x[1] ** 3 - 16 * K ** 4 * k1 ** 4 * zeta[0] ** 2 * x[1] + 56 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] ** 3 + 144 * K ** 2 * zeta[0] ** 6 * x[1] * x[2] ** 2 - 8 * E * K ** 3 * zeta[0] ** 5 * x[2] - 64 * E * K * zeta[0] ** 5 * x[2] ** 3 - 128 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[2] ** 3 - 96 * K ** 2 * zeta[0] ** 5 * x[1] ** 2 * x[2] + 12 * E * K ** 3 * zeta[0] ** 4 * x[1] - 24 * E * K * zeta[0] ** 4 * x[1] ** 3 + 16 * K ** 4 * k1 ** 2 * zeta[0] ** 2 * x[1] - 40 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] ** 3 + 16 * K ** 2 * zeta[0] ** 4 * x[0] ** 2 * x[1] + 12 * E * K ** 3 * zeta[0] ** 3 * x[2] + 64 * E * K * zeta[0] ** 3 * x[2] ** 3 - 32 * K ** 2 * zeta[0] ** 3 * x[1] ** 2 * x[2]) / (4 * zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[0] - K ** 2 * zeta[0] ** 3 + 4 * x[0] ** 2 * zeta[0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] ** 2 - 12 * zeta[0] ** 2 * x[1] * x[2] - K ** 2 * zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[0] - 8 * zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[1][1] = 2 * (-32 * E * K * zeta[1] * x[0] ** 2 * x[2] + 40 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] ** 2 * x[1] + 32 * E * K * zeta[1] ** 5 * x[0] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] ** 2 * x[2] - 40 * E * K * zeta[1] ** 4 * x[0] ** 2 * x[1] - 56 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] ** 2 * x[1] - 64 * E * K * zeta[1] ** 3 * x[0] ** 2 * x[2] + 10 * E * K ** 3 * k1 ** 2 * zeta[1] ** 6 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[1] ** 5 * x[2] - 64 * E * K * zeta[1] ** 7 * x[1] ** 2 * x[2] - 128 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[1] ** 2 * x[2] - 18 * E * K ** 3 * k1 ** 2 * zeta[1] ** 4 * x[1] - 112 * E * K * zeta[1] ** 6 * x[1] * x[2] ** 2 - 224 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] * x[2] ** 2 - 16 * E * K ** 3 * k1 ** 2 * zeta[1] ** 3 * x[2] + 128 * E * K * zeta[1] ** 5 * x[1] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[1] ** 2 * x[2] + 6 * E * K ** 3 * k1 ** 2 * zeta[1] ** 2 * x[1] + 160 * E * K * zeta[1] ** 4 * x[1] * x[2] ** 2 + 160 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] * x[2] ** 2 - 64 * E * K * zeta[1] ** 3 * x[1] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[1] * x[0] ** 2 * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[1] * x[1] ** 2 * x[2] - 48 * E * K * zeta[1] ** 2 * x[1] * x[2] ** 2 + 36 * E * K * zeta[1] ** 8 * x[0] ** 2 * x[1] + 88 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] ** 2 * x[1] + 64 * E * K * zeta[1] ** 7 * x[0] ** 2 * x[2] + 160 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] ** 2 * x[2] + 416 * zeta[1] ** 6 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[1] ** 5 * x[1] ** 4 * x[2] + 704 * zeta[1] ** 5 * x[1] ** 2 * x[2] ** 3 - 4 * K ** 4 * zeta[1] ** 4 * x[1] + 16 * K ** 2 * zeta[1] ** 4 * x[1] ** 3 - 864 * zeta[1] ** 4 * x[1] ** 3 * x[2] ** 2 + 640 * zeta[1] ** 4 * x[1] * x[2] ** 4 + 384 * zeta[1] ** 3 * x[1] ** 4 * x[2] - 896 * zeta[1] ** 3 * x[1] ** 2 * x[2] ** 3 - 4 * K ** 4 * zeta[1] ** 2 * x[1] + 480 * zeta[1] ** 2 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[1] ** 2 * x[1] * x[2] ** 4 - 128 * zeta[1] * x[1] ** 4 * x[2] + 192 * zeta[1] * x[1] ** 2 * x[2] ** 3 + 20 * K ** 2 * zeta[1] ** 8 * x[1] ** 3 + 4 * K ** 4 * zeta[1] ** 8 * x[1] + 96 * zeta[1] ** 4 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[1] ** 3 * x[0] ** 4 * x[2] - 1152 * zeta[1] ** 3 * x[0] ** 2 * x[2] ** 3 - 160 * zeta[1] ** 2 * x[0] ** 2 * x[1] ** 3 + 64 * zeta[1] * x[0] ** 4 * x[2] - 192 * zeta[1] * x[0] ** 2 * x[2] ** 3 + 144 * zeta[1] ** 8 * x[0] ** 4 * x[1] - 224 * zeta[1] ** 8 * x[0] ** 2 * x[1] ** 3 + 256 * zeta[1] ** 7 * x[0] ** 4 * x[2] + 224 * zeta[1] ** 6 * x[0] ** 4 * x[1] + 288 * zeta[1] ** 6 * x[0] ** 2 * x[1] ** 3 + 576 * zeta[1] ** 5 * x[0] ** 4 * x[2] - 1216 * zeta[1] ** 5 * x[0] ** 2 * x[2] ** 3 + 128 * zeta[1] ** 7 * x[1] ** 4 * x[2] + 4 * K ** 4 * zeta[1] ** 6 * x[1] + 96 * x[0] ** 2 * x[1] * x[2] ** 2 + 4 * K ** 2 * x[0] ** 2 * x[1] - E * K ** 3 * x[1] + 4 * E * K * x[1] ** 3 + complex(0, 16) * K ** 2 * zeta[1] ** 2 * x[0] * x[1] ** 2 + complex(0, 16) * E * K * zeta[1] ** 6 * x[0] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[1] ** 2 * x[0] + complex(0, -16) * K ** 4 * k1 ** 2 * zeta[1] ** 4 * x[0] + complex(0, -16) * K ** 2 * zeta[1] ** 6 * x[0] * x[1] ** 2 + complex(0, 128) * K ** 2 * zeta[1] ** 6 * x[0] * x[2] ** 2 + complex(0, 1632) * zeta[1] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -1152) * zeta[1] ** 5 * x[0] * x[1] ** 3 * x[2] + complex(0, 1920) * zeta[1] ** 5 * x[0] * x[1] * x[2] ** 3 + complex(0, 2) * E * K ** 3 * zeta[1] ** 4 * x[0] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[1] ** 2 * x[0] + complex(0, -64) * K ** 2 * zeta[1] ** 4 * x[0] * x[1] ** 2 + complex(0, 192) * K ** 2 * zeta[1] ** 4 * x[0] * x[2] ** 2 + complex(0, -1632) * zeta[1] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 384) * zeta[1] ** 3 * x[0] * x[1] ** 3 * x[2] + complex(0, -512) * zeta[1] ** 3 * x[0] * x[1] * x[2] ** 3 + complex(0, 4) * E * K ** 3 * zeta[1] ** 2 * x[0] + complex(0, -16) * E * K * zeta[1] ** 2 * x[0] ** 3 + complex(0, -3) * E * K ** 3 * zeta[1] ** 8 * x[0] + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[1] ** 4 * x[0] + complex(0, 64) * K ** 2 * zeta[1] ** 2 * x[0] * x[2] ** 2 + complex(0, -96) * zeta[1] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 128) * zeta[1] * x[0] * x[1] ** 3 * x[2] + complex(0, -384) * zeta[1] * x[0] * x[1] * x[2] ** 3 + complex(0, 12) * E * K * zeta[1] ** 8 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] ** 3 + complex(0, -896) * zeta[1] ** 7 * x[0] ** 3 * x[1] * x[2] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] ** 3 + complex(0, -768) * zeta[1] ** 5 * x[0] ** 3 * x[1] * x[2] + complex(0, -8) * E * K * zeta[1] ** 4 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] ** 3 + complex(0, 384) * zeta[1] ** 3 * x[0] ** 3 * x[1] * x[2] + complex(0, 256) * zeta[1] * x[0] ** 3 * x[1] * x[2] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[1] ** 6 * x[0] + complex(0, 56) * K ** 2 * zeta[1] ** 8 * x[0] * x[1] ** 2 + complex(0, 640) * zeta[1] ** 7 * x[0] * x[1] ** 3 * x[2] + complex(0, -4) * E * K ** 3 * zeta[1] ** 6 * x[0] + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] * x[2] ** 2 + complex(0, -112) * K ** 2 * zeta[1] ** 3 * x[0] * x[1] * x[2] + complex(0, -16) * E * K * zeta[1] ** 2 * x[0] * x[1] ** 2 + complex(0, 80) * E * K * zeta[1] ** 2 * x[0] * x[2] ** 2 + complex(0, -48) * K ** 2 * zeta[1] * x[0] * x[1] * x[2] + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[1] ** 6 * x[0] + complex(0, -36) * E * K * zeta[1] ** 8 * x[0] * x[1] ** 2 + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] * x[1] ** 2 + complex(0, 176) * K ** 2 * zeta[1] ** 7 * x[0] * x[1] * x[2] + complex(0, -6) * E * K ** 3 * k1 ** 2 * zeta[1] ** 4 * x[0] + complex(0, 48) * E * K * zeta[1] ** 6 * x[0] * x[1] ** 2 + complex(0, -112) * E * K * zeta[1] ** 6 * x[0] * x[2] ** 2 + complex(0, 80) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[1] ** 2 + complex(0, -256) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[2] ** 2 + complex(0, 112) * K ** 2 * zeta[1] ** 5 * x[0] * x[1] * x[2] + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[1] ** 2 * x[0] + complex(0, 8) * E * K * zeta[1] ** 4 * x[0] * x[1] ** 2 + complex(0, 32) * E * K * zeta[1] ** 4 * x[0] * x[2] ** 2 + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] * x[1] ** 2 + complex(0, -2) * E * K ** 3 * k1 ** 2 * x[0] + 16 * x[1] ** 5 + complex(0, -16) * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + complex(0, -4) * E * K * x[0] * x[1] ** 2 + complex(0, -128) * E * K * zeta[1] ** 7 * x[0] * x[1] * x[2] + complex(0, -288) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] * x[1] * x[2] + complex(0, 96) * E * K * zeta[1] ** 5 * x[0] * x[1] * x[2] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] * x[1] * x[2] + complex(0, 64) * E * K * zeta[1] ** 3 * x[0] * x[1] * x[2] + complex(0, 96) * K ** 2 * k1 ** 2 * zeta[1] * x[0] * x[1] * x[2] + complex(0, -32) * E * K * zeta[1] * x[0] * x[1] * x[2] + 8 * K ** 2 * zeta[1] ** 2 * x[1] ** 3 - 40 * K ** 2 * zeta[1] ** 6 * x[1] ** 3 + 8 * K ** 4 * zeta[1] ** 5 * x[2] + 64 * K ** 2 * zeta[1] ** 5 * x[2] ** 3 - 96 * zeta[1] ** 2 * x[0] ** 4 * x[1] + 4 * K ** 4 * zeta[1] ** 3 * x[2] + 64 * K ** 2 * zeta[1] ** 3 * x[2] ** 3 + 4 * K ** 4 * zeta[1] ** 7 * x[2] + 8 * K ** 2 * k1 ** 2 * x[1] ** 3 + complex(0, 192) * zeta[1] ** 4 * x[0] * x[1] ** 4 + complex(0, 896) * zeta[1] ** 4 * x[0] * x[2] ** 4 + complex(0, 2) * K ** 4 * zeta[1] ** 2 * x[0] + complex(0, 384) * zeta[1] ** 2 * x[0] * x[2] ** 4 + complex(0, -16) * K ** 2 * zeta[1] ** 8 * x[0] ** 3 + complex(0, -256) * zeta[1] ** 8 * x[0] ** 3 * x[1] ** 2 + complex(0, -48) * K ** 2 * zeta[1] ** 6 * x[0] ** 3 + complex(0, -32) * zeta[1] ** 6 * x[0] ** 3 * x[1] ** 2 + complex(0, -800) * zeta[1] ** 6 * x[0] ** 3 * x[2] ** 2 + complex(0, -48) * K ** 2 * zeta[1] ** 4 * x[0] ** 3 + complex(0, 288) * zeta[1] ** 4 * x[0] ** 3 * x[1] ** 2 + complex(0, -1248) * zeta[1] ** 4 * x[0] ** 3 * x[2] ** 2 + complex(0, 32) * zeta[1] ** 8 * x[0] ** 5 + complex(0, 96) * zeta[1] ** 6 * x[0] ** 5 + complex(0, 96) * zeta[1] ** 4 * x[0] ** 5 + complex(0, 32) * zeta[1] ** 2 * x[0] ** 5 + complex(0, -16) * K ** 2 * zeta[1] ** 2 * x[0] ** 3 + complex(0, 32) * zeta[1] ** 2 * x[0] ** 3 * x[1] ** 2 + complex(0, -480) * zeta[1] ** 2 * x[0] ** 3 * x[2] ** 2 + complex(0, 2) * K ** 4 * zeta[1] ** 8 * x[0] + complex(0, 96) * zeta[1] ** 8 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[1] ** 6 * x[0] + complex(0, -256) * zeta[1] ** 6 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[1] ** 4 * x[0] + complex(0, -32) * x[0] ** 3 * x[2] ** 2 + complex(0, -32) * x[0] ** 3 * x[1] ** 2 + complex(0, -32) * x[0] * x[1] ** 4 - 4 * K ** 2 * x[1] ** 3 - 32 * x[1] ** 3 * x[2] ** 2 - 16 * x[0] ** 4 * x[1] + 16 * zeta[1] ** 8 * x[1] ** 5 - 64 * zeta[1] ** 6 * x[1] ** 5 + 96 * zeta[1] ** 4 * x[1] ** 5 + 256 * zeta[1] ** 3 * x[2] ** 5 - 64 * zeta[1] ** 2 * x[1] ** 5 - 8 * E * K ** 3 * zeta[1] ** 5 * x[2] - 64 * E * K * zeta[1] ** 5 * x[2] ** 3 - 128 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[2] ** 3 - 112 * K ** 2 * zeta[1] ** 3 * x[0] ** 2 * x[2] + 768 * zeta[1] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] + 40 * K ** 2 * zeta[1] ** 2 * x[0] ** 2 * x[1] + 864 * zeta[1] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 - 16 * K ** 2 * zeta[1] * x[0] ** 2 * x[2] - 192 * zeta[1] * x[0] ** 2 * x[1] ** 2 * x[2] - 72 * K ** 2 * zeta[1] ** 6 * x[0] ** 2 * x[1] - 2016 * zeta[1] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 - 176 * K ** 2 * zeta[1] ** 5 * x[0] ** 2 * x[2] + 576 * zeta[1] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] - 480 * zeta[1] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 - 6 * E * K ** 3 * zeta[1] ** 2 * x[1] - 80 * K ** 2 * zeta[1] ** 2 * x[1] * x[2] ** 2 + 32 * K ** 2 * zeta[1] * x[1] ** 2 * x[2] - 52 * K ** 2 * zeta[1] ** 8 * x[0] ** 2 * x[1] - 80 * K ** 2 * zeta[1] ** 7 * x[0] ** 2 * x[2] - 1152 * zeta[1] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] - 96 * K ** 2 * zeta[1] ** 5 * x[1] ** 2 * x[2] + 12 * E * K ** 3 * zeta[1] ** 4 * x[1] - 24 * E * K * zeta[1] ** 4 * x[1] ** 3 + 16 * K ** 4 * k1 ** 2 * zeta[1] ** 2 * x[1] - 40 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] ** 3 + 16 * K ** 2 * zeta[1] ** 4 * x[0] ** 2 * x[1] + 12 * E * K ** 3 * zeta[1] ** 3 * x[2] + 64 * E * K * zeta[1] ** 3 * x[2] ** 3 - 32 * K ** 2 * zeta[1] ** 3 * x[1] ** 2 * x[2] - 3 * E * K ** 3 * zeta[1] ** 8 * x[1] - 12 * E * K * zeta[1] ** 8 * x[1] ** 3 + 16 * K ** 4 * k1 ** 4 * zeta[1] ** 4 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[1] ** 6 * x[1] - 24 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[1] ** 3 - 4 * E * K ** 3 * zeta[1] ** 7 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[1] ** 3 * x[2] + 96 * K ** 2 * zeta[1] ** 7 * x[1] ** 2 * x[2] - 2 * E * K ** 3 * zeta[1] ** 6 * x[1] + 32 * E * K * zeta[1] ** 6 * x[1] ** 3 - 16 * K ** 4 * k1 ** 4 * zeta[1] ** 2 * x[1] + 56 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] ** 3 + 144 * K ** 2 * zeta[1] ** 6 * x[1] * x[2] ** 2 + complex(0, -4) * E * K * x[0] ** 3 + complex(0, 8) * K ** 2 * x[0] * x[1] ** 2 + complex(0, 96) * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 1) * E * K ** 3 * x[0] - 16 * K ** 4 * k1 ** 2 * zeta[1] ** 3 * x[2] - 16 * K ** 4 * k1 ** 2 * zeta[1] ** 5 * x[2] - 8 * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + 2 * E * K ** 3 * k1 ** 2 * x[1] + 4 * E * K * x[0] ** 2 * x[1]) / (4 * zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[1] - K ** 2 * zeta[1] ** 3 + 4 * x[0] ** 2 * zeta[1] + complex(0, -12) * zeta[1] ** 2 * x[0] * x[2] - 4 * zeta[1] ** 3 * x[1] ** 2 - 12 * zeta[1] ** 2 * x[1] * x[2] - K ** 2 * zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[1] - 8 * zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[2][1] = 2 * (-32 * E * K * zeta[2] * x[0] ** 2 * x[2] + 160 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] ** 2 * x[2] + 40 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] ** 2 * x[1] + 32 * E * K * zeta[2] ** 5 * x[0] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] ** 2 * x[2] - 40 * E * K * zeta[2] ** 4 * x[0] ** 2 * x[1] - 56 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] ** 2 * x[1] - 64 * E * K * zeta[2] ** 3 * x[0] ** 2 * x[2] + 10 * E * K ** 3 * k1 ** 2 * zeta[2] ** 6 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[2] ** 5 * x[2] - 64 * E * K * zeta[2] ** 7 * x[1] ** 2 * x[2] - 128 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[1] ** 2 * x[2] - 18 * E * K ** 3 * k1 ** 2 * zeta[2] ** 4 * x[1] - 112 * E * K * zeta[2] ** 6 * x[1] * x[2] ** 2 - 224 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] * x[2] ** 2 - 16 * E * K ** 3 * k1 ** 2 * zeta[2] ** 3 * x[2] + 128 * E * K * zeta[2] ** 5 * x[1] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[1] ** 2 * x[2] + 6 * E * K ** 3 * k1 ** 2 * zeta[2] ** 2 * x[1] + 160 * E * K * zeta[2] ** 4 * x[1] * x[2] ** 2 + 160 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] * x[2] ** 2 - 64 * E * K * zeta[2] ** 3 * x[1] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[2] * x[0] ** 2 * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[2] * x[1] ** 2 * x[2] - 48 * E * K * zeta[2] ** 2 * x[1] * x[2] ** 2 + 36 * E * K * zeta[2] ** 8 * x[0] ** 2 * x[1] + 88 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] ** 2 * x[1] + 64 * E * K * zeta[2] ** 7 * x[0] ** 2 * x[2] + 96 * x[0] ** 2 * x[1] * x[2] ** 2 + 4 * K ** 2 * x[0] ** 2 * x[1] - E * K ** 3 * x[1] + 4 * E * K * x[1] ** 3 + complex(0, 16) * K ** 2 * zeta[2] ** 2 * x[0] * x[1] ** 2 + complex(0, -36) * E * K * zeta[2] ** 8 * x[0] * x[1] ** 2 + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] * x[1] ** 2 + complex(0, 176) * K ** 2 * zeta[2] ** 7 * x[0] * x[1] * x[2] + complex(0, -6) * E * K ** 3 * k1 ** 2 * zeta[2] ** 4 * x[0] + complex(0, 48) * E * K * zeta[2] ** 6 * x[0] * x[1] ** 2 + complex(0, -112) * E * K * zeta[2] ** 6 * x[0] * x[2] ** 2 + complex(0, 80) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[1] ** 2 + complex(0, -896) * zeta[2] ** 7 * x[0] ** 3 * x[1] * x[2] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] ** 3 + complex(0, -768) * zeta[2] ** 5 * x[0] ** 3 * x[1] * x[2] + complex(0, -8) * E * K * zeta[2] ** 4 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] ** 3 + complex(0, 384) * zeta[2] ** 3 * x[0] ** 3 * x[1] * x[2] + complex(0, 256) * zeta[2] * x[0] ** 3 * x[1] * x[2] + complex(0, -3) * E * K ** 3 * zeta[2] ** 8 * x[0] + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[2] ** 4 * x[0] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[2] ** 6 * x[0] + complex(0, 56) * K ** 2 * zeta[2] ** 8 * x[0] * x[1] ** 2 + complex(0, 640) * zeta[2] ** 7 * x[0] * x[1] ** 3 * x[2] + complex(0, -4) * E * K ** 3 * zeta[2] ** 6 * x[0] + complex(0, 16) * E * K * zeta[2] ** 6 * x[0] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[2] ** 2 * x[0] + complex(0, -16) * K ** 4 * k1 ** 2 * zeta[2] ** 4 * x[0] + complex(0, -16) * K ** 2 * zeta[2] ** 6 * x[0] * x[1] ** 2 + complex(0, 128) * K ** 2 * zeta[2] ** 6 * x[0] * x[2] ** 2 + complex(0, 1632) * zeta[2] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -1152) * zeta[2] ** 5 * x[0] * x[1] ** 3 * x[2] + complex(0, 1920) * zeta[2] ** 5 * x[0] * x[1] * x[2] ** 3 + complex(0, 2) * E * K ** 3 * zeta[2] ** 4 * x[0] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[2] ** 2 * x[0] + complex(0, -64) * K ** 2 * zeta[2] ** 4 * x[0] * x[1] ** 2 + complex(0, 192) * K ** 2 * zeta[2] ** 4 * x[0] * x[2] ** 2 + complex(0, -1632) * zeta[2] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 384) * zeta[2] ** 3 * x[0] * x[1] ** 3 * x[2] + complex(0, -512) * zeta[2] ** 3 * x[0] * x[1] * x[2] ** 3 + complex(0, 4) * E * K ** 3 * zeta[2] ** 2 * x[0] + complex(0, -16) * E * K * zeta[2] ** 2 * x[0] ** 3 + complex(0, 64) * K ** 2 * zeta[2] ** 2 * x[0] * x[2] ** 2 + complex(0, -96) * zeta[2] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 128) * zeta[2] * x[0] * x[1] ** 3 * x[2] + complex(0, -384) * zeta[2] * x[0] * x[1] * x[2] ** 3 + complex(0, 12) * E * K * zeta[2] ** 8 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] ** 3 + complex(0, -2) * E * K ** 3 * k1 ** 2 * x[0] + complex(0, -256) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[2] ** 2 + complex(0, 112) * K ** 2 * zeta[2] ** 5 * x[0] * x[1] * x[2] + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[2] ** 2 * x[0] + complex(0, 8) * E * K * zeta[2] ** 4 * x[0] * x[1] ** 2 + complex(0, 32) * E * K * zeta[2] ** 4 * x[0] * x[2] ** 2 + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] * x[1] ** 2 + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] * x[2] ** 2 + complex(0, -112) * K ** 2 * zeta[2] ** 3 * x[0] * x[1] * x[2] + complex(0, -16) * E * K * zeta[2] ** 2 * x[0] * x[1] ** 2 + complex(0, 80) * E * K * zeta[2] ** 2 * x[0] * x[2] ** 2 + complex(0, -48) * K ** 2 * zeta[2] * x[0] * x[1] * x[2] + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[2] ** 6 * x[0] + 16 * x[1] ** 5 + complex(0, -16) * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + complex(0, -4) * E * K * x[0] * x[1] ** 2 + complex(0, -128) * E * K * zeta[2] ** 7 * x[0] * x[1] * x[2] + complex(0, -288) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] * x[1] * x[2] + complex(0, 96) * E * K * zeta[2] ** 5 * x[0] * x[1] * x[2] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] * x[1] * x[2] + complex(0, 64) * E * K * zeta[2] ** 3 * x[0] * x[1] * x[2] + complex(0, 96) * K ** 2 * k1 ** 2 * zeta[2] * x[0] * x[1] * x[2] + complex(0, -32) * E * K * zeta[2] * x[0] * x[1] * x[2] + 4 * K ** 4 * zeta[2] ** 7 * x[2] + 4 * K ** 4 * zeta[2] ** 3 * x[2] + 64 * K ** 2 * zeta[2] ** 3 * x[2] ** 3 + 8 * K ** 2 * zeta[2] ** 2 * x[1] ** 3 - 40 * K ** 2 * zeta[2] ** 6 * x[1] ** 3 + 8 * K ** 2 * k1 ** 2 * x[1] ** 3 + 96 * zeta[2] ** 4 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[2] ** 3 * x[0] ** 4 * x[2] - 1152 * zeta[2] ** 3 * x[0] ** 2 * x[2] ** 3 - 160 * zeta[2] ** 2 * x[0] ** 2 * x[1] ** 3 + 64 * zeta[2] * x[0] ** 4 * x[2] - 192 * zeta[2] * x[0] ** 2 * x[2] ** 3 + 20 * K ** 2 * zeta[2] ** 8 * x[1] ** 3 + 128 * zeta[2] ** 7 * x[1] ** 4 * x[2] + 4 * K ** 4 * zeta[2] ** 6 * x[1] + 416 * zeta[2] ** 6 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[2] ** 5 * x[1] ** 4 * x[2] + 704 * zeta[2] ** 5 * x[1] ** 2 * x[2] ** 3 - 4 * K ** 4 * zeta[2] ** 4 * x[1] + 16 * K ** 2 * zeta[2] ** 4 * x[1] ** 3 - 864 * zeta[2] ** 4 * x[1] ** 3 * x[2] ** 2 + 640 * zeta[2] ** 4 * x[1] * x[2] ** 4 + 384 * zeta[2] ** 3 * x[1] ** 4 * x[2] - 896 * zeta[2] ** 3 * x[1] ** 2 * x[2] ** 3 + 4 * K ** 4 * zeta[2] ** 8 * x[1] - 4 * K ** 4 * zeta[2] ** 2 * x[1] + 480 * zeta[2] ** 2 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[2] ** 2 * x[1] * x[2] ** 4 - 128 * zeta[2] * x[1] ** 4 * x[2] + 192 * zeta[2] * x[1] ** 2 * x[2] ** 3 + 144 * zeta[2] ** 8 * x[0] ** 4 * x[1] - 224 * zeta[2] ** 8 * x[0] ** 2 * x[1] ** 3 + 256 * zeta[2] ** 7 * x[0] ** 4 * x[2] + 224 * zeta[2] ** 6 * x[0] ** 4 * x[1] + 288 * zeta[2] ** 6 * x[0] ** 2 * x[1] ** 3 + 576 * zeta[2] ** 5 * x[0] ** 4 * x[2] - 1216 * zeta[2] ** 5 * x[0] ** 2 * x[2] ** 3 + complex(0, -48) * K ** 2 * zeta[2] ** 6 * x[0] ** 3 + complex(0, -32) * zeta[2] ** 6 * x[0] ** 3 * x[1] ** 2 + complex(0, -800) * zeta[2] ** 6 * x[0] ** 3 * x[2] ** 2 + complex(0, -48) * K ** 2 * zeta[2] ** 4 * x[0] ** 3 + complex(0, 288) * zeta[2] ** 4 * x[0] ** 3 * x[1] ** 2 + complex(0, -1248) * zeta[2] ** 4 * x[0] ** 3 * x[2] ** 2 + complex(0, 2) * K ** 4 * zeta[2] ** 8 * x[0] + complex(0, 96) * zeta[2] ** 8 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[2] ** 6 * x[0] + complex(0, -256) * zeta[2] ** 6 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[2] ** 4 * x[0] + complex(0, 192) * zeta[2] ** 4 * x[0] * x[1] ** 4 + complex(0, 896) * zeta[2] ** 4 * x[0] * x[2] ** 4 + complex(0, 2) * K ** 4 * zeta[2] ** 2 * x[0] + complex(0, 32) * zeta[2] ** 8 * x[0] ** 5 + complex(0, 96) * zeta[2] ** 6 * x[0] ** 5 + complex(0, 96) * zeta[2] ** 4 * x[0] ** 5 + complex(0, 32) * zeta[2] ** 2 * x[0] ** 5 + complex(0, 384) * zeta[2] ** 2 * x[0] * x[2] ** 4 + complex(0, -16) * K ** 2 * zeta[2] ** 8 * x[0] ** 3 + complex(0, -256) * zeta[2] ** 8 * x[0] ** 3 * x[1] ** 2 + complex(0, -16) * K ** 2 * zeta[2] ** 2 * x[0] ** 3 + complex(0, 32) * zeta[2] ** 2 * x[0] ** 3 * x[1] ** 2 + complex(0, -480) * zeta[2] ** 2 * x[0] ** 3 * x[2] ** 2 + complex(0, -32) * x[0] ** 3 * x[2] ** 2 + complex(0, -32) * x[0] ** 3 * x[1] ** 2 + complex(0, -32) * x[0] * x[1] ** 4 - 4 * K ** 2 * x[1] ** 3 - 32 * x[1] ** 3 * x[2] ** 2 - 16 * x[0] ** 4 * x[1] + 96 * zeta[2] ** 4 * x[1] ** 5 + 256 * zeta[2] ** 3 * x[2] ** 5 - 64 * zeta[2] ** 2 * x[1] ** 5 + 16 * zeta[2] ** 8 * x[1] ** 5 - 64 * zeta[2] ** 6 * x[1] ** 5 - 3 * E * K ** 3 * zeta[2] ** 8 * x[1] - 12 * E * K * zeta[2] ** 8 * x[1] ** 3 + 16 * K ** 4 * k1 ** 4 * zeta[2] ** 4 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[2] ** 6 * x[1] - 24 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[1] ** 3 - 176 * K ** 2 * zeta[2] ** 5 * x[0] ** 2 * x[2] + 576 * zeta[2] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] - 480 * zeta[2] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 - 112 * K ** 2 * zeta[2] ** 3 * x[0] ** 2 * x[2] + 768 * zeta[2] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] + 40 * K ** 2 * zeta[2] ** 2 * x[0] ** 2 * x[1] + 864 * zeta[2] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 - 16 * K ** 2 * zeta[2] * x[0] ** 2 * x[2] - 192 * zeta[2] * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 4 * zeta[2] ** 5 * x[2] + 64 * K ** 2 * zeta[2] ** 5 * x[2] ** 3 - 96 * zeta[2] ** 2 * x[0] ** 4 * x[1] + complex(0, -4) * E * K * x[0] ** 3 + complex(0, 8) * K ** 2 * x[0] * x[1] ** 2 + complex(0, 96) * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 1) * E * K ** 3 * x[0] - 16 * K ** 4 * k1 ** 2 * zeta[2] ** 5 * x[2] - 16 * K ** 4 * k1 ** 2 * zeta[2] ** 3 * x[2] - 4 * E * K ** 3 * zeta[2] ** 7 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[2] ** 3 * x[2] + 96 * K ** 2 * zeta[2] ** 7 * x[1] ** 2 * x[2] - 2 * E * K ** 3 * zeta[2] ** 6 * x[1] + 32 * E * K * zeta[2] ** 6 * x[1] ** 3 - 16 * K ** 4 * k1 ** 4 * zeta[2] ** 2 * x[1] + 56 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] ** 3 + 144 * K ** 2 * zeta[2] ** 6 * x[1] * x[2] ** 2 - 8 * E * K ** 3 * zeta[2] ** 5 * x[2] - 64 * E * K * zeta[2] ** 5 * x[2] ** 3 - 128 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[2] ** 3 - 96 * K ** 2 * zeta[2] ** 5 * x[1] ** 2 * x[2] + 12 * E * K ** 3 * zeta[2] ** 4 * x[1] - 24 * E * K * zeta[2] ** 4 * x[1] ** 3 + 16 * K ** 4 * k1 ** 2 * zeta[2] ** 2 * x[1] - 40 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] ** 3 + 16 * K ** 2 * zeta[2] ** 4 * x[0] ** 2 * x[1] + 12 * E * K ** 3 * zeta[2] ** 3 * x[2] + 64 * E * K * zeta[2] ** 3 * x[2] ** 3 - 32 * K ** 2 * zeta[2] ** 3 * x[1] ** 2 * x[2] - 6 * E * K ** 3 * zeta[2] ** 2 * x[1] - 80 * K ** 2 * zeta[2] ** 2 * x[1] * x[2] ** 2 + 32 * K ** 2 * zeta[2] * x[1] ** 2 * x[2] - 52 * K ** 2 * zeta[2] ** 8 * x[0] ** 2 * x[1] - 80 * K ** 2 * zeta[2] ** 7 * x[0] ** 2 * x[2] - 1152 * zeta[2] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] - 72 * K ** 2 * zeta[2] ** 6 * x[0] ** 2 * x[1] - 2016 * zeta[2] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 - 8 * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + 2 * E * K ** 3 * k1 ** 2 * x[1] + 4 * E * K * x[0] ** 2 * x[1]) / (4 * zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[2] - K ** 2 * zeta[2] ** 3 + 4 * x[0] ** 2 * zeta[2] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] ** 2 - 12 * zeta[2] ** 2 * x[1] * x[2] - K ** 2 * zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[2] - 8 * zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[3][1] = 2 * (-16 * E * K ** 3 * k1 ** 2 * zeta[3] ** 3 * x[2] + 128 * E * K * zeta[3] ** 5 * x[1] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[1] ** 2 * x[2] + 6 * E * K ** 3 * k1 ** 2 * zeta[3] ** 2 * x[1] + 160 * E * K * zeta[3] ** 4 * x[1] * x[2] ** 2 + 160 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] * x[2] ** 2 - 64 * E * K * zeta[3] ** 3 * x[1] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[3] * x[0] ** 2 * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[3] * x[1] ** 2 * x[2] - 48 * E * K * zeta[3] ** 2 * x[1] * x[2] ** 2 + 36 * E * K * zeta[3] ** 8 * x[0] ** 2 * x[1] + 88 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] ** 2 * x[1] + 64 * E * K * zeta[3] ** 7 * x[0] ** 2 * x[2] + 160 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] ** 2 * x[2] + 40 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] ** 2 * x[1] + 32 * E * K * zeta[3] ** 5 * x[0] ** 2 * x[2] + 192 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] ** 2 * x[2] - 40 * E * K * zeta[3] ** 4 * x[0] ** 2 * x[1] - 56 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] ** 2 * x[1] - 64 * E * K * zeta[3] ** 3 * x[0] ** 2 * x[2] + 10 * E * K ** 3 * k1 ** 2 * zeta[3] ** 6 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[3] ** 5 * x[2] - 64 * E * K * zeta[3] ** 7 * x[1] ** 2 * x[2] - 128 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[1] ** 2 * x[2] - 18 * E * K ** 3 * k1 ** 2 * zeta[3] ** 4 * x[1] - 112 * E * K * zeta[3] ** 6 * x[1] * x[2] ** 2 - 224 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] * x[2] ** 2 + 96 * x[0] ** 2 * x[1] * x[2] ** 2 + 4 * K ** 2 * x[0] ** 2 * x[1] - E * K ** 3 * x[1] + 4 * E * K * x[1] ** 3 + complex(0, 16) * K ** 2 * zeta[3] ** 2 * x[0] * x[1] ** 2 + complex(0, 10) * E * K ** 3 * k1 ** 2 * zeta[3] ** 6 * x[0] + complex(0, -36) * E * K * zeta[3] ** 8 * x[0] * x[1] ** 2 + complex(0, -80) * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] * x[1] ** 2 + complex(0, 176) * K ** 2 * zeta[3] ** 7 * x[0] * x[1] * x[2] + complex(0, -6) * E * K ** 3 * k1 ** 2 * zeta[3] ** 4 * x[0] + complex(0, 48) * E * K * zeta[3] ** 6 * x[0] * x[1] ** 2 + complex(0, -112) * E * K * zeta[3] ** 6 * x[0] * x[2] ** 2 + complex(0, 80) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[1] ** 2 + complex(0, -256) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[2] ** 2 + complex(0, 112) * K ** 2 * zeta[3] ** 5 * x[0] * x[1] * x[2] + complex(0, -2) * E * K ** 3 * k1 ** 2 * zeta[3] ** 2 * x[0] + complex(0, 8) * E * K * zeta[3] ** 4 * x[0] * x[1] ** 2 + complex(0, 32) * E * K * zeta[3] ** 4 * x[0] * x[2] ** 2 + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] * x[1] ** 2 + complex(0, -128) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] * x[2] ** 2 + complex(0, -112) * K ** 2 * zeta[3] ** 3 * x[0] * x[1] * x[2] + complex(0, -16) * E * K * zeta[3] ** 2 * x[0] * x[1] ** 2 + complex(0, 80) * E * K * zeta[3] ** 2 * x[0] * x[2] ** 2 + complex(0, -48) * K ** 2 * zeta[3] * x[0] * x[1] * x[2] + complex(0, -2) * E * K ** 3 * k1 ** 2 * x[0] + 16 * x[1] ** 5 + complex(0, -16) * K ** 2 * k1 ** 2 * x[0] * x[1] ** 2 + complex(0, -4) * E * K * x[0] * x[1] ** 2 + complex(0, -3) * E * K ** 3 * zeta[3] ** 8 * x[0] + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[3] ** 4 * x[0] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[3] ** 6 * x[0] + complex(0, 56) * K ** 2 * zeta[3] ** 8 * x[0] * x[1] ** 2 + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] ** 3 + complex(0, -768) * zeta[3] ** 5 * x[0] ** 3 * x[1] * x[2] + complex(0, -8) * E * K * zeta[3] ** 4 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] ** 3 + complex(0, 384) * zeta[3] ** 3 * x[0] ** 3 * x[1] * x[2] + complex(0, 256) * zeta[3] * x[0] ** 3 * x[1] * x[2] + complex(0, 640) * zeta[3] ** 7 * x[0] * x[1] ** 3 * x[2] + complex(0, -4) * E * K ** 3 * zeta[3] ** 6 * x[0] + complex(0, 16) * E * K * zeta[3] ** 6 * x[0] ** 3 + complex(0, 8) * K ** 4 * k1 ** 4 * zeta[3] ** 2 * x[0] + complex(0, -16) * K ** 4 * k1 ** 2 * zeta[3] ** 4 * x[0] + complex(0, -16) * K ** 2 * zeta[3] ** 6 * x[0] * x[1] ** 2 + complex(0, 96) * E * K * zeta[3] ** 5 * x[0] * x[1] * x[2] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] * x[1] * x[2] + complex(0, 64) * E * K * zeta[3] ** 3 * x[0] * x[1] * x[2] + complex(0, 96) * K ** 2 * k1 ** 2 * zeta[3] * x[0] * x[1] * x[2] + complex(0, -32) * E * K * zeta[3] * x[0] * x[1] * x[2] + complex(0, -128) * E * K * zeta[3] ** 7 * x[0] * x[1] * x[2] + complex(0, -288) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] * x[1] * x[2] + 8 * K ** 2 * k1 ** 2 * x[1] ** 3 + 4 * K ** 4 * zeta[3] ** 8 * x[1] + 20 * K ** 2 * zeta[3] ** 8 * x[1] ** 3 + 128 * zeta[3] ** 7 * x[1] ** 4 * x[2] + 4 * K ** 4 * zeta[3] ** 6 * x[1] + 416 * zeta[3] ** 6 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[3] ** 5 * x[1] ** 4 * x[2] + 224 * zeta[3] ** 6 * x[0] ** 4 * x[1] + 288 * zeta[3] ** 6 * x[0] ** 2 * x[1] ** 3 + 576 * zeta[3] ** 5 * x[0] ** 4 * x[2] - 1216 * zeta[3] ** 5 * x[0] ** 2 * x[2] ** 3 + 96 * zeta[3] ** 4 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[3] ** 3 * x[0] ** 4 * x[2] - 1152 * zeta[3] ** 3 * x[0] ** 2 * x[2] ** 3 - 160 * zeta[3] ** 2 * x[0] ** 2 * x[1] ** 3 + 64 * zeta[3] * x[0] ** 4 * x[2] - 192 * zeta[3] * x[0] ** 2 * x[2] ** 3 + 704 * zeta[3] ** 5 * x[1] ** 2 * x[2] ** 3 - 4 * K ** 4 * zeta[3] ** 4 * x[1] + 16 * K ** 2 * zeta[3] ** 4 * x[1] ** 3 - 864 * zeta[3] ** 4 * x[1] ** 3 * x[2] ** 2 + 640 * zeta[3] ** 4 * x[1] * x[2] ** 4 + 384 * zeta[3] ** 3 * x[1] ** 4 * x[2] - 896 * zeta[3] ** 3 * x[1] ** 2 * x[2] ** 3 - 4 * K ** 4 * zeta[3] ** 2 * x[1] + 480 * zeta[3] ** 2 * x[1] ** 3 * x[2] ** 2 - 384 * zeta[3] ** 2 * x[1] * x[2] ** 4 - 128 * zeta[3] * x[1] ** 4 * x[2] + 192 * zeta[3] * x[1] ** 2 * x[2] ** 3 + 144 * zeta[3] ** 8 * x[0] ** 4 * x[1] - 224 * zeta[3] ** 8 * x[0] ** 2 * x[1] ** 3 + 256 * zeta[3] ** 7 * x[0] ** 4 * x[2] + complex(0, 2) * K ** 4 * zeta[3] ** 8 * x[0] + complex(0, 96) * zeta[3] ** 8 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[3] ** 6 * x[0] + complex(0, -256) * zeta[3] ** 6 * x[0] * x[1] ** 4 + complex(0, 6) * K ** 4 * zeta[3] ** 4 * x[0] + complex(0, 192) * zeta[3] ** 4 * x[0] * x[1] ** 4 + complex(0, 896) * zeta[3] ** 4 * x[0] * x[2] ** 4 + complex(0, 2) * K ** 4 * zeta[3] ** 2 * x[0] + complex(0, 384) * zeta[3] ** 2 * x[0] * x[2] ** 4 + complex(0, -16) * K ** 2 * zeta[3] ** 8 * x[0] ** 3 + complex(0, -256) * zeta[3] ** 8 * x[0] ** 3 * x[1] ** 2 + complex(0, 32) * zeta[3] ** 8 * x[0] ** 5 + complex(0, 96) * zeta[3] ** 6 * x[0] ** 5 + complex(0, 96) * zeta[3] ** 4 * x[0] ** 5 + complex(0, 32) * zeta[3] ** 2 * x[0] ** 5 + complex(0, -48) * K ** 2 * zeta[3] ** 6 * x[0] ** 3 + complex(0, -32) * zeta[3] ** 6 * x[0] ** 3 * x[1] ** 2 + complex(0, -800) * zeta[3] ** 6 * x[0] ** 3 * x[2] ** 2 + complex(0, -48) * K ** 2 * zeta[3] ** 4 * x[0] ** 3 + complex(0, 288) * zeta[3] ** 4 * x[0] ** 3 * x[1] ** 2 + complex(0, -1248) * zeta[3] ** 4 * x[0] ** 3 * x[2] ** 2 + complex(0, -16) * K ** 2 * zeta[3] ** 2 * x[0] ** 3 + complex(0, 32) * zeta[3] ** 2 * x[0] ** 3 * x[1] ** 2 + complex(0, -480) * zeta[3] ** 2 * x[0] ** 3 * x[2] ** 2 + complex(0, -32) * x[0] ** 3 * x[2] ** 2 + complex(0, -32) * x[0] ** 3 * x[1] ** 2 + complex(0, -32) * x[0] * x[1] ** 4 + 16 * zeta[3] ** 8 * x[1] ** 5 - 64 * zeta[3] ** 6 * x[1] ** 5 + 96 * zeta[3] ** 4 * x[1] ** 5 + 256 * zeta[3] ** 3 * x[2] ** 5 - 64 * zeta[3] ** 2 * x[1] ** 5 - 4 * K ** 2 * x[1] ** 3 - 32 * x[1] ** 3 * x[2] ** 2 - 16 * x[0] ** 4 * x[1] - 32 * E * K * zeta[3] * x[0] ** 2 * x[2] + 4 * K ** 4 * zeta[3] ** 7 * x[2] + 4 * K ** 4 * zeta[3] ** 3 * x[2] + 64 * K ** 2 * zeta[3] ** 3 * x[2] ** 3 + 8 * K ** 2 * zeta[3] ** 2 * x[1] ** 3 - 40 * K ** 2 * zeta[3] ** 6 * x[1] ** 3 + 8 * K ** 4 * zeta[3] ** 5 * x[2] + 64 * K ** 2 * zeta[3] ** 5 * x[2] ** 3 - 96 * zeta[3] ** 2 * x[0] ** 4 * x[1] + complex(0, 128) * K ** 2 * zeta[3] ** 6 * x[0] * x[2] ** 2 + complex(0, 1632) * zeta[3] ** 6 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -1152) * zeta[3] ** 5 * x[0] * x[1] ** 3 * x[2] + complex(0, 1920) * zeta[3] ** 5 * x[0] * x[1] * x[2] ** 3 + complex(0, 2) * E * K ** 3 * zeta[3] ** 4 * x[0] + complex(0, -8) * K ** 4 * k1 ** 2 * zeta[3] ** 2 * x[0] + complex(0, -64) * K ** 2 * zeta[3] ** 4 * x[0] * x[1] ** 2 + complex(0, 192) * K ** 2 * zeta[3] ** 4 * x[0] * x[2] ** 2 + complex(0, -1632) * zeta[3] ** 4 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 384) * zeta[3] ** 3 * x[0] * x[1] ** 3 * x[2] + complex(0, -512) * zeta[3] ** 3 * x[0] * x[1] * x[2] ** 3 + complex(0, 4) * E * K ** 3 * zeta[3] ** 2 * x[0] + complex(0, -16) * E * K * zeta[3] ** 2 * x[0] ** 3 + complex(0, 64) * K ** 2 * zeta[3] ** 2 * x[0] * x[2] ** 2 + complex(0, -96) * zeta[3] ** 2 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 128) * zeta[3] * x[0] * x[1] ** 3 * x[2] + complex(0, -384) * zeta[3] * x[0] * x[1] * x[2] ** 3 + complex(0, 12) * E * K * zeta[3] ** 8 * x[0] ** 3 + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] ** 3 + complex(0, -896) * zeta[3] ** 7 * x[0] ** 3 * x[1] * x[2] + complex(0, -4) * E * K * x[0] ** 3 + complex(0, 8) * K ** 2 * x[0] * x[1] ** 2 + complex(0, 96) * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 1) * E * K ** 3 * x[0] - 16 * K ** 4 * k1 ** 2 * zeta[3] ** 5 * x[2] - 16 * K ** 4 * k1 ** 2 * zeta[3] ** 3 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[3] ** 4 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[3] ** 6 * x[1] - 24 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[1] ** 3 - 4 * E * K ** 3 * zeta[3] ** 7 * x[2] + 16 * K ** 4 * k1 ** 4 * zeta[3] ** 3 * x[2] + 96 * K ** 2 * zeta[3] ** 7 * x[1] ** 2 * x[2] - 2 * E * K ** 3 * zeta[3] ** 6 * x[1] - 480 * zeta[3] ** 4 * x[0] ** 2 * x[1] * x[2] ** 2 - 112 * K ** 2 * zeta[3] ** 3 * x[0] ** 2 * x[2] + 768 * zeta[3] ** 3 * x[0] ** 2 * x[1] ** 2 * x[2] + 40 * K ** 2 * zeta[3] ** 2 * x[0] ** 2 * x[1] + 864 * zeta[3] ** 2 * x[0] ** 2 * x[1] * x[2] ** 2 - 16 * K ** 2 * zeta[3] * x[0] ** 2 * x[2] - 192 * zeta[3] * x[0] ** 2 * x[1] ** 2 * x[2] - 52 * K ** 2 * zeta[3] ** 8 * x[0] ** 2 * x[1] - 80 * K ** 2 * zeta[3] ** 7 * x[0] ** 2 * x[2] - 1152 * zeta[3] ** 7 * x[0] ** 2 * x[1] ** 2 * x[2] - 72 * K ** 2 * zeta[3] ** 6 * x[0] ** 2 * x[1] - 2016 * zeta[3] ** 6 * x[0] ** 2 * x[1] * x[2] ** 2 - 176 * K ** 2 * zeta[3] ** 5 * x[0] ** 2 * x[2] + 576 * zeta[3] ** 5 * x[0] ** 2 * x[1] ** 2 * x[2] + 32 * E * K * zeta[3] ** 6 * x[1] ** 3 - 16 * K ** 4 * k1 ** 4 * zeta[3] ** 2 * x[1] + 56 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] ** 3 + 144 * K ** 2 * zeta[3] ** 6 * x[1] * x[2] ** 2 - 8 * E * K ** 3 * zeta[3] ** 5 * x[2] - 64 * E * K * zeta[3] ** 5 * x[2] ** 3 - 128 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[2] ** 3 - 96 * K ** 2 * zeta[3] ** 5 * x[1] ** 2 * x[2] + 12 * E * K ** 3 * zeta[3] ** 4 * x[1] - 24 * E * K * zeta[3] ** 4 * x[1] ** 3 + 16 * K ** 4 * k1 ** 2 * zeta[3] ** 2 * x[1] - 40 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] ** 3 + 16 * K ** 2 * zeta[3] ** 4 * x[0] ** 2 * x[1] + 12 * E * K ** 3 * zeta[3] ** 3 * x[2] + 64 * E * K * zeta[3] ** 3 * x[2] ** 3 - 32 * K ** 2 * zeta[3] ** 3 * x[1] ** 2 * x[2] - 6 * E * K ** 3 * zeta[3] ** 2 * x[1] - 80 * K ** 2 * zeta[3] ** 2 * x[1] * x[2] ** 2 + 32 * K ** 2 * zeta[3] * x[1] ** 2 * x[2] - 3 * E * K ** 3 * zeta[3] ** 8 * x[1] - 12 * E * K * zeta[3] ** 8 * x[1] ** 3 - 8 * K ** 2 * k1 ** 2 * x[0] ** 2 * x[1] + 2 * E * K ** 3 * k1 ** 2 * x[1] + 4 * E * K * x[0] ** 2 * x[1]) / (4 * zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[3] - K ** 2 * zeta[3] ** 3 + 4 * x[0] ** 2 * zeta[3] + complex(0, -12) * zeta[3] ** 2 * x[0] * x[2] - 4 * zeta[3] ** 3 * x[1] ** 2 - 12 * zeta[3] ** 2 * x[1] * x[2] - K ** 2 * zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[3] - 8 * zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[0][2] = 4 * zeta[0] * (complex(0, 64) * x[0] ** 3 * x[1] * x[2] + complex(0, 64) * x[0] * x[1] ** 3 * x[2] + complex(0, -8) * K ** 2 * zeta[0] ** 7 * x[0] ** 3 + complex(0, -160) * zeta[0] ** 7 * x[0] ** 3 * x[1] ** 2 + complex(0, -96) * zeta[0] ** 5 * x[0] ** 3 * x[1] ** 2 + complex(0, -384) * zeta[0] ** 5 * x[0] ** 3 * x[2] ** 2 + complex(0, 96) * zeta[0] ** 3 * x[0] ** 3 * x[1] ** 2 + complex(0, -576) * zeta[0] ** 3 * x[0] ** 3 * x[2] ** 2 + complex(0, 32) * zeta[0] * x[0] ** 3 * x[1] ** 2 + complex(0, -192) * zeta[0] * x[0] ** 3 * x[2] ** 2 + complex(0, 80) * zeta[0] ** 7 * x[0] * x[1] ** 4 + complex(0, -144) * zeta[0] ** 5 * x[0] * x[1] ** 4 + complex(0, 48) * zeta[0] ** 3 * x[0] * x[1] ** 4 + complex(0, 256) * zeta[0] ** 3 * x[0] * x[2] ** 4 + complex(0, 16) * zeta[0] * x[0] * x[1] ** 4 + complex(0, -24) * K ** 2 * zeta[0] ** 5 * x[0] ** 3 + complex(0, -24) * K ** 2 * zeta[0] ** 3 * x[0] ** 3 + complex(0, -8) * K ** 2 * zeta[0] * x[0] ** 3 + complex(0, 1) * K ** 4 * zeta[0] * x[0] + complex(0, 3) * K ** 4 * zeta[0] ** 5 * x[0] + complex(0, 3) * K ** 4 * zeta[0] ** 3 * x[0] + K ** 4 * zeta[0] ** 5 * x[1] - K ** 4 * zeta[0] * x[1] + K ** 4 * zeta[0] ** 7 * x[1] + complex(0, 16) * zeta[0] ** 7 * x[0] ** 5 + complex(0, 48) * zeta[0] ** 5 * x[0] ** 5 + complex(0, 48) * zeta[0] ** 3 * x[0] ** 5 + complex(0, 16) * zeta[0] * x[0] ** 5 - K ** 4 * zeta[0] ** 3 * x[1] + complex(0, 1) * K ** 4 * zeta[0] ** 7 * x[0] + complex(0, -2) * E * K ** 3 * zeta[0] ** 5 * x[0] + complex(0, -4) * K ** 4 * k1 ** 2 * zeta[0] ** 3 * x[0] + complex(0, 8) * K ** 2 * zeta[0] ** 5 * x[0] * x[1] ** 2 + complex(0, -4) * E * K ** 3 * zeta[0] ** 3 * x[0] + complex(0, 8) * E * K * zeta[0] * x[0] ** 3 + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] * x[1] ** 2 + complex(0, 96) * K ** 2 * zeta[0] ** 6 * x[0] * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * zeta[0] ** 2 * x[0] * x[1] * x[2] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[0] * x[0] + complex(0, -24) * K ** 2 * zeta[0] ** 3 * x[0] * x[1] ** 2 + complex(0, 128) * K ** 2 * zeta[0] ** 3 * x[0] * x[2] ** 2 + complex(0, -2) * E * K ** 3 * zeta[0] * x[0] + complex(0, -8) * K ** 2 * zeta[0] * x[0] * x[1] ** 2 + complex(0, 32) * K ** 2 * zeta[0] * x[0] * x[2] ** 2 + complex(0, -16) * K ** 2 * x[0] * x[1] * x[2] + complex(0, 8) * E * K * zeta[0] ** 5 * x[0] ** 3 + complex(0, 16) * E * K * zeta[0] ** 3 * x[0] ** 3 + complex(0, -96) * E * K * zeta[0] ** 4 * x[0] * x[1] * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[1] * x[2] + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[0] ** 3 * x[0] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[0] ** 5 * x[0] + complex(0, 24) * K ** 2 * zeta[0] ** 7 * x[0] * x[1] ** 2 + complex(0, 12) * E * K ** 3 * k1 ** 2 * zeta[0] ** 3 * x[0] + complex(0, -24) * E * K * zeta[0] ** 5 * x[0] * x[1] ** 2 + complex(0, 80) * K ** 2 * zeta[0] ** 4 * x[0] * x[1] * x[2] + complex(0, 4) * E * K ** 3 * k1 ** 2 * zeta[0] * x[0] + complex(0, 16) * E * K * zeta[0] ** 3 * x[0] * x[1] ** 2 + complex(0, -96) * E * K * zeta[0] ** 3 * x[0] * x[2] ** 2 + complex(0, 8) * E * K * zeta[0] * x[0] * x[1] ** 2 + complex(0, -64) * E * K * zeta[0] * x[0] * x[2] ** 2 + complex(0, 32) * E * K * x[0] * x[1] * x[2] + 32 * x[0] ** 4 * x[2] + 16 * zeta[0] ** 7 * x[1] ** 5 - 48 * zeta[0] ** 5 * x[1] ** 5 + 48 * zeta[0] ** 3 * x[1] ** 5 - 16 * zeta[0] * x[1] ** 5 - 32 * x[1] ** 4 * x[2] - 8 * K ** 2 * zeta[0] ** 5 * x[1] ** 3 + 96 * zeta[0] ** 5 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[0] ** 5 * x[1] ** 3 * x[2] ** 2 + 8 * K ** 4 * zeta[0] ** 4 * x[2] + 64 * K ** 2 * zeta[0] ** 4 * x[2] ** 3 - 512 * zeta[0] ** 4 * x[0] ** 2 * x[2] ** 3 - 288 * zeta[0] ** 4 * x[1] ** 4 * x[2] + 512 * zeta[0] ** 4 * x[1] ** 2 * x[2] ** 3 + 96 * zeta[0] ** 3 * x[0] ** 2 * x[1] ** 3 - 576 * zeta[0] ** 3 * x[1] ** 3 * x[2] ** 2 + 256 * zeta[0] ** 3 * x[1] * x[2] ** 4 - 384 * zeta[0] ** 2 * x[0] ** 2 * x[2] ** 3 + 192 * zeta[0] ** 2 * x[1] ** 4 * x[2] - 384 * zeta[0] ** 2 * x[1] ** 2 * x[2] ** 3 + 8 * K ** 2 * zeta[0] * x[1] ** 3 - 32 * zeta[0] * x[0] ** 2 * x[1] ** 3 + 192 * zeta[0] * x[1] ** 3 * x[2] ** 2 + 80 * zeta[0] ** 7 * x[0] ** 4 * x[1] + 144 * zeta[0] ** 5 * x[0] ** 4 * x[1] + 48 * zeta[0] ** 3 * x[0] ** 4 * x[1] - 8 * K ** 2 * x[0] ** 2 * x[2] - 8 * K ** 2 * zeta[0] ** 3 * x[1] ** 3 + 4 * K ** 4 * zeta[0] ** 2 * x[2] + 32 * K ** 2 * zeta[0] ** 2 * x[2] ** 3 + 8 * K ** 2 * x[1] ** 2 * x[2] + 8 * K ** 2 * zeta[0] ** 7 * x[1] ** 3 - 160 * zeta[0] ** 7 * x[0] ** 2 * x[1] ** 3 + 4 * K ** 4 * zeta[0] ** 6 * x[2] + 128 * zeta[0] ** 6 * x[1] ** 4 * x[2] + 128 * zeta[0] ** 6 * x[0] ** 4 * x[2] + 288 * zeta[0] ** 4 * x[0] ** 4 * x[2] + 192 * zeta[0] ** 2 * x[0] ** 4 * x[2] - 16 * zeta[0] * x[0] ** 4 * x[1] + 64 * E * K * zeta[0] ** 2 * x[0] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] ** 2 * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] ** 2 * x[1] + 24 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] ** 2 * x[1] + 32 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] ** 2 * x[2] - 32 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] ** 2 * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] ** 2 * x[1] - 32 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[1] * x[2] ** 2 + 64 * E * K * zeta[0] ** 2 * x[1] ** 2 * x[2] + 64 * E * K * zeta[0] * x[1] * x[2] ** 2 + 12 * E * K ** 3 * k1 ** 2 * zeta[0] ** 3 * x[1] + 24 * E * K * zeta[0] ** 5 * x[0] ** 2 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[0] ** 2 * x[2] + 48 * E * K * zeta[0] ** 4 * x[0] ** 2 * x[2] - 48 * E * K * zeta[0] ** 4 * x[1] ** 2 * x[2] - 4 * E * K ** 3 * k1 ** 2 * zeta[0] * x[1] + 16 * E * K * zeta[0] ** 3 * x[0] ** 2 * x[1] - 96 * E * K * zeta[0] ** 3 * x[1] * x[2] ** 2 - 8 * E * K * zeta[0] * x[0] ** 2 * x[1] + complex(0, 512) * zeta[0] ** 6 * x[0] * x[1] ** 3 * x[2] + complex(0, 96) * K ** 2 * zeta[0] ** 5 * x[0] * x[2] ** 2 + complex(0, 1152) * zeta[0] ** 5 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -576) * zeta[0] ** 4 * x[0] * x[1] ** 3 * x[2] + complex(0, 1024) * zeta[0] ** 4 * x[0] * x[1] * x[2] ** 3 + complex(0, -192) * zeta[0] * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[0] ** 3 + complex(0, -576) * zeta[0] ** 3 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] ** 3 + complex(0, -512) * zeta[0] ** 6 * x[0] ** 3 * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] ** 3 + complex(0, -576) * zeta[0] ** 4 * x[0] ** 3 * x[1] * x[2] + 384 * zeta[0] ** 2 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 2 * zeta[0] * x[0] ** 2 * x[1] + 192 * zeta[0] * x[0] ** 2 * x[1] * x[2] ** 2 - 2 * K ** 4 * k1 ** 2 * zeta[0] ** 5 * x[1] - 8 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[1] ** 3 - 24 * K ** 2 * zeta[0] ** 7 * x[0] ** 2 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[0] ** 4 * x[2] - 48 * K ** 2 * zeta[0] ** 6 * x[0] ** 2 * x[2] + 48 * K ** 2 * zeta[0] ** 6 * x[1] ** 2 * x[2] - 768 * zeta[0] ** 6 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 4 * k1 ** 2 * zeta[0] ** 3 * x[1] + 16 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[1] ** 3 - 40 * K ** 2 * zeta[0] ** 5 * x[0] ** 2 * x[1] + 96 * K ** 2 * zeta[0] ** 5 * x[1] * x[2] ** 2 - 1152 * zeta[0] ** 5 * x[0] ** 2 * x[1] * x[2] ** 2 - 104 * K ** 2 * zeta[0] ** 4 * x[0] ** 2 * x[2] - 24 * K ** 2 * zeta[0] ** 4 * x[1] ** 2 * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[0] * x[1] ** 3 - 576 * zeta[0] ** 3 * x[0] ** 2 * x[1] * x[2] ** 2 - 64 * K ** 2 * zeta[0] ** 2 * x[0] ** 2 * x[2] - 8 * K ** 4 * k1 ** 4 * zeta[0] ** 3 * x[1] - 8 * E * K ** 3 * zeta[0] ** 2 * x[2] - 64 * E * K * zeta[0] ** 2 * x[2] ** 3 - 32 * K ** 2 * zeta[0] ** 2 * x[1] ** 2 * x[2] + 2 * E * K ** 3 * zeta[0] * x[1] - 8 * E * K * zeta[0] * x[1] ** 3 - 32 * K ** 2 * zeta[0] * x[1] * x[2] ** 2 - 16 * E * K * x[1] ** 2 * x[2] - 2 * E * K ** 3 * zeta[0] ** 5 * x[1] - 8 * E * K * zeta[0] ** 5 * x[1] ** 3 - 8 * K ** 4 * k1 ** 2 * zeta[0] ** 2 * x[2] - 8 * E * K ** 3 * zeta[0] ** 3 * x[1] + 16 * E * K * zeta[0] ** 3 * x[1] ** 3 + 2 * K ** 4 * k1 ** 2 * zeta[0] * x[1] - 8 * K ** 2 * zeta[0] ** 3 * x[0] ** 2 * x[1] + 16 * E * K * x[0] ** 2 * x[2]) / (4 * zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[0] - K ** 2 * zeta[0] ** 3 + 4 * x[0] ** 2 * zeta[0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] ** 2 - 12 * zeta[0] ** 2 * x[1] * x[2] - K ** 2 * zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[0] - 8 * zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[1][2] = 4 * zeta[1] * (K ** 4 * zeta[1] ** 5 * x[1] - K ** 4 * zeta[1] * x[1] + complex(0, 16) * zeta[1] ** 7 * x[0] ** 5 + complex(0, 48) * zeta[1] ** 5 * x[0] ** 5 + complex(0, 48) * zeta[1] ** 3 * x[0] ** 5 + complex(0, 16) * zeta[1] * x[0] ** 5 + complex(0, 96) * zeta[1] ** 3 * x[0] ** 3 * x[1] ** 2 + complex(0, -576) * zeta[1] ** 3 * x[0] ** 3 * x[2] ** 2 + complex(0, 32) * zeta[1] * x[0] ** 3 * x[1] ** 2 + complex(0, -192) * zeta[1] * x[0] ** 3 * x[2] ** 2 + complex(0, 80) * zeta[1] ** 7 * x[0] * x[1] ** 4 + complex(0, -144) * zeta[1] ** 5 * x[0] * x[1] ** 4 + complex(0, 48) * zeta[1] ** 3 * x[0] * x[1] ** 4 + complex(0, 256) * zeta[1] ** 3 * x[0] * x[2] ** 4 + complex(0, 16) * zeta[1] * x[0] * x[1] ** 4 + complex(0, -8) * K ** 2 * zeta[1] ** 7 * x[0] ** 3 + complex(0, -160) * zeta[1] ** 7 * x[0] ** 3 * x[1] ** 2 + complex(0, -96) * zeta[1] ** 5 * x[0] ** 3 * x[1] ** 2 + complex(0, -384) * zeta[1] ** 5 * x[0] ** 3 * x[2] ** 2 + complex(0, 1) * K ** 4 * zeta[1] ** 7 * x[0] + complex(0, -24) * K ** 2 * zeta[1] ** 5 * x[0] ** 3 + complex(0, -24) * K ** 2 * zeta[1] ** 3 * x[0] ** 3 + complex(0, -8) * K ** 2 * zeta[1] * x[0] ** 3 + complex(0, 64) * x[0] ** 3 * x[1] * x[2] + complex(0, 64) * x[0] * x[1] ** 3 * x[2] + complex(0, 1) * K ** 4 * zeta[1] * x[0] + complex(0, 3) * K ** 4 * zeta[1] ** 5 * x[0] - K ** 4 * zeta[1] ** 3 * x[1] + K ** 4 * zeta[1] ** 7 * x[1] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[1] * x[0] + complex(0, -24) * K ** 2 * zeta[1] ** 3 * x[0] * x[1] ** 2 + complex(0, 128) * K ** 2 * zeta[1] ** 3 * x[0] * x[2] ** 2 + complex(0, -2) * E * K ** 3 * zeta[1] * x[0] + complex(0, -8) * K ** 2 * zeta[1] * x[0] * x[1] ** 2 + complex(0, 32) * K ** 2 * zeta[1] * x[0] * x[2] ** 2 + complex(0, 8) * E * K * zeta[1] ** 5 * x[0] ** 3 + complex(0, 16) * E * K * zeta[1] ** 3 * x[0] ** 3 + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[1] ** 3 * x[0] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[1] ** 5 * x[0] + complex(0, 24) * K ** 2 * zeta[1] ** 7 * x[0] * x[1] ** 2 + complex(0, 512) * zeta[1] ** 6 * x[0] * x[1] ** 3 * x[2] + complex(0, 96) * K ** 2 * zeta[1] ** 5 * x[0] * x[2] ** 2 + complex(0, 1152) * zeta[1] ** 5 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -576) * zeta[1] ** 4 * x[0] * x[1] ** 3 * x[2] + complex(0, -4) * K ** 4 * k1 ** 2 * zeta[1] ** 3 * x[0] + complex(0, 8) * K ** 2 * zeta[1] ** 5 * x[0] * x[1] ** 2 + complex(0, -4) * E * K ** 3 * zeta[1] ** 3 * x[0] + complex(0, 8) * E * K * zeta[1] * x[0] ** 3 + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] ** 3 + complex(0, -576) * zeta[1] ** 4 * x[0] ** 3 * x[1] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] * x[1] ** 2 + complex(0, 96) * K ** 2 * zeta[1] ** 6 * x[0] * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[1] * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * zeta[1] ** 2 * x[0] * x[1] * x[2] + complex(0, 12) * E * K ** 3 * k1 ** 2 * zeta[1] ** 3 * x[0] + complex(0, -24) * E * K * zeta[1] ** 5 * x[0] * x[1] ** 2 + complex(0, 80) * K ** 2 * zeta[1] ** 4 * x[0] * x[1] * x[2] + complex(0, 4) * E * K ** 3 * k1 ** 2 * zeta[1] * x[0] + complex(0, 16) * E * K * zeta[1] ** 3 * x[0] * x[1] ** 2 + complex(0, -96) * E * K * zeta[1] ** 3 * x[0] * x[2] ** 2 + complex(0, 8) * E * K * zeta[1] * x[0] * x[1] ** 2 + complex(0, -64) * E * K * zeta[1] * x[0] * x[2] ** 2 + complex(0, -2) * E * K ** 3 * zeta[1] ** 5 * x[0] + complex(0, 1024) * zeta[1] ** 4 * x[0] * x[1] * x[2] ** 3 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[1] * x[0] ** 3 + complex(0, -576) * zeta[1] ** 3 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -192) * zeta[1] * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] ** 3 + complex(0, -512) * zeta[1] ** 6 * x[0] ** 3 * x[1] * x[2] + complex(0, -16) * K ** 2 * x[0] * x[1] * x[2] + complex(0, -96) * E * K * zeta[1] ** 4 * x[0] * x[1] * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[1] * x[2] + complex(0, 3) * K ** 4 * zeta[1] ** 3 * x[0] + complex(0, 32) * E * K * x[0] * x[1] * x[2] + 32 * x[0] ** 4 * x[2] - 32 * x[1] ** 4 * x[2] + 16 * zeta[1] ** 7 * x[1] ** 5 - 48 * zeta[1] ** 5 * x[1] ** 5 + 48 * zeta[1] ** 3 * x[1] ** 5 - 16 * zeta[1] * x[1] ** 5 - 512 * zeta[1] ** 4 * x[0] ** 2 * x[2] ** 3 - 288 * zeta[1] ** 4 * x[1] ** 4 * x[2] + 512 * zeta[1] ** 4 * x[1] ** 2 * x[2] ** 3 + 96 * zeta[1] ** 3 * x[0] ** 2 * x[1] ** 3 - 576 * zeta[1] ** 3 * x[1] ** 3 * x[2] ** 2 + 256 * zeta[1] ** 3 * x[1] * x[2] ** 4 - 384 * zeta[1] ** 2 * x[0] ** 2 * x[2] ** 3 + 192 * zeta[1] ** 2 * x[1] ** 4 * x[2] - 384 * zeta[1] ** 2 * x[1] ** 2 * x[2] ** 3 + 8 * K ** 2 * zeta[1] * x[1] ** 3 - 32 * zeta[1] * x[0] ** 2 * x[1] ** 3 + 192 * zeta[1] * x[1] ** 3 * x[2] ** 2 + 8 * K ** 2 * zeta[1] ** 7 * x[1] ** 3 - 160 * zeta[1] ** 7 * x[0] ** 2 * x[1] ** 3 + 4 * K ** 4 * zeta[1] ** 6 * x[2] + 128 * zeta[1] ** 6 * x[1] ** 4 * x[2] - 8 * K ** 2 * zeta[1] ** 5 * x[1] ** 3 + 96 * zeta[1] ** 5 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[1] ** 5 * x[1] ** 3 * x[2] ** 2 + 8 * K ** 4 * zeta[1] ** 4 * x[2] + 64 * K ** 2 * zeta[1] ** 4 * x[2] ** 3 - 8 * K ** 2 * zeta[1] ** 3 * x[1] ** 3 + 4 * K ** 4 * zeta[1] ** 2 * x[2] + 32 * K ** 2 * zeta[1] ** 2 * x[2] ** 3 + 128 * zeta[1] ** 6 * x[0] ** 4 * x[2] + 288 * zeta[1] ** 4 * x[0] ** 4 * x[2] + 192 * zeta[1] ** 2 * x[0] ** 4 * x[2] - 16 * zeta[1] * x[0] ** 4 * x[1] + 144 * zeta[1] ** 5 * x[0] ** 4 * x[1] + 48 * zeta[1] ** 3 * x[0] ** 4 * x[1] + 80 * zeta[1] ** 7 * x[0] ** 4 * x[1] - 8 * K ** 2 * x[0] ** 2 * x[2] + 8 * K ** 2 * x[1] ** 2 * x[2] + 64 * E * K * zeta[1] ** 2 * x[0] ** 2 * x[2] - 8 * E * K * zeta[1] * x[0] ** 2 * x[1] + 16 * E * K * zeta[1] ** 3 * x[0] ** 2 * x[1] - 96 * E * K * zeta[1] ** 3 * x[1] * x[2] ** 2 + 64 * E * K * zeta[1] ** 2 * x[1] ** 2 * x[2] + 64 * E * K * zeta[1] * x[1] * x[2] ** 2 - 8 * K ** 2 * k1 ** 2 * zeta[1] * x[0] ** 2 * x[1] + 24 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] ** 2 * x[1] + 32 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] ** 2 * x[2] - 32 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] ** 2 * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] ** 2 * x[1] - 32 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[1] * x[2] ** 2 + 32 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] ** 2 * x[2] + 12 * E * K ** 3 * k1 ** 2 * zeta[1] ** 3 * x[1] + 24 * E * K * zeta[1] ** 5 * x[0] ** 2 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[1] ** 2 * x[2] + 48 * E * K * zeta[1] ** 4 * x[0] ** 2 * x[2] - 48 * E * K * zeta[1] ** 4 * x[1] ** 2 * x[2] - 4 * E * K ** 3 * k1 ** 2 * zeta[1] * x[1] - 8 * K ** 2 * zeta[1] ** 3 * x[0] ** 2 * x[1] - 8 * E * K ** 3 * zeta[1] ** 2 * x[2] - 64 * E * K * zeta[1] ** 2 * x[2] ** 3 - 32 * K ** 2 * zeta[1] ** 2 * x[1] ** 2 * x[2] + 2 * E * K ** 3 * zeta[1] * x[1] - 8 * E * K * zeta[1] * x[1] ** 3 - 32 * K ** 2 * zeta[1] * x[1] * x[2] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[1] ** 3 - 40 * K ** 2 * zeta[1] ** 5 * x[0] ** 2 * x[1] + 96 * K ** 2 * zeta[1] ** 5 * x[1] * x[2] ** 2 - 1152 * zeta[1] ** 5 * x[0] ** 2 * x[1] * x[2] ** 2 - 104 * K ** 2 * zeta[1] ** 4 * x[0] ** 2 * x[2] - 24 * K ** 2 * zeta[1] ** 4 * x[1] ** 2 * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[1] * x[1] ** 3 - 576 * zeta[1] ** 3 * x[0] ** 2 * x[1] * x[2] ** 2 - 64 * K ** 2 * zeta[1] ** 2 * x[0] ** 2 * x[2] + 384 * zeta[1] ** 2 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 2 * zeta[1] * x[0] ** 2 * x[1] + 192 * zeta[1] * x[0] ** 2 * x[1] * x[2] ** 2 - 8 * K ** 4 * k1 ** 4 * zeta[1] ** 3 * x[1] - 2 * K ** 4 * k1 ** 2 * zeta[1] ** 5 * x[1] - 8 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[1] ** 3 - 24 * K ** 2 * zeta[1] ** 7 * x[0] ** 2 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[1] ** 4 * x[2] - 48 * K ** 2 * zeta[1] ** 6 * x[0] ** 2 * x[2] + 48 * K ** 2 * zeta[1] ** 6 * x[1] ** 2 * x[2] - 768 * zeta[1] ** 6 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 4 * k1 ** 2 * zeta[1] ** 3 * x[1] - 2 * E * K ** 3 * zeta[1] ** 5 * x[1] - 8 * E * K * zeta[1] ** 5 * x[1] ** 3 - 8 * K ** 4 * k1 ** 2 * zeta[1] ** 2 * x[2] - 8 * E * K ** 3 * zeta[1] ** 3 * x[1] + 16 * E * K * zeta[1] ** 3 * x[1] ** 3 + 2 * K ** 4 * k1 ** 2 * zeta[1] * x[1] - 16 * E * K * x[1] ** 2 * x[2] + 16 * E * K * x[0] ** 2 * x[2]) / (4 * zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[1] - K ** 2 * zeta[1] ** 3 + 4 * x[0] ** 2 * zeta[1] + complex(0, -12) * zeta[1] ** 2 * x[0] * x[2] - 4 * zeta[1] ** 3 * x[1] ** 2 - 12 * zeta[1] ** 2 * x[1] * x[2] - K ** 2 * zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[1] - 8 * zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[2][2] = 4 * zeta[2] * (complex(0, -384) * zeta[2] ** 5 * x[0] ** 3 * x[2] ** 2 + complex(0, 96) * zeta[2] ** 3 * x[0] ** 3 * x[1] ** 2 + complex(0, -576) * zeta[2] ** 3 * x[0] ** 3 * x[2] ** 2 + complex(0, 32) * zeta[2] * x[0] ** 3 * x[1] ** 2 + complex(0, -192) * zeta[2] * x[0] ** 3 * x[2] ** 2 + complex(0, 80) * zeta[2] ** 7 * x[0] * x[1] ** 4 + complex(0, -144) * zeta[2] ** 5 * x[0] * x[1] ** 4 + complex(0, 48) * zeta[2] ** 3 * x[0] * x[1] ** 4 + complex(0, 256) * zeta[2] ** 3 * x[0] * x[2] ** 4 + complex(0, 16) * zeta[2] * x[0] * x[1] ** 4 + complex(0, 1) * K ** 4 * zeta[2] ** 7 * x[0] + complex(0, -24) * K ** 2 * zeta[2] ** 5 * x[0] ** 3 + complex(0, -24) * K ** 2 * zeta[2] ** 3 * x[0] ** 3 + complex(0, -8) * K ** 2 * zeta[2] * x[0] ** 3 + K ** 4 * zeta[2] ** 5 * x[1] - K ** 4 * zeta[2] * x[1] + complex(0, 16) * zeta[2] ** 7 * x[0] ** 5 + complex(0, 48) * zeta[2] ** 5 * x[0] ** 5 + complex(0, 48) * zeta[2] ** 3 * x[0] ** 5 + complex(0, 16) * zeta[2] * x[0] ** 5 + K ** 4 * zeta[2] ** 7 * x[1] - K ** 4 * zeta[2] ** 3 * x[1] + complex(0, 1) * K ** 4 * zeta[2] * x[0] + complex(0, 3) * K ** 4 * zeta[2] ** 5 * x[0] + complex(0, 3) * K ** 4 * zeta[2] ** 3 * x[0] + complex(0, -8) * K ** 2 * zeta[2] ** 7 * x[0] ** 3 + complex(0, -160) * zeta[2] ** 7 * x[0] ** 3 * x[1] ** 2 + complex(0, -96) * zeta[2] ** 5 * x[0] ** 3 * x[1] ** 2 + complex(0, 64) * x[0] ** 3 * x[1] * x[2] + complex(0, 64) * x[0] * x[1] ** 3 * x[2] - 8 * K ** 2 * zeta[2] ** 3 * x[1] ** 3 + 4 * K ** 4 * zeta[2] ** 2 * x[2] + 32 * K ** 2 * zeta[2] ** 2 * x[2] ** 3 + 192 * zeta[2] ** 2 * x[0] ** 4 * x[2] - 16 * zeta[2] * x[0] ** 4 * x[1] + 128 * zeta[2] ** 6 * x[0] ** 4 * x[2] + 288 * zeta[2] ** 4 * x[0] ** 4 * x[2] + 8 * K ** 2 * zeta[2] ** 7 * x[1] ** 3 - 160 * zeta[2] ** 7 * x[0] ** 2 * x[1] ** 3 + 4 * K ** 4 * zeta[2] ** 6 * x[2] + 128 * zeta[2] ** 6 * x[1] ** 4 * x[2] - 8 * K ** 2 * zeta[2] ** 5 * x[1] ** 3 + 96 * zeta[2] ** 5 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[2] ** 5 * x[1] ** 3 * x[2] ** 2 + 8 * K ** 4 * zeta[2] ** 4 * x[2] + 64 * K ** 2 * zeta[2] ** 4 * x[2] ** 3 - 512 * zeta[2] ** 4 * x[0] ** 2 * x[2] ** 3 - 288 * zeta[2] ** 4 * x[1] ** 4 * x[2] + 512 * zeta[2] ** 4 * x[1] ** 2 * x[2] ** 3 + 96 * zeta[2] ** 3 * x[0] ** 2 * x[1] ** 3 - 576 * zeta[2] ** 3 * x[1] ** 3 * x[2] ** 2 + 256 * zeta[2] ** 3 * x[1] * x[2] ** 4 - 384 * zeta[2] ** 2 * x[0] ** 2 * x[2] ** 3 + 192 * zeta[2] ** 2 * x[1] ** 4 * x[2] - 384 * zeta[2] ** 2 * x[1] ** 2 * x[2] ** 3 + 8 * K ** 2 * zeta[2] * x[1] ** 3 - 32 * zeta[2] * x[0] ** 2 * x[1] ** 3 + 192 * zeta[2] * x[1] ** 3 * x[2] ** 2 + 80 * zeta[2] ** 7 * x[0] ** 4 * x[1] + 144 * zeta[2] ** 5 * x[0] ** 4 * x[1] + 48 * zeta[2] ** 3 * x[0] ** 4 * x[1] + complex(0, -2) * E * K ** 3 * zeta[2] * x[0] + complex(0, -8) * K ** 2 * zeta[2] * x[0] * x[1] ** 2 + complex(0, 32) * K ** 2 * zeta[2] * x[0] * x[2] ** 2 + complex(0, 8) * E * K * zeta[2] ** 5 * x[0] ** 3 + complex(0, 16) * E * K * zeta[2] ** 3 * x[0] ** 3 + complex(0, -2) * E * K ** 3 * zeta[2] ** 5 * x[0] + complex(0, -4) * K ** 4 * k1 ** 2 * zeta[2] ** 3 * x[0] + complex(0, 8) * K ** 2 * zeta[2] ** 5 * x[0] * x[1] ** 2 + complex(0, 16) * E * K * zeta[2] ** 3 * x[0] * x[1] ** 2 + complex(0, -96) * E * K * zeta[2] ** 3 * x[0] * x[2] ** 2 + complex(0, -576) * zeta[2] ** 4 * x[0] ** 3 * x[1] * x[2] + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[2] ** 3 * x[0] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[2] ** 5 * x[0] + complex(0, 24) * K ** 2 * zeta[2] ** 7 * x[0] * x[1] ** 2 + complex(0, 512) * zeta[2] ** 6 * x[0] * x[1] ** 3 * x[2] + complex(0, 96) * K ** 2 * zeta[2] ** 5 * x[0] * x[2] ** 2 + complex(0, 1152) * zeta[2] ** 5 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -576) * zeta[2] ** 4 * x[0] * x[1] ** 3 * x[2] + complex(0, 1024) * zeta[2] ** 4 * x[0] * x[1] * x[2] ** 3 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[2] * x[0] ** 3 + complex(0, -576) * zeta[2] ** 3 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -192) * zeta[2] * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] ** 3 + complex(0, -512) * zeta[2] ** 6 * x[0] ** 3 * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] ** 3 + complex(0, 8) * E * K * zeta[2] * x[0] * x[1] ** 2 + complex(0, -64) * E * K * zeta[2] * x[0] * x[2] ** 2 + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] * x[1] ** 2 + complex(0, 96) * K ** 2 * zeta[2] ** 6 * x[0] * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[2] * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * zeta[2] ** 2 * x[0] * x[1] * x[2] + complex(0, -4) * E * K ** 3 * zeta[2] ** 3 * x[0] + complex(0, 8) * E * K * zeta[2] * x[0] ** 3 + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[2] * x[0] + complex(0, -24) * K ** 2 * zeta[2] ** 3 * x[0] * x[1] ** 2 + complex(0, 128) * K ** 2 * zeta[2] ** 3 * x[0] * x[2] ** 2 + complex(0, 12) * E * K ** 3 * k1 ** 2 * zeta[2] ** 3 * x[0] + complex(0, -24) * E * K * zeta[2] ** 5 * x[0] * x[1] ** 2 + complex(0, 80) * K ** 2 * zeta[2] ** 4 * x[0] * x[1] * x[2] + complex(0, 4) * E * K ** 3 * k1 ** 2 * zeta[2] * x[0] + complex(0, -16) * K ** 2 * x[0] * x[1] * x[2] + complex(0, -96) * E * K * zeta[2] ** 4 * x[0] * x[1] * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[1] * x[2] + complex(0, 32) * E * K * x[0] * x[1] * x[2] + 32 * x[0] ** 4 * x[2] - 32 * x[1] ** 4 * x[2] + 16 * zeta[2] ** 7 * x[1] ** 5 - 48 * zeta[2] ** 5 * x[1] ** 5 + 48 * zeta[2] ** 3 * x[1] ** 5 - 16 * zeta[2] * x[1] ** 5 - 8 * K ** 2 * x[0] ** 2 * x[2] + 8 * K ** 2 * x[1] ** 2 * x[2] + 24 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] ** 2 * x[1] + 64 * E * K * zeta[2] ** 2 * x[1] ** 2 * x[2] + 64 * E * K * zeta[2] * x[1] * x[2] ** 2 + 32 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] ** 2 * x[2] - 32 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] ** 2 * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] ** 2 * x[1] - 32 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[1] * x[2] ** 2 + 32 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] ** 2 * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[2] * x[0] ** 2 * x[1] + 64 * E * K * zeta[2] ** 2 * x[0] ** 2 * x[2] - 8 * E * K * zeta[2] * x[0] ** 2 * x[1] + 12 * E * K ** 3 * k1 ** 2 * zeta[2] ** 3 * x[1] + 24 * E * K * zeta[2] ** 5 * x[0] ** 2 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[2] ** 2 * x[2] + 48 * E * K * zeta[2] ** 4 * x[0] ** 2 * x[2] - 48 * E * K * zeta[2] ** 4 * x[1] ** 2 * x[2] - 4 * E * K ** 3 * k1 ** 2 * zeta[2] * x[1] + 16 * E * K * zeta[2] ** 3 * x[0] ** 2 * x[1] - 96 * E * K * zeta[2] ** 3 * x[1] * x[2] ** 2 - 2 * K ** 4 * k1 ** 2 * zeta[2] ** 5 * x[1] - 8 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[1] ** 3 - 8 * K ** 4 * k1 ** 2 * zeta[2] ** 2 * x[2] - 8 * E * K ** 3 * zeta[2] ** 3 * x[1] + 16 * E * K * zeta[2] ** 3 * x[1] ** 3 + 2 * K ** 4 * k1 ** 2 * zeta[2] * x[1] - 8 * K ** 2 * zeta[2] ** 3 * x[0] ** 2 * x[1] - 8 * E * K ** 3 * zeta[2] ** 2 * x[2] - 64 * E * K * zeta[2] ** 2 * x[2] ** 3 - 32 * K ** 2 * zeta[2] ** 2 * x[1] ** 2 * x[2] + 2 * E * K ** 3 * zeta[2] * x[1] - 8 * E * K * zeta[2] * x[1] ** 3 - 32 * K ** 2 * zeta[2] * x[1] * x[2] ** 2 - 2 * E * K ** 3 * zeta[2] ** 5 * x[1] - 8 * E * K * zeta[2] ** 5 * x[1] ** 3 + 384 * zeta[2] ** 2 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 2 * zeta[2] * x[0] ** 2 * x[1] + 192 * zeta[2] * x[0] ** 2 * x[1] * x[2] ** 2 - 24 * K ** 2 * zeta[2] ** 7 * x[0] ** 2 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[2] ** 4 * x[2] - 48 * K ** 2 * zeta[2] ** 6 * x[0] ** 2 * x[2] + 48 * K ** 2 * zeta[2] ** 6 * x[1] ** 2 * x[2] - 768 * zeta[2] ** 6 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 4 * k1 ** 2 * zeta[2] ** 3 * x[1] + 16 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[1] ** 3 - 40 * K ** 2 * zeta[2] ** 5 * x[0] ** 2 * x[1] + 96 * K ** 2 * zeta[2] ** 5 * x[1] * x[2] ** 2 - 1152 * zeta[2] ** 5 * x[0] ** 2 * x[1] * x[2] ** 2 - 104 * K ** 2 * zeta[2] ** 4 * x[0] ** 2 * x[2] - 24 * K ** 2 * zeta[2] ** 4 * x[1] ** 2 * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[2] * x[1] ** 3 - 576 * zeta[2] ** 3 * x[0] ** 2 * x[1] * x[2] ** 2 - 64 * K ** 2 * zeta[2] ** 2 * x[0] ** 2 * x[2] - 8 * K ** 4 * k1 ** 4 * zeta[2] ** 3 * x[1] - 16 * E * K * x[1] ** 2 * x[2] + 16 * E * K * x[0] ** 2 * x[2]) / (4 * zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[2] - K ** 2 * zeta[2] ** 3 + 4 * x[0] ** 2 * zeta[2] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] ** 2 - 12 * zeta[2] ** 2 * x[1] * x[2] - K ** 2 * zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[2] - 8 * zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDM[3][2] = 4 * zeta[3] * (288 * zeta[3] ** 4 * x[0] ** 4 * x[2] + 192 * zeta[3] ** 2 * x[0] ** 4 * x[2] - 16 * zeta[3] * x[0] ** 4 * x[1] - 8 * K ** 2 * zeta[3] ** 3 * x[1] ** 3 + 4 * K ** 4 * zeta[3] ** 2 * x[2] + 32 * K ** 2 * zeta[3] ** 2 * x[2] ** 3 + 8 * K ** 2 * zeta[3] ** 7 * x[1] ** 3 - 160 * zeta[3] ** 7 * x[0] ** 2 * x[1] ** 3 + 4 * K ** 4 * zeta[3] ** 6 * x[2] + 128 * zeta[3] ** 6 * x[1] ** 4 * x[2] - 8 * K ** 2 * zeta[3] ** 5 * x[1] ** 3 + 96 * zeta[3] ** 5 * x[0] ** 2 * x[1] ** 3 + 384 * zeta[3] ** 5 * x[1] ** 3 * x[2] ** 2 + 8 * K ** 4 * zeta[3] ** 4 * x[2] + 64 * K ** 2 * zeta[3] ** 4 * x[2] ** 3 - 512 * zeta[3] ** 4 * x[0] ** 2 * x[2] ** 3 - 288 * zeta[3] ** 4 * x[1] ** 4 * x[2] + 512 * zeta[3] ** 4 * x[1] ** 2 * x[2] ** 3 + 96 * zeta[3] ** 3 * x[0] ** 2 * x[1] ** 3 - 576 * zeta[3] ** 3 * x[1] ** 3 * x[2] ** 2 + 256 * zeta[3] ** 3 * x[1] * x[2] ** 4 - 384 * zeta[3] ** 2 * x[0] ** 2 * x[2] ** 3 + 192 * zeta[3] ** 2 * x[1] ** 4 * x[2] - 384 * zeta[3] ** 2 * x[1] ** 2 * x[2] ** 3 + 8 * K ** 2 * zeta[3] * x[1] ** 3 - 32 * zeta[3] * x[0] ** 2 * x[1] ** 3 + 192 * zeta[3] * x[1] ** 3 * x[2] ** 2 + 80 * zeta[3] ** 7 * x[0] ** 4 * x[1] + 144 * zeta[3] ** 5 * x[0] ** 4 * x[1] + 48 * zeta[3] ** 3 * x[0] ** 4 * x[1] + 128 * zeta[3] ** 6 * x[0] ** 4 * x[2] + K ** 4 * zeta[3] ** 5 * x[1] - K ** 4 * zeta[3] * x[1] + complex(0, 1) * K ** 4 * zeta[3] * x[0] + complex(0, 3) * K ** 4 * zeta[3] ** 5 * x[0] + complex(0, 3) * K ** 4 * zeta[3] ** 3 * x[0] + K ** 4 * zeta[3] ** 7 * x[1] - K ** 4 * zeta[3] ** 3 * x[1] + complex(0, 1) * K ** 4 * zeta[3] ** 7 * x[0] + complex(0, 80) * zeta[3] ** 7 * x[0] * x[1] ** 4 + complex(0, -144) * zeta[3] ** 5 * x[0] * x[1] ** 4 + complex(0, 48) * zeta[3] ** 3 * x[0] * x[1] ** 4 + complex(0, 256) * zeta[3] ** 3 * x[0] * x[2] ** 4 + complex(0, -160) * zeta[3] ** 7 * x[0] ** 3 * x[1] ** 2 + complex(0, 16) * zeta[3] * x[0] * x[1] ** 4 + complex(0, -8) * K ** 2 * zeta[3] ** 7 * x[0] ** 3 + complex(0, -96) * zeta[3] ** 5 * x[0] ** 3 * x[1] ** 2 + complex(0, -384) * zeta[3] ** 5 * x[0] ** 3 * x[2] ** 2 + complex(0, 96) * zeta[3] ** 3 * x[0] ** 3 * x[1] ** 2 + complex(0, -576) * zeta[3] ** 3 * x[0] ** 3 * x[2] ** 2 + complex(0, 32) * zeta[3] * x[0] ** 3 * x[1] ** 2 + complex(0, -192) * zeta[3] * x[0] ** 3 * x[2] ** 2 + complex(0, -24) * K ** 2 * zeta[3] ** 5 * x[0] ** 3 + complex(0, -24) * K ** 2 * zeta[3] ** 3 * x[0] ** 3 + complex(0, -8) * K ** 2 * zeta[3] * x[0] ** 3 + complex(0, 16) * zeta[3] ** 7 * x[0] ** 5 + complex(0, 48) * zeta[3] ** 5 * x[0] ** 5 + complex(0, 48) * zeta[3] ** 3 * x[0] ** 5 + complex(0, 16) * zeta[3] * x[0] ** 5 + complex(0, 64) * x[0] ** 3 * x[1] * x[2] + complex(0, 64) * x[0] * x[1] ** 3 * x[2] + complex(0, 1152) * zeta[3] ** 5 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -576) * zeta[3] ** 4 * x[0] * x[1] ** 3 * x[2] + complex(0, 1024) * zeta[3] ** 4 * x[0] * x[1] * x[2] ** 3 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[3] * x[0] ** 3 + complex(0, -576) * zeta[3] ** 3 * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, -192) * zeta[3] * x[0] * x[1] ** 2 * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] ** 3 + complex(0, -512) * zeta[3] ** 6 * x[0] ** 3 * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] ** 3 + complex(0, -576) * zeta[3] ** 4 * x[0] ** 3 * x[1] * x[2] + complex(0, -8) * K ** 4 * k1 ** 4 * zeta[3] ** 3 * x[0] + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[3] ** 5 * x[0] + complex(0, 24) * K ** 2 * zeta[3] ** 7 * x[0] * x[1] ** 2 + complex(0, 512) * zeta[3] ** 6 * x[0] * x[1] ** 3 * x[2] + complex(0, 96) * K ** 2 * zeta[3] ** 5 * x[0] * x[2] ** 2 + complex(0, -16) * K ** 2 * x[0] * x[1] * x[2] + complex(0, -64) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[1] * x[2] + complex(0, -96) * E * K * zeta[3] ** 4 * x[0] * x[1] * x[2] + complex(0, 8) * K ** 2 * zeta[3] ** 5 * x[0] * x[1] ** 2 + complex(0, -4) * E * K ** 3 * zeta[3] ** 3 * x[0] + complex(0, 8) * E * K * zeta[3] * x[0] ** 3 + complex(0, -2) * K ** 4 * k1 ** 2 * zeta[3] * x[0] + complex(0, -24) * K ** 2 * zeta[3] ** 3 * x[0] * x[1] ** 2 + complex(0, 128) * K ** 2 * zeta[3] ** 3 * x[0] * x[2] ** 2 + complex(0, -2) * E * K ** 3 * zeta[3] * x[0] + complex(0, -8) * K ** 2 * zeta[3] * x[0] * x[1] ** 2 + complex(0, 32) * K ** 2 * zeta[3] * x[0] * x[2] ** 2 + complex(0, 8) * E * K * zeta[3] ** 5 * x[0] ** 3 + complex(0, 16) * E * K * zeta[3] ** 3 * x[0] ** 3 + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] * x[1] ** 2 + complex(0, 96) * K ** 2 * zeta[3] ** 6 * x[0] * x[1] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] * x[2] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[3] * x[0] * x[1] ** 2 + complex(0, -32) * K ** 2 * zeta[3] ** 2 * x[0] * x[1] * x[2] + complex(0, 12) * E * K ** 3 * k1 ** 2 * zeta[3] ** 3 * x[0] + complex(0, -24) * E * K * zeta[3] ** 5 * x[0] * x[1] ** 2 + complex(0, 80) * K ** 2 * zeta[3] ** 4 * x[0] * x[1] * x[2] + complex(0, 4) * E * K ** 3 * k1 ** 2 * zeta[3] * x[0] + complex(0, 16) * E * K * zeta[3] ** 3 * x[0] * x[1] ** 2 + complex(0, -96) * E * K * zeta[3] ** 3 * x[0] * x[2] ** 2 + complex(0, 8) * E * K * zeta[3] * x[0] * x[1] ** 2 + complex(0, -64) * E * K * zeta[3] * x[0] * x[2] ** 2 + complex(0, -2) * E * K ** 3 * zeta[3] ** 5 * x[0] + complex(0, -4) * K ** 4 * k1 ** 2 * zeta[3] ** 3 * x[0] + complex(0, 32) * E * K * x[0] * x[1] * x[2] + 32 * x[0] ** 4 * x[2] - 32 * x[1] ** 4 * x[2] + 16 * zeta[3] ** 7 * x[1] ** 5 - 48 * zeta[3] ** 5 * x[1] ** 5 + 48 * zeta[3] ** 3 * x[1] ** 5 - 16 * zeta[3] * x[1] ** 5 - 8 * K ** 2 * x[0] ** 2 * x[2] + 8 * K ** 2 * x[1] ** 2 * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] ** 2 * x[1] - 32 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[1] * x[2] ** 2 + 64 * E * K * zeta[3] ** 2 * x[0] ** 2 * x[2] - 8 * E * K * zeta[3] * x[0] ** 2 * x[1] + 12 * E * K ** 3 * k1 ** 2 * zeta[3] ** 3 * x[1] + 24 * E * K * zeta[3] ** 5 * x[0] ** 2 * x[1] + 16 * E * K ** 3 * k1 ** 2 * zeta[3] ** 2 * x[2] + 48 * E * K * zeta[3] ** 4 * x[0] ** 2 * x[2] - 48 * E * K * zeta[3] ** 4 * x[1] ** 2 * x[2] - 4 * E * K ** 3 * k1 ** 2 * zeta[3] * x[1] + 16 * E * K * zeta[3] ** 3 * x[0] ** 2 * x[1] - 96 * E * K * zeta[3] ** 3 * x[1] * x[2] ** 2 + 64 * E * K * zeta[3] ** 2 * x[1] ** 2 * x[2] + 64 * E * K * zeta[3] * x[1] * x[2] ** 2 + 32 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] ** 2 * x[2] + 32 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] ** 2 * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[3] * x[0] ** 2 * x[1] + 24 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] ** 2 * x[1] + 32 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] ** 2 * x[2] - 32 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] ** 2 * x[2] + 2 * E * K ** 3 * zeta[3] * x[1] - 8 * E * K * zeta[3] * x[1] ** 3 - 32 * K ** 2 * zeta[3] * x[1] * x[2] ** 2 - 8 * K ** 2 * k1 ** 2 * zeta[3] * x[1] ** 3 - 576 * zeta[3] ** 3 * x[0] ** 2 * x[1] * x[2] ** 2 - 64 * K ** 2 * zeta[3] ** 2 * x[0] ** 2 * x[2] + 384 * zeta[3] ** 2 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 2 * zeta[3] * x[0] ** 2 * x[1] + 192 * zeta[3] * x[0] ** 2 * x[1] * x[2] ** 2 - 8 * K ** 4 * k1 ** 4 * zeta[3] ** 3 * x[1] - 2 * K ** 4 * k1 ** 2 * zeta[3] ** 5 * x[1] - 8 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[1] ** 3 - 24 * K ** 2 * zeta[3] ** 7 * x[0] ** 2 * x[1] - 16 * K ** 4 * k1 ** 2 * zeta[3] ** 4 * x[2] - 48 * K ** 2 * zeta[3] ** 6 * x[0] ** 2 * x[2] + 48 * K ** 2 * zeta[3] ** 6 * x[1] ** 2 * x[2] - 768 * zeta[3] ** 6 * x[0] ** 2 * x[1] ** 2 * x[2] + 8 * K ** 4 * k1 ** 2 * zeta[3] ** 3 * x[1] + 16 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[1] ** 3 - 40 * K ** 2 * zeta[3] ** 5 * x[0] ** 2 * x[1] + 96 * K ** 2 * zeta[3] ** 5 * x[1] * x[2] ** 2 - 1152 * zeta[3] ** 5 * x[0] ** 2 * x[1] * x[2] ** 2 - 104 * K ** 2 * zeta[3] ** 4 * x[0] ** 2 * x[2] - 24 * K ** 2 * zeta[3] ** 4 * x[1] ** 2 * x[2] - 2 * E * K ** 3 * zeta[3] ** 5 * x[1] - 8 * E * K * zeta[3] ** 5 * x[1] ** 3 - 8 * K ** 4 * k1 ** 2 * zeta[3] ** 2 * x[2] - 8 * E * K ** 3 * zeta[3] ** 3 * x[1] + 16 * E * K * zeta[3] ** 3 * x[1] ** 3 + 2 * K ** 4 * k1 ** 2 * zeta[3] * x[1] - 8 * K ** 2 * zeta[3] ** 3 * x[0] ** 2 * x[1] - 8 * E * K ** 3 * zeta[3] ** 2 * x[2] - 64 * E * K * zeta[3] ** 2 * x[2] ** 3 - 32 * K ** 2 * zeta[3] ** 2 * x[1] ** 2 * x[2] - 16 * E * K * x[1] ** 2 * x[2] + 16 * E * K * x[0] ** 2 * x[2]) / (4 * zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[3] - K ** 2 * zeta[3] ** 3 + 4 * x[0] ** 2 * zeta[3] + complex(0, -12) * zeta[3] ** 2 * x[0] * x[2] - 4 * zeta[3] ** 3 * x[1] ** 2 - 12 * zeta[3] ** 2 * x[1] * x[2] - K ** 2 * zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[3] - 8 * zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    return DDM