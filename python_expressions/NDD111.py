from numpy import complex, complex64, mat, dot, trace, pi, sqrt, mat
from mpmath import ellipk, ellipe
from cmath import exp


def nddphis111(zeta, mu, DM, DZ, DDM, DDZ, x, k):

    K = complex64(ellipk(k**2))

    E = complex64(ellipe(k**2))

    cm= (2*E-K)/K

    k1 = sqrt(1-k**2)

    xp = x[0]+complex(0,1)*x[1]
    xm = x[0]-complex(0,1)*x[1]
    S =  sqrt(K**2-4*xp*xm)
    SP = sqrt(K**2-4*xp**2)
    SM = sqrt(K**2-4*xm**2)
    SPM = sqrt(-k1**2*(K**2*k**2-4*xm*xp)+(xm-xp)**2)
    R = 2*K**2*k1**2-S**2-8*x[2]**2
    RM = complex(0,1)*SM**2*(xm*(2*k1**2-1)+xp)-(16*complex(0,1))*xm*x[2]**2
    RP = complex(0,1)*SM**2*(xp*(2*k1**2-1)+xm)+(16*complex(0,1))*xp*x[2]**2
    RMBAR=-complex(0,1)*SP**2*( xp*(2*k1**2-1)+xm ) +16*complex(0,1)*xp*x[2]**2
    RPBAR=-complex(0,1)*SP**2*( xm*(2*k1**2-1)+xp ) -16*complex(0,1)*xm*x[2]**2
    r=sqrt(x[0]**2+x[1]**2+x[2]**2)

    DS = [None]*2
    DSP = [None]*2
    DSM = [None]*2
    DSPM = [None]*2
    DRP = [None]*3
    DRM = [None]*3
    DRPBAR = [None]*3
    DRMBAR = [None]*3


    DS[0] = -4 * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1) * x[0]

    DS[1] = -4 * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1) * x[1]

    DSP[0] = -4 * (x[0] + complex(0, 1) * x[1]) * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSP[1] = -4 * (complex(0, 1) * x[0] - x[1]) * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSM[0] = 4 * (complex(0, 1) * x[1] - x[0]) * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSM[1] = 4 * (x[1] + complex(0, 1) * x[0]) * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSPM[0] = 4 * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1) * k1 ** 2 * x[0]

    DSPM[1] = 4 * x[1] * (k1 ** 2 - 1) * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1)

    DRP[0] = complex(0, -8) * k1 ** 2 * x[1] ** 2 - 16 * k1 ** 2 * x[0] * x[1] + complex(0, 2) * K ** 2 * k1 ** 2 + complex(0, 16) * x[1] ** 2 + complex(0, -24) * k1 ** 2 * x[0] ** 2 - 16 * x[0] * x[1] + complex(0, 16) * x[2] ** 2

    DRP[1] = -24 * k1 ** 2 * x[1] ** 2 + complex(0, -16) * k1 ** 2 * x[0] * x[1] - 2 * K ** 2 * k1 ** 2 + 24 * x[1] ** 2 - 8 * k1 ** 2 * x[0] ** 2 + complex(0, 32) * x[0] * x[1] + 2 * K ** 2 - 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRP[2] = -32 * x[1] * x[2] + complex(0, 32) * x[0] * x[2]

    DRM[0] = complex(0, 24) * k1 ** 2 * x[1] ** 2 - 48 * k1 ** 2 * x[0] * x[1] + complex(0, 2) * K ** 2 * k1 ** 2 + complex(0, -16) * x[1] ** 2 + complex(0, -24) * k1 ** 2 * x[0] ** 2 + 16 * x[0] * x[1] + complex(0, -16) * x[2] ** 2

    DRM[1] = 24 * k1 ** 2 * x[1] ** 2 + complex(0, 48) * k1 ** 2 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 - 24 * x[1] ** 2 - 24 * k1 ** 2 * x[0] ** 2 + complex(0, -32) * x[0] * x[1] - 2 * K ** 2 + 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRM[2] = -32 * x[1] * x[2] + complex(0, -32) * x[0] * x[2]

    DRPBAR[0] = complex(0, 8) * k1 ** 2 * x[1] ** 2 - 16 * k1 ** 2 * x[0] * x[1] + complex(0, -2) * K ** 2 * k1 ** 2 + complex(0, -16) * x[1] ** 2 + complex(0, 24) * k1 ** 2 * x[0] ** 2 - 16 * x[0] * x[1] + complex(0, -16) * x[2] ** 2

    DRPBAR[1] = -24 * k1 ** 2 * x[1] ** 2 + complex(0, 16) * k1 ** 2 * x[0] * x[1] - 2 * K ** 2 * k1 ** 2 + 24 * x[1] ** 2 - 8 * k1 ** 2 * x[0] ** 2 + complex(0, -32) * x[0] * x[1] + 2 * K ** 2 - 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRPBAR[2] = -32 * x[1] * x[2] + complex(0, -32) * x[0] * x[2]

    DRMBAR[0] = complex(0, -24) * k1 ** 2 * x[1] ** 2 - 48 * k1 ** 2 * x[0] * x[1] + complex(0, -2) * K ** 2 * k1 ** 2 + complex(0, 16) * x[1] ** 2 + complex(0, 24) * k1 ** 2 * x[0] ** 2 + 16 * x[0] * x[1] + complex(0, 16) * x[2] ** 2

    DRMBAR[1] = 24 * k1 ** 2 * x[1] ** 2 + complex(0, -48) * k1 ** 2 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 - 24 * x[1] ** 2 - 24 * k1 ** 2 * x[0] ** 2 + complex(0, 32) * x[0] * x[1] - 2 * K ** 2 + 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRMBAR[2] = -32 * x[1] * x[2] + complex(0, 32) * x[0] * x[2]

    DDS = [None]*2
    DDSP = [None]*2
    DDSM = [None]*2
    DDSPM = [None]*2
    DDRP = [None]*3
    DDRM = [None]*3
    DDRPBAR = [None]*3
    DDRMBAR = [None]*3

    DDS[0] = -4 * (K ** 2 - 4 * x[1] ** 2) * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDS[1] = -4 * (K ** 2 - 4 * x[0] ** 2) * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDSP[0] = -4 * K ** 2 * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSP[1] = 4 * K ** 2 * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSM[0] = -4 * K ** 2 * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSM[1] = 4 * K ** 2 * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSPM[0] = -4 * k1 ** 2 * (K ** 2 * k ** 2 * k1 ** 2 - 4 * k1 ** 2 * x[1] ** 2 + 4 * x[1] ** 2) * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDSPM[1] = -4 * (k1 ** 2 - 1) * k1 ** 2 * (K ** 2 * k ** 2 - 4 * x[0] ** 2) * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDRP[0] = -16 * k1 ** 2 * x[1] + complex(0, -48) * k1 ** 2 * x[0] - 16 * x[1]

    DDRP[1] = -48 * k1 ** 2 * x[1] + complex(0, -16) * k1 ** 2 * x[0] + 48 * x[1] + complex(0, 32) * x[0]

    DDRP[2] = -32 * x[1] + complex(0, 32) * x[0]

    DDRM[0] = -48 * k1 ** 2 * x[1] + complex(0, -48) * k1 ** 2 * x[0] + 16 * x[1]

    DDRM[1] = 48 * k1 ** 2 * x[1] + complex(0, 48) * k1 ** 2 * x[0] - 48 * x[1] + complex(0, -32) * x[0]

    DDRM[2] = -32 * x[1] + complex(0, -32) * x[0]

    DDRPBAR[0] = -16 * k1 ** 2 * x[1] + complex(0, 48) * k1 ** 2 * x[0] - 16 * x[1]

    DDRPBAR[1] = -48 * k1 ** 2 * x[1] + complex(0, 16) * k1 ** 2 * x[0] + 48 * x[1] + complex(0, -32) * x[0]

    DDRPBAR[2] = -32 * x[1] + complex(0, -32) * x[0]

    DDRMBAR[0] = -48 * k1 ** 2 * x[1] + complex(0, 48) * k1 ** 2 * x[0] + 16 * x[1]

    DDRMBAR[1] = 48 * k1 ** 2 * x[1] + complex(0, -48) * k1 ** 2 * x[0] - 48 * x[1] + complex(0, 32) * x[0]

    DDRMBAR[2] = -32 * x[1] + complex(0, 32) * x[0]

    cg0 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DSM[0] * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg1 = -8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * x[0]

    cg2 = 12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][0] * x[0]

    cg3 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) * x[0]

    cg4 = 6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][0] * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg5 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg6 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg7 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0]) * x[0]

    cg8 = 6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DZ[0][0] * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg9 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) * x[0]

    cg10 = 6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][0] * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg11 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg12 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg13 = -12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * DZ[0][0]

    cg14 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0]) * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg15 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0]) * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg16 = 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0])

    cg17 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0]) * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg18 = -8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0]) * x[0]

    cg19 = -12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0]) * DZ[0][0]

    cg20 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0]) * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg21 = -8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0]) * x[0]

    cg22 = 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0])

    cg23 = -12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0]) * DZ[2][0]

    cg24 = -8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * x[0]

    cg25 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DSM[0] * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg26 = -12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0] * DZ[2][0]

    cg27 = 6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DZ[2][0] * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg28 = 12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][0] * x[0]

    cg29 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0]) * x[0]


    cg30 = 2 * ((-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3]))


    cg31 = 2 * ((-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2]))


    cg32 = ((-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[0][0] * exp(-2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(-2 * mu[0]) + 2 * DDM[3][0] * exp(-2 * mu[3]) - 4 * DM[3][0] ** 2 * exp(-2 * mu[3]))


    cg33 = ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[3][0] * exp(-2 * mu[3]) + 4 * DM[3][0] ** 2 * exp(-2 * mu[3]) + 2 * DDM[2][0] * exp(-2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(-2 * mu[2]))


    cg34 = ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[3][0] * exp(-2 * mu[3]) + 4 * DM[3][0] ** 2 * exp(-2 * mu[3]) + 2 * DDM[2][0] * exp(-2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(-2 * mu[2]))


    cg35 = ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (2 * DDM[0][0] * exp(-2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(-2 * mu[0]) - 2 * DDM[2][0] * exp(-2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(-2 * mu[2]))


    cg36 = ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (2 * DDM[0][0] * exp(-2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(-2 * mu[0]) - 2 * DDM[2][0] * exp(-2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(-2 * mu[2]))


    cg37 = 2 * ((-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (2 * DM[0][0] * exp(-2 * mu[0]) - 2 * DM[2][0] * exp(-2 * mu[2]))


    cg38 = (2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][0] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][0] ** 2 + complex(0, -24) * x[2] / zeta[0] ** 2 * DZ[0][0] - 8 / zeta[0] ** 2 + 32 * x[0] / zeta[0] ** 3 * DZ[0][0] - 6 * R / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][0] + complex(0, -24) * x[2] / zeta[0] ** 4 * DZ[0][0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, 2) / zeta[0] ** 2 * DZ[0][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DDZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 4 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, -2) * zeta[0] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[0][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][0]) + 2 * (complex(0, -2) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 1) * x[2] / zeta[0] ** 2 * DDZ[0][0] - 4 / zeta[0] ** 3 * DZ[0][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DDZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 4 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (0.1e1 / zeta[0] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 2 * DZ[0][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][0]) + 2 * (complex(0, 2) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * x[2] / zeta[0] ** 2 * DDZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 4 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (0.1e1 / zeta[0] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 2 * DZ[0][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2) + 2 * (complex(0, 2) / zeta[0] ** 2 * DZ[0][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DDZ[0][0] - 6 * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * x[2] / zeta[0] ** 3 * DDZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 4 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, -2) / zeta[0] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] ** 2 * DZ[0][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][0])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][0] * exp(2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][0] * exp(2 * mu[1]) + 4 * DM[1][0] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][0] + complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, -24) * x[2] / zeta[2] ** 4 * DZ[2][0] + complex(0, -24) * x[2] / zeta[2] ** 2 * DZ[2][0] - 8 / zeta[2] ** 2 + 32 * x[0] / zeta[2] ** 3 * DZ[2][0] - 6 * R / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][0] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][0] + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[2] / zeta[1] ** 4 * DZ[1][0] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][0] - 8 / zeta[1] ** 2 + 32 * x[0] / zeta[1] ** 3 * DZ[1][0] - 6 * R / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][0] + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][0] + complex(0, -24) * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][0] * exp(2 * mu[1]) - 4 * DM[1][0] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][0] * exp(2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[0] ** 3 + 6 * DRMBAR[0] / zeta[0] ** 4 * DZ[0][0] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][0] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][0] + 16 * x[2] / zeta[0] ** 2 - 64 * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][0] + DDRPBAR[0] / zeta[0] - 2 * DRPBAR[0] / zeta[0] ** 2 * DZ[0][0] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][0] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, 2) / zeta[1] ** 2 * DZ[1][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DDZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, -2) * zeta[0] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[0][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][0]) + (complex(0, -2) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, 1) * x[2] / zeta[1] ** 2 * DDZ[1][0] - 4 / zeta[1] ** 3 * DZ[1][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DDZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (0.1e1 / zeta[0] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 2 * DZ[0][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][0]) + (complex(0, 2) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * x[2] / zeta[1] ** 2 * DDZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (0.1e1 / zeta[0] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 2 * DZ[0][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2) + (complex(0, 2) / zeta[1] ** 2 * DZ[1][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DDZ[1][0] - 6 * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[2] / zeta[1] ** 3 * DDZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, -2) / zeta[0] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] ** 2 * DZ[0][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][0])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][0] * exp(2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][0] * exp(2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, 2) / zeta[2] ** 2 * DZ[2][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DDZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, -2) * zeta[0] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[0][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][0]) + (complex(0, -2) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 1) * x[2] / zeta[2] ** 2 * DDZ[2][0] - 4 / zeta[2] ** 3 * DZ[2][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DDZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (0.1e1 / zeta[0] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 2 * DZ[0][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][0]) + (complex(0, 2) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * x[2] / zeta[2] ** 2 * DDZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (0.1e1 / zeta[0] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 2 * DZ[0][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2) + (complex(0, 2) / zeta[2] ** 2 * DZ[2][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DDZ[2][0] - 6 * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * x[2] / zeta[2] ** 3 * DDZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, -2) / zeta[0] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] ** 2 * DZ[0][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][0])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[1][0] - 2 * DDM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[2][0] - 2 * DDM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) ** 2 * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[1] ** 3 + 6 * DRMBAR[0] / zeta[1] ** 4 * DZ[1][0] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][0] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][0] + 16 * x[2] / zeta[1] ** 2 - 64 * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][0] + DDRPBAR[0] / zeta[1] - 2 * DRPBAR[0] / zeta[1] ** 2 * DZ[1][0] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][0] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[2] ** 3 + 6 * DRMBAR[0] / zeta[2] ** 4 * DZ[2][0] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][0] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][0] + 16 * x[2] / zeta[2] ** 2 - 64 * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][0] + DDRPBAR[0] / zeta[2] - 2 * DRPBAR[0] / zeta[2] ** 2 * DZ[2][0] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][0] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) ** 2 * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0]) * (exp(-2 * mu[3]) - exp(-2 * mu[2]))


    cg39 = 2 * ((-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (2 * DM[0][0] * exp(-2 * mu[0]) - 2 * DM[2][0] * exp(-2 * mu[2]))


    cg40 = ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[0][0] * exp(-2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(-2 * mu[0]) + 2 * DDM[3][0] * exp(-2 * mu[3]) - 4 * DM[3][0] ** 2 * exp(-2 * mu[3]))


    cg41 = 2 * ((-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3]))


    cg42 = (2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[2] / zeta[1] ** 4 * DZ[1][0] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][0] - 8 / zeta[1] ** 2 + 32 * x[0] / zeta[1] ** 3 * DZ[1][0] - 6 * R / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][0] + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][0] + complex(0, -24) * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][0] + complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, -24) * x[2] / zeta[2] ** 4 * DZ[2][0] + complex(0, -24) * x[2] / zeta[2] ** 2 * DZ[2][0] - 8 / zeta[2] ** 2 + 32 * x[0] / zeta[2] ** 3 * DZ[2][0] - 6 * R / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][0] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][0] + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) * DZ[1][0] - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * DZ[1][0] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, -2) * zeta[0] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[0][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][0]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, -2) / zeta[0] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] ** 2 * DZ[0][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][0]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][0] + 4 / zeta[1] ** 3 * DZ[1][0] - 6 * x[0] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (-8 / zeta[1] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][0] + complex(0, 48) * x[1] / zeta[1] ** 4 * DZ[1][0] + complex(0, -48) * x[2] / zeta[1] ** 3 * DZ[1][0] - K ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 48 * x[0] / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][0] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][0] + 4 / zeta[1] ** 3 * DZ[1][0] - 6 * x[0] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (-8 / zeta[1] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][0] + complex(0, 48) * x[1] / zeta[1] ** 4 * DZ[1][0] + complex(0, -48) * x[2] / zeta[1] ** 3 * DZ[1][0] - K ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 48 * x[0] / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][0] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 8 / zeta[1]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0] + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DDZ[1][0] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 3 * DZ[1][0] ** 2) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (-8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) * DZ[2][0] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) * DZ[2][0] + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, -2) * zeta[0] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[0][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][0]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, -2) / zeta[0] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] ** 2 * DZ[0][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][0]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 3 * DZ[2][0] ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][0] + 4 / zeta[2] ** 3 * DZ[2][0] - 6 * x[0] / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (-8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, -48) * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 48) * x[1] / zeta[2] ** 4 * DZ[2][0] - K ** 2 / zeta[2] ** 2 * DDZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][0] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[0] / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][0] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][0] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][0] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 8 / zeta[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][0] + 4 / zeta[2] ** 3 * DZ[2][0] - 6 * x[0] / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (-8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, -48) * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 48) * x[1] / zeta[2] ** 4 * DZ[2][0] - K ** 2 / zeta[2] ** 2 * DDZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][0] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[0] / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][0] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][0] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][0] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 8 / zeta[2]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0] + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DDZ[2][0]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][0] * exp(2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][0] * exp(2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][0] * exp(2 * mu[1]) - 4 * DM[1][0] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][0] * exp(2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[0][0]) ** 2 * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[1] ** 3 + 6 * DRMBAR[0] / zeta[1] ** 4 * DZ[1][0] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][0] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][0] + 16 * x[2] / zeta[1] ** 2 - 64 * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][0] + DDRPBAR[0] / zeta[1] - 2 * DRPBAR[0] / zeta[1] ** 2 * DZ[1][0] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][0] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[2] ** 3 + 6 * DRMBAR[0] / zeta[2] ** 4 * DZ[2][0] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][0] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][0] + 16 * x[2] / zeta[2] ** 2 - 64 * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][0] + DDRPBAR[0] / zeta[2] - 2 * DRPBAR[0] / zeta[2] ** 2 * DZ[2][0] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][0] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DDM[2][0] - 2 * DDM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[0][0]) ** 2 * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DDM[1][0] - 2 * DDM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] - 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (exp(-2 * mu[3]) - exp(-2 * mu[2]))


    cg43 = (2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[2] / zeta[1] ** 4 * DZ[1][0] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][0] - 8 / zeta[1] ** 2 + 32 * x[0] / zeta[1] ** 3 * DZ[1][0] - 6 * R / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][0] + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][0] + complex(0, -24) * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][0] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][0] ** 2 + complex(0, -24) * x[2] / zeta[0] ** 2 * DZ[0][0] - 8 / zeta[0] ** 2 + 32 * x[0] / zeta[0] ** 3 * DZ[0][0] - 6 * R / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][0] + complex(0, -24) * x[2] / zeta[0] ** 4 * DZ[0][0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][0] * exp(2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][0] * exp(2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][0] * exp(2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][0] * exp(2 * mu[1]) + 4 * DM[1][0] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, -2) * zeta[2] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[2][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][0]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, -2) / zeta[2] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] ** 2 * DZ[2][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][0]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) * DZ[0][0] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) * DZ[0][0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DDZ[0][0] + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][0] + 4 / zeta[0] ** 3 * DZ[0][0] - 6 * x[0] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (-8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, -48) * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 48) * x[1] / zeta[0] ** 4 * DZ[0][0] - K ** 2 / zeta[0] ** 2 * DDZ[0][0] + 48 * x[0] / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] / zeta[0] ** 2 * DZ[0][0] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][0] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][0] + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][0] ** 2 - 8 / zeta[0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][0] + 4 / zeta[0] ** 3 * DZ[0][0] - 6 * x[0] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (-8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, -48) * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 48) * x[1] / zeta[0] ** 4 * DZ[0][0] - K ** 2 / zeta[0] ** 2 * DDZ[0][0] + 48 * x[0] / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] / zeta[0] ** 2 * DZ[0][0] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][0] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][0] + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][0] ** 2 - 8 / zeta[0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 3 * DZ[0][0] ** 2 + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0])) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, -2) / zeta[2] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] ** 2 * DZ[2][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][0]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, -2) * zeta[2] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[2][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][0]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 4 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * DZ[1][0] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) * DZ[1][0] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 3 * DZ[1][0] ** 2 + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DDZ[1][0] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][0] + 4 / zeta[1] ** 3 * DZ[1][0] - 6 * x[0] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][0]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0] + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (-8 / zeta[1] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][0] + complex(0, 48) * x[1] / zeta[1] ** 4 * DZ[1][0] + complex(0, -48) * x[2] / zeta[1] ** 3 * DZ[1][0] - K ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 48 * x[0] / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][0] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][0] + 4 / zeta[1] ** 3 * DZ[1][0] - 6 * x[0] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (-8 / zeta[1] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][0] + complex(0, 48) * x[1] / zeta[1] ** 4 * DZ[1][0] + complex(0, -48) * x[2] / zeta[1] ** 3 * DZ[1][0] - K ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 48 * x[0] / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][0] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) ** 2) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[0] ** 3 + 6 * DRMBAR[0] / zeta[0] ** 4 * DZ[0][0] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][0] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][0] + 16 * x[2] / zeta[0] ** 2 - 64 * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][0] + DDRPBAR[0] / zeta[0] - 2 * DRPBAR[0] / zeta[0] ** 2 * DZ[0][0] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][0] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[1] ** 3 + 6 * DRMBAR[0] / zeta[1] ** 4 * DZ[1][0] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][0] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][0] + 16 * x[2] / zeta[1] ** 2 - 64 * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][0] + DDRPBAR[0] / zeta[1] - 2 * DRPBAR[0] / zeta[1] ** 2 * DZ[1][0] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][0] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DDM[1][0] - 2 * DDM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[2][0]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DDM[0][0] - 2 * DDM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[2][0]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (exp(-2 * mu[0]) - exp(-2 * mu[3]))


    cg44 = (2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][0] + complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, -24) * x[2] / zeta[2] ** 4 * DZ[2][0] + complex(0, -24) * x[2] / zeta[2] ** 2 * DZ[2][0] - 8 / zeta[2] ** 2 + 32 * x[0] / zeta[2] ** 3 * DZ[2][0] - 6 * R / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][0] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][0] + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][0] * exp(2 * mu[1]) - 4 * DM[1][0] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][0] * exp(2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, 2) / zeta[2] ** 2 * DZ[2][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DDZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 4 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, -2) * zeta[2] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[2][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][0]) + 2 * (complex(0, -2) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 1) * x[2] / zeta[2] ** 2 * DDZ[2][0] - 4 / zeta[2] ** 3 * DZ[2][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DDZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 4 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (0.1e1 / zeta[2] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 2 * DZ[2][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][0]) + 2 * (complex(0, 2) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * x[2] / zeta[2] ** 2 * DDZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 4 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (0.1e1 / zeta[2] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 2 * DZ[2][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][0] + 2) + 2 * (complex(0, 2) / zeta[2] ** 2 * DZ[2][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DDZ[2][0] - 6 * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * x[2] / zeta[2] ** 3 * DDZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 4 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, -2) / zeta[2] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] ** 2 * DZ[2][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][0] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][0] ** 2 + complex(0, -24) * x[2] / zeta[0] ** 2 * DZ[0][0] - 8 / zeta[0] ** 2 + 32 * x[0] / zeta[0] ** 3 * DZ[0][0] - 6 * R / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][0] + complex(0, -24) * x[2] / zeta[0] ** 4 * DZ[0][0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[2] / zeta[1] ** 4 * DZ[1][0] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][0] - 8 / zeta[1] ** 2 + 32 * x[0] / zeta[1] ** 3 * DZ[1][0] - 6 * R / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][0] + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][0] + complex(0, -24) * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[2] ** 3 + 6 * DRMBAR[0] / zeta[2] ** 4 * DZ[2][0] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][0] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][0] + 16 * x[2] / zeta[2] ** 2 - 64 * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][0] + DDRPBAR[0] / zeta[2] - 2 * DRPBAR[0] / zeta[2] ** 2 * DZ[2][0] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][0] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) + (2 * DDM[2][0] * exp(2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][0] * exp(2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, 2) / zeta[1] ** 2 * DZ[1][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DDZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, -2) * zeta[2] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[2][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][0]) + (complex(0, -2) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, 1) * x[2] / zeta[1] ** 2 * DDZ[1][0] - 4 / zeta[1] ** 3 * DZ[1][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DDZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (0.1e1 / zeta[2] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 2 * DZ[2][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][0]) + (complex(0, 2) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * x[2] / zeta[1] ** 2 * DDZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (0.1e1 / zeta[2] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 2 * DZ[2][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][0] + 2) + (complex(0, 2) / zeta[1] ** 2 * DZ[1][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DDZ[1][0] - 6 * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[2] / zeta[1] ** 3 * DDZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, -2) / zeta[2] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] ** 2 * DZ[2][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][0])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][0] * exp(2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][0] * exp(2 * mu[1]) + 4 * DM[1][0] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, 2) / zeta[0] ** 2 * DZ[0][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DDZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, -2) * zeta[2] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[2][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][0]) + (complex(0, -2) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 1) * x[2] / zeta[0] ** 2 * DDZ[0][0] - 4 / zeta[0] ** 3 * DZ[0][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DDZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (0.1e1 / zeta[2] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 2 * DZ[2][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][0]) + (complex(0, 2) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * x[2] / zeta[0] ** 2 * DDZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (0.1e1 / zeta[2] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 2 * DZ[2][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][0] + 2) + (complex(0, 2) / zeta[0] ** 2 * DZ[0][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DDZ[0][0] - 6 * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * x[2] / zeta[0] ** 3 * DDZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, -2) / zeta[2] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] ** 2 * DZ[2][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][0])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[1] ** 3 + 6 * DRMBAR[0] / zeta[1] ** 4 * DZ[1][0] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][0] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][0] + 16 * x[2] / zeta[1] ** 2 - 64 * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][0] + DDRPBAR[0] / zeta[1] - 2 * DRPBAR[0] / zeta[1] ** 2 * DZ[1][0] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][0] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[0] ** 3 + 6 * DRMBAR[0] / zeta[0] ** 4 * DZ[0][0] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][0] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][0] + 16 * x[2] / zeta[0] ** 2 - 64 * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][0] + DDRPBAR[0] / zeta[0] - 2 * DRPBAR[0] / zeta[0] ** 2 * DZ[0][0] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][0] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[1][0] - 2 * DDM[2][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[2][0]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[0][0] - 2 * DDM[2][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[2][0]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2))) * (exp(-2 * mu[0]) - exp(-2 * mu[3]))


    cg45 = (2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][0] * exp(2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][0] * exp(2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][0] * exp(2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][0] * exp(2 * mu[1]) + 4 * DM[1][0] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, 2) / zeta[0] ** 2 * DZ[0][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DDZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, -2) * zeta[3] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[3][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][0]) + (complex(0, -2) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 1) * x[2] / zeta[0] ** 2 * DDZ[0][0] - 4 / zeta[0] ** 3 * DZ[0][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DDZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (0.1e1 / zeta[3] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 3 * DZ[3][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][0] + complex(0, 4) * x[2] / zeta[3] ** 2 * DZ[3][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][0]) + (complex(0, 2) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * x[2] / zeta[0] ** 2 * DDZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (0.1e1 / zeta[3] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 3 * DZ[3][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][0] + complex(0, 4) * x[2] / zeta[3] ** 2 * DZ[3][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][0] + 2) + (complex(0, 2) / zeta[0] ** 2 * DZ[0][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DDZ[0][0] - 6 * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * x[2] / zeta[0] ** 3 * DDZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, -2) / zeta[3] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] ** 2 * DZ[3][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][0])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][0] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][0] ** 2 + complex(0, -24) * x[2] / zeta[0] ** 2 * DZ[0][0] - 8 / zeta[0] ** 2 + 32 * x[0] / zeta[0] ** 3 * DZ[0][0] - 6 * R / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][0] + complex(0, -24) * x[2] / zeta[0] ** 4 * DZ[0][0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[2] / zeta[1] ** 4 * DZ[1][0] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][0] - 8 / zeta[1] ** 2 + 32 * x[0] / zeta[1] ** 3 * DZ[1][0] - 6 * R / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][0] + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][0] + complex(0, -24) * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][0] + complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, -24) * x[2] / zeta[2] ** 4 * DZ[2][0] + complex(0, -24) * x[2] / zeta[2] ** 2 * DZ[2][0] - 8 / zeta[2] ** 2 + 32 * x[0] / zeta[2] ** 3 * DZ[2][0] - 6 * R / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][0] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][0] + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, 2) / zeta[1] ** 2 * DZ[1][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DDZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, -2) * zeta[3] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[3][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][0]) + (complex(0, -2) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, 1) * x[2] / zeta[1] ** 2 * DDZ[1][0] - 4 / zeta[1] ** 3 * DZ[1][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DDZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (0.1e1 / zeta[3] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 3 * DZ[3][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][0] + complex(0, 4) * x[2] / zeta[3] ** 2 * DZ[3][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][0]) + (complex(0, 2) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * x[2] / zeta[1] ** 2 * DDZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (0.1e1 / zeta[3] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 3 * DZ[3][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][0] + complex(0, 4) * x[2] / zeta[3] ** 2 * DZ[3][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][0] + 2) + (complex(0, 2) / zeta[1] ** 2 * DZ[1][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DDZ[1][0] - 6 * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[2] / zeta[1] ** 3 * DDZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, -2) / zeta[3] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] ** 2 * DZ[3][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][0])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, 2) / zeta[2] ** 2 * DZ[2][0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DDZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, -2) * zeta[3] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[3][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][0]) + (complex(0, -2) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, 1) * x[2] / zeta[2] ** 2 * DDZ[2][0] - 4 / zeta[2] ** 3 * DZ[2][0] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DDZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (0.1e1 / zeta[3] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 3 * DZ[3][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][0] + complex(0, 4) * x[2] / zeta[3] ** 2 * DZ[3][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][0]) + (complex(0, 2) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * x[2] / zeta[2] ** 2 * DDZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (0.1e1 / zeta[3] ** 2 + 4 * (-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 3 * DZ[3][0] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][0] + complex(0, 4) * x[2] / zeta[3] ** 2 * DZ[3][0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][0] + 2) + (complex(0, 2) / zeta[2] ** 2 * DZ[2][0] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DDZ[2][0] - 6 * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * x[2] / zeta[2] ** 3 * DDZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, -2) / zeta[3] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] ** 2 * DZ[3][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][0])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][0] * exp(2 * mu[1]) - 4 * DM[1][0] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][0] * exp(2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[2] ** 3 + 6 * DRMBAR[0] / zeta[2] ** 4 * DZ[2][0] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][0] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][0] + 16 * x[2] / zeta[2] ** 2 - 64 * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][0] + DDRPBAR[0] / zeta[2] - 2 * DRPBAR[0] / zeta[2] ** 2 * DZ[2][0] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][0] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[1] ** 3 + 6 * DRMBAR[0] / zeta[1] ** 4 * DZ[1][0] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][0] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][0] + 16 * x[2] / zeta[1] ** 2 - 64 * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][0] + DDRPBAR[0] / zeta[1] - 2 * DRPBAR[0] / zeta[1] ** 2 * DZ[1][0] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][0] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[0] ** 3 + 6 * DRMBAR[0] / zeta[0] ** 4 * DZ[0][0] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][0] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][0] + 16 * x[2] / zeta[0] ** 2 - 64 * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][0] + DDRPBAR[0] / zeta[0] - 2 * DRPBAR[0] / zeta[0] ** 2 * DZ[0][0] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][0] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[1][0] - 2 * DDM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[2][0] - 2 * DDM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) ** 2 * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[0][0] - 2 * DDM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((complex(0, -1) / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][0] + 0.1e1 / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][0] + 2 * x[2] / zeta[2] ** 3 * DZ[2][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((complex(0, -1) / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][0] + 0.1e1 / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][0] + 2 * x[2] / zeta[0] ** 3 * DZ[0][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((complex(0, -1) / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][0] + 0.1e1 / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0]) + (-1 + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][0] + complex(0, -2) * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][0] + 2 * x[0]) + (complex(0, -1) / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][0] + 2 * x[2] / zeta[1] ** 3 * DZ[1][0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0]) * (-exp(-2 * mu[0]) + exp(-2 * mu[2]))


    cg46 = 2 * ((-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[0][0]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[0][0]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2]))

    cg47 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg48 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg49 = 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 3 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0] ** 2

    cg50 = -(-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * DZ[0][0] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[0] * DDZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DDZ[0][0] + complex(0, -24) * zeta[0] * x[0] * x[2] * DZ[0][0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] * DZ[0][0] + complex(0, -12) * DDZ[0][0] * x[0] * x[2] - 24 * zeta[0] * x[1] * x[2] * DZ[0][0] ** 2 - 12 * zeta[0] ** 2 * x[1] * x[2] * DDZ[0][0] - 2 * K ** 2 * DZ[0][0] ** 2 - 2 * K ** 2 * zeta[0] * DDZ[0][0] + complex(0, -24) * DZ[0][0] * x[2] + 8 + 8 * DZ[0][0] ** 2 * x[0] ** 2 + 32 * zeta[0] * x[0] * DZ[0][0] + 8 * zeta[0] * x[0] ** 2 * DDZ[0][0] + 8 * zeta[0] ** 2 + 8 * DZ[0][0] ** 2 * x[1] ** 2 + 8 * zeta[0] * x[1] ** 2 * DDZ[0][0] - 16 * DZ[0][0] ** 2 * x[2] ** 2 - 16 * zeta[0] * x[2] ** 2 * DDZ[0][0] + 12 * DDZ[0][0] * x[1] * x[2])

    cg51 = -(-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * DZ[2][0] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] * DDZ[2][0] + complex(0, -24) * zeta[2] ** 2 * x[2] * DZ[2][0] + complex(0, -24) * zeta[2] * x[0] * x[2] * DZ[2][0] ** 2 + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DDZ[2][0] + complex(0, -24) * x[2] * DZ[2][0] - 24 * zeta[2] * x[1] * x[2] * DZ[2][0] ** 2 - 12 * zeta[2] ** 2 * x[1] * x[2] * DDZ[2][0] - 2 * K ** 2 * DZ[2][0] ** 2 - 2 * K ** 2 * zeta[2] * DDZ[2][0] + complex(0, -12) * x[0] * x[2] * DDZ[2][0] + 8 + 8 * DZ[2][0] ** 2 * x[0] ** 2 + 32 * zeta[2] * x[0] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DDZ[2][0] + 8 * zeta[2] ** 2 + 8 * DZ[2][0] ** 2 * x[1] ** 2 + 8 * zeta[2] * x[1] ** 2 * DDZ[2][0] - 16 * DZ[2][0] ** 2 * x[2] ** 2 - 16 * zeta[2] * x[2] ** 2 * DDZ[2][0] + 12 * DDZ[2][0] * x[1] * x[2])

    cg52 = -(-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DDRM[0] * zeta[0] ** 3 + 6 * DRM[0] * zeta[0] ** 2 * DZ[0][0] + 6 * RM * zeta[0] * DZ[0][0] ** 2 + 3 * RM * zeta[0] ** 2 * DDZ[0][0] + 16 * zeta[0] ** 2 * x[2] + 64 * x[0] * x[2] * zeta[0] * DZ[0][0] + 4 * R * x[2] * DZ[0][0] ** 2 + 4 * R * x[2] * zeta[0] * DDZ[0][0] - DDRP[0] * zeta[0] - 2 * DRP[0] * DZ[0][0] - RP * DDZ[0][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2))

    cg53 = -2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg54 = -2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg55 = -2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg56 = -2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg57 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][0] + 16 * zeta[2] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][0] - DRP[0] * zeta[2] - RP * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2

    cg58 = -2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg59 = -3 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDZ[2][0]

    cg60 = 12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 5 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][0] ** 2

    cg61 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDSM[0]

    cg62 = -6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][0]

    cg63 = -2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg64 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0]

    cg65 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0]

    cg66 = -6 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][0]

    cg67 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 3 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0]) ** 2

    cg68 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2

    cg69 = -2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg70 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg71 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DDZ[0][0] + complex(0, 24) * x[2] * DZ[0][0] + complex(0, 24) * x[2] * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 - 32 * zeta[0] * x[0] * DZ[0][0] - 2 * R * DZ[0][0] ** 2 - 2 * R * zeta[0] * DDZ[0][0] + complex(0, 12) * xp * x[2] * DDZ[0][0] + complex(0, 24) * x[2] * xm * zeta[0] * DZ[0][0] ** 2 + 2 * DSP[0] ** 2 + 2 * SP * DDSP[0])

    cg72 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 24) * x[2] * DZ[2][0] + complex(0, 12) * xp * x[2] * DDZ[2][0] + complex(0, 24) * x[2] * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 - 32 * zeta[2] * x[0] * DZ[2][0] - 2 * R * DZ[2][0] ** 2 - 2 * R * zeta[2] * DDZ[2][0] + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DDZ[2][0] + complex(0, 24) * x[2] * xm * zeta[2] * DZ[2][0] ** 2 + 2 * DSP[0] ** 2 + 2 * SP * DDSP[0])

    cg73 = -6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][0]

    cg74 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg75 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDSM[0]

    cg76 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0]

    cg77 = -6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][0]

    cg78 = -2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg79 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0]

    cg80 = -4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0]

    cg81 = -3 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDZ[0][0]

    cg82 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg83 = 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg84 = 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 3 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0] ** 2

    cg85 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 3 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0]) ** 2

    cg86 = -12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][0]

    cg87 = 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg88 = -4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg89 = -4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg90 = 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg91 = -12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][0]

    cg92 = -2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[0] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][0] + 16 * zeta[0] ** 2 * x[0] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][0] - DRP[0] * zeta[0] - RP * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0]))

    cg93 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0])

    cg94 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0])

    cg95 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0])

    cg96 = 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0])

    cg97 = 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0])

    cg98 = 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0])

    cg99 = 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0])

    cg100 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0])

    cg101 = -4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[0]

    cg102 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg103 = 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[0]

    cg104 = -2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][0] + complex(0, -4) * zeta[2] ** 3 * x[2] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * zeta[2] * DZ[2][0] + complex(0, -12) * x[2] * zeta[2] + complex(0, -12) * x[0] * x[2] * DZ[2][0] + 8 * zeta[2] * x[0] ** 2 * DZ[2][0] + 8 * zeta[2] ** 2 * x[0] + 8 * zeta[2] * x[1] ** 2 * DZ[2][0] - 16 * zeta[2] * x[2] ** 2 * DZ[2][0] + complex(0, 8) * x[1] + 12 * DZ[2][0] * x[1] * x[2] + 8 * x[0])

    cg105 = -6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][0]

    cg106 = 12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 5 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][0] ** 2

    cg107 = -2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg108 = -6 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][0]

    cg109 = -2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][0] + complex(0, -4) * zeta[0] ** 3 * x[2] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][0] - 2 * K ** 2 * zeta[0] * DZ[0][0] + complex(0, -12) * DZ[0][0] * x[0] * x[2] + complex(0, -12) * zeta[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][0] + 8 * zeta[0] ** 2 * x[0] + 8 * zeta[0] * x[1] ** 2 * DZ[0][0] - 16 * zeta[0] * x[2] ** 2 * DZ[0][0] + complex(0, 8) * x[1] + 12 * DZ[0][0] * x[1] * x[2] + 8 * x[0])

    cg110 = -(-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DDRM[0] * zeta[2] ** 3 + 6 * DRM[0] * zeta[2] ** 2 * DZ[2][0] + 6 * RM * zeta[2] * DZ[2][0] ** 2 + 3 * RM * zeta[2] ** 2 * DDZ[2][0] + 16 * zeta[2] ** 2 * x[2] + 64 * x[0] * x[2] * zeta[2] * DZ[2][0] + 4 * R * x[2] * DZ[2][0] ** 2 + 4 * R * x[2] * zeta[2] * DDZ[2][0] - DDRP[0] * zeta[2] - 2 * DRP[0] * DZ[2][0] - RP * DDZ[2][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2))


    cg111 = ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, -2) / zeta[3] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] ** 2 * DZ[3][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][0]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, -2) * zeta[3] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[3][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][0]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) * DZ[2][0] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) * DZ[2][0] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DDZ[2][0] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][0] + 4 / zeta[2] ** 3 * DZ[2][0] - 6 * x[0] / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (-8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, -48) * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 48) * x[1] / zeta[2] ** 4 * DZ[2][0] - K ** 2 / zeta[2] ** 2 * DDZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][0] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[0] / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][0] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][0] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][0] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 8 / zeta[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][0] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][0] + 4 / zeta[2] ** 3 * DZ[2][0] - 6 * x[0] / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (-8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, -48) * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 48) * x[1] / zeta[2] ** 4 * DZ[2][0] - K ** 2 / zeta[2] ** 2 * DDZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][0] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][0] + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][0] ** 2 + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][0] ** 2 + 48 * x[0] / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][0] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][0] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][0] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][0] - 8 / zeta[2]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 3 * DZ[2][0] ** 2 + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, -2) * zeta[3] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[3][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][0]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, -2) / zeta[3] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] ** 2 * DZ[3][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][0]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) * DZ[0][0] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) * DZ[0][0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DDZ[0][0] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 3 * DZ[0][0] ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][0] + 4 / zeta[0] ** 3 * DZ[0][0] - 6 * x[0] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (-8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, -48) * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 48) * x[1] / zeta[0] ** 4 * DZ[0][0] - K ** 2 / zeta[0] ** 2 * DDZ[0][0] + 48 * x[0] / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] / zeta[0] ** 2 * DZ[0][0] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][0] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][0] + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][0] ** 2 - 8 / zeta[0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][0] + 4 / zeta[0] ** 3 * DZ[0][0] - 6 * x[0] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (-8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, -48) * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 48) * x[1] / zeta[0] ** 4 * DZ[0][0] - K ** 2 / zeta[0] ** 2 * DDZ[0][0] + 48 * x[0] / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] / zeta[0] ** 2 * DZ[0][0] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][0] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][0] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][0] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][0] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][0] + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][0] ** 2 - 8 / zeta[0]) + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][0] * exp(2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][0] * exp(2 * mu[1]) + 4 * DM[1][0] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[0] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[2] / zeta[1] ** 4 * DZ[1][0] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][0] - 8 / zeta[1] ** 2 + 32 * x[0] / zeta[1] ** 3 * DZ[1][0] - 6 * R / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][0] + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][0] + complex(0, -24) * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][0] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][0] ** 2 + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][0] ** 2 + complex(0, -24) * x[2] / zeta[0] ** 2 * DZ[0][0] - 8 / zeta[0] ** 2 + 32 * x[0] / zeta[0] ** 3 * DZ[0][0] - 6 * R / zeta[0] ** 4 * DZ[0][0] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][0] + complex(0, -24) * x[2] / zeta[0] ** 4 * DZ[0][0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][0] + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][0] + complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][0] ** 2 + complex(0, -24) * x[2] / zeta[2] ** 4 * DZ[2][0] + complex(0, -24) * x[2] / zeta[2] ** 2 * DZ[2][0] - 8 / zeta[2] ** 2 + 32 * x[0] / zeta[2] ** 3 * DZ[2][0] - 6 * R / zeta[2] ** 4 * DZ[2][0] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][0] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][0] + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][0] ** 2 + 2 * DSM[0] ** 2 + 2 * SM * DDSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][0] * exp(2 * mu[1]) - 4 * DM[1][0] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][0] * exp(2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][0] * exp(2 * mu[2]) + 4 * DM[2][0] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][0] * exp(2 * mu[0]) - 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, -2) * zeta[3] + complex(0, 0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, 8) * x[1]) * DZ[3][0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][0]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, -2) / zeta[3] + complex(0, -0.1e1 / 0.2e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] ** 2 * DZ[3][0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][0] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][0]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) * DZ[1][0] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) * DZ[1][0] - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 3 * DZ[1][0] ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][0] + 4 / zeta[1] ** 3 * DZ[1][0] - 6 * x[0] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (-8 / zeta[1] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][0] + complex(0, 48) * x[1] / zeta[1] ** 4 * DZ[1][0] + complex(0, -48) * x[2] / zeta[1] ** 3 * DZ[1][0] - K ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 48 * x[0] / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][0] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][0] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][0] + 4 / zeta[1] ** 3 * DZ[1][0] - 6 * x[0] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (-8 / zeta[1] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][0] ** 2 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][0] + complex(0, 48) * x[1] / zeta[1] ** 4 * DZ[1][0] + complex(0, -48) * x[2] / zeta[1] ** 3 * DZ[1][0] - K ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][0] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][0] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][0] ** 2 + 48 * x[0] / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][0] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][0] - 8 / zeta[1]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DDZ[1][0] + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1)) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[3][0]) ** 2 * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[2] ** 3 + 6 * DRMBAR[0] / zeta[2] ** 4 * DZ[2][0] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][0] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][0] + 16 * x[2] / zeta[2] ** 2 - 64 * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][0] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][0] + DDRPBAR[0] / zeta[2] - 2 * DRPBAR[0] / zeta[2] ** 2 * DZ[2][0] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][0] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[0] ** 3 + 6 * DRMBAR[0] / zeta[0] ** 4 * DZ[0][0] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][0] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][0] + 16 * x[2] / zeta[0] ** 2 - 64 * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][0] + DDRPBAR[0] / zeta[0] - 2 * DRPBAR[0] / zeta[0] ** 2 * DZ[0][0] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][0] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[0] / zeta[1] ** 3 + 6 * DRMBAR[0] / zeta[1] ** 4 * DZ[1][0] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][0] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][0] + 16 * x[2] / zeta[1] ** 2 - 64 * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][0] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][0] + DDRPBAR[0] / zeta[1] - 2 * DRPBAR[0] / zeta[1] ** 2 * DZ[1][0] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][0] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][0] - x[2] * (2 * SM * DDSM[0] + 2 * SP * DDSP[0] + 2 * DSM[0] ** 2 + 2 * DSP[0] ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[3][0]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DDM[0][0] - 2 * DDM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[3][0]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DDM[1][0] - 2 * DDM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DDM[2][0] - 2 * DDM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][0] + complex(0, 12) * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][0] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][0] - 0.1e1 / zeta[2] ** 2 + 2 * x[0] / zeta[2] ** 3 * DZ[2][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] ** 2 + complex(0, -8) * x[1] / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][0] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 3 + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][0] - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][0] + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][0] + complex(0, 4) * x[2] - K ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[0] / zeta[2] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][0] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][0] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][0]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][0]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][0] - 0.1e1 / zeta[0] ** 2 + 2 * x[0] / zeta[0] ** 3 * DZ[0][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][0] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 12) * x[2] / zeta[0] ** 2 + complex(0, -8) * x[1] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][0] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][0] - 8 * x[0] / zeta[0] ** 3 + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][0] - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][0] + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][0] + complex(0, 4) * x[2] - K ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[0] / zeta[0] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][0] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][0]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][0] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][0] - 0.1e1 / zeta[1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DZ[1][0] - 1) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][0] - x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, 12) * x[2] / zeta[1] ** 2 + complex(0, -8) * x[1] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][0] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][0] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][0] - 8 * x[0] / zeta[1] ** 3 + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][0] - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][0] + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][0] + complex(0, 4) * x[2] - K ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[0] / zeta[1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][0] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][0] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][0]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][0]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (2 * DM[2][0] * exp(2 * mu[2]) - 2 * DM[0][0] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][0] - 8 * x[0] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][0] + complex(0, 12) * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][0] + 2 * SM * DSM[0]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][0] + 16 * x[0] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][0] + DRPBAR[0] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][0] + 16 * x[0] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][0] + DRPBAR[0] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[0] * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[0] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][0] + 16 * x[0] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][0] + DRPBAR[0] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][0] - x[2] * (2 * SM * DSM[0] + 2 * SP * DSP[0])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][0] - 2 * DM[3][0]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][0] - 2 * DM[3][0]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0] - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][0] - 2 * DM[3][0]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[0]) * (-exp(-2 * mu[0]) + exp(-2 * mu[2]))

    cg112 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][0] - 8 * zeta[0] ** 2 * x[0] - 2 * R * zeta[0] * DZ[0][0] + complex(0, 12) * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][0] + 2 * SP * DSP[0]) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg113 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][0] - 8 * zeta[2] ** 2 * x[0] - 2 * R * zeta[2] * DZ[2][0] + complex(0, 12) * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][0] + 2 * SP * DSP[0]) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg114 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg115 = 4 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg116 = 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg117 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg118 = 4 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg119 = 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg120 = -8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[0] ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg121 = -8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[0] ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg122 = 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg123 = (-2 * DDM[2][0] * exp(2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][0] * exp(2 * mu[1]) + 4 * DM[1][0] ** 2 * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg124 = (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DDM[3][0] * exp(-2 * mu[3]) + 4 * DM[3][0] ** 2 * exp(-2 * mu[3]) + 2 * DDM[2][0] * exp(-2 * mu[2]) - 4 * DM[2][0] ** 2 * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg125 = (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-2 * K ** 2 * cm * DZ[0][0] ** 2 * x[0] + 8 * K ** 2 * k1 ** 2 * DZ[0][0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * DDZ[0][0] - 48 * zeta[0] ** 2 * x[0] * x[1] ** 2 * DZ[0][0] ** 2 - 4 * K ** 2 * cm * zeta[0] * DZ[0][0] - 8 * K ** 2 * cm * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DDZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DDZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DDZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DDZ[0][0] - 96 * x[0] * x[2] ** 2 * zeta[0] ** 2 * DZ[0][0] ** 2 - 24 * zeta[0] ** 4 * x[0] - 4 * K ** 2 * zeta[0] * DZ[0][0] - 96 * zeta[0] * x[2] ** 2 * DZ[0][0] + 64 * DZ[0][0] * x[1] * x[2] + complex(0, 24) * x[1] - 2 * K ** 2 * DZ[0][0] ** 2 * x[0] - 48 * DZ[0][0] ** 2 * x[0] * x[2] ** 2 - 64 * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 96 * zeta[0] ** 3 * x[0] ** 2 * DZ[0][0] - 32 * zeta[0] ** 3 * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] ** 2 * x[0] ** 3 * DZ[0][0] ** 2 - 16 * zeta[0] ** 3 * x[0] ** 3 * DDZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DDZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DDZ[0][0] + complex(0, 48) * zeta[0] ** 2 * x[1] ** 3 * DZ[0][0] ** 2 + complex(0, 96) * x[2] ** 3 * zeta[0] * DZ[0][0] ** 2 + complex(0, -32) * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[1] + complex(0, -64) * x[0] * x[2] * DZ[0][0] + complex(0, -6) * K ** 2 * DZ[0][0] ** 2 * x[1] + complex(0, -48) * DZ[0][0] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DDZ[0][0] + complex(0, 16) * x[1] ** 2 * x[2] * DDZ[0][0] + 16 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][0] - 12 * K ** 2 * cm * x[0] * zeta[0] ** 2 * DZ[0][0] ** 2 - 2 * K ** 2 * cm * zeta[0] * x[0] * DDZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DDZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DDZ[0][0] + 24 * x[0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DDZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DDZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DDZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DDZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DDZ[0][0] + complex(0, 12) * K ** 2 * cm * x[2] * zeta[0] * DZ[0][0] ** 2 + complex(0, 12) * K ** 2 * cm * x[1] * zeta[0] ** 2 * DZ[0][0] ** 2 + complex(0, -24) * K ** 2 * k1 ** 2 * x[2] * zeta[0] * DZ[0][0] ** 2 + complex(0, 96) * x[1] * x[2] ** 2 * zeta[0] ** 2 * DZ[0][0] ** 2 + complex(0, 12) * K ** 2 * x[2] * zeta[0] * DZ[0][0] ** 2 + complex(0, 48) * zeta[0] ** 2 * x[0] ** 2 * x[1] * DZ[0][0] ** 2 + complex(0, 64) * zeta[0] ** 3 * x[0] * x[1] * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DDZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DDZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DDZ[0][0] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DDZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DDZ[0][0] + complex(0, -2) * K ** 2 * cm * DZ[0][0] ** 2 * x[1] + complex(0, 8) * K ** 2 * k1 ** 2 * DZ[0][0] ** 2 * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg126 = (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DDM[0][0] * exp(-2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(-2 * mu[0]) + 2 * DDM[3][0] * exp(-2 * mu[3]) - 4 * DM[3][0] ** 2 * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg127 = (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-4 * K ** 2 * zeta[2] * DZ[2][0] - 96 * zeta[2] * x[2] ** 2 * DZ[2][0] + 64 * DZ[2][0] * x[1] * x[2] + complex(0, 24) * x[1] - 2 * K ** 2 * x[0] * DZ[2][0] ** 2 - 48 * x[0] * x[2] ** 2 * DZ[2][0] ** 2 - 48 * x[0] ** 3 * zeta[2] ** 2 * DZ[2][0] ** 2 - 32 * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] - 64 * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 96 * x[0] ** 2 * zeta[2] ** 3 * DZ[2][0] - 16 * x[0] ** 3 * zeta[2] ** 3 * DDZ[2][0] - 24 * x[0] * zeta[2] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * DDZ[2][0] + complex(0, -32) * x[2] * zeta[2] + complex(0, 8) * x[1] * zeta[2] ** 4 + complex(0, 96) * x[2] ** 3 * zeta[2] * DZ[2][0] ** 2 + complex(0, 48) * x[1] ** 3 * zeta[2] ** 2 * DZ[2][0] ** 2 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DDZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DDZ[2][0] + complex(0, -64) * x[0] * x[2] * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * DZ[2][0] ** 2 + complex(0, -48) * x[1] * x[2] ** 2 * DZ[2][0] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DDZ[2][0] + 16 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DDZ[2][0] - 12 * K ** 2 * cm * x[0] * zeta[2] ** 2 * DZ[2][0] ** 2 + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DDZ[2][0] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DDZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * DZ[2][0] ** 2 - 2 * K ** 2 * cm * x[0] * DZ[2][0] ** 2 + 32 * x[0] * x[1] * x[2] * DDZ[2][0] - 48 * x[0] * x[1] ** 2 * zeta[2] ** 2 * DZ[2][0] ** 2 - 96 * x[0] * x[2] ** 2 * zeta[2] ** 2 * DZ[2][0] ** 2 - 8 * K ** 2 * cm * zeta[2] ** 3 * DZ[2][0] - 4 * K ** 2 * cm * zeta[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DDZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DDZ[2][0] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DDZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DDZ[2][0] + 24 * x[0] + complex(0, 12) * K ** 2 * cm * x[1] * zeta[2] ** 2 * DZ[2][0] ** 2 + complex(0, 12) * K ** 2 * cm * x[2] * zeta[2] * DZ[2][0] ** 2 + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DDZ[2][0] + complex(0, -24) * K ** 2 * k1 ** 2 * x[2] * zeta[2] * DZ[2][0] ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DDZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DDZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DDZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DDZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * DZ[2][0] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * DZ[2][0] ** 2 + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DDZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DDZ[2][0] + complex(0, 12) * K ** 2 * x[2] * zeta[2] * DZ[2][0] ** 2 + complex(0, 48) * x[0] ** 2 * x[1] * zeta[2] ** 2 * DZ[2][0] ** 2 + complex(0, 96) * x[1] * x[2] ** 2 * zeta[2] ** 2 * DZ[2][0] ** 2 + complex(0, 64) * x[0] * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DDZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DDZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DDZ[2][0]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg128 = (-2 * DDM[1][0] * exp(2 * mu[1]) - 4 * DM[1][0] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][0] * exp(2 * mu[0]) + 4 * DM[0][0] ** 2 * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg129 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (-16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][0] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 24) * x[0] * x[1] - K ** 2 * cm * zeta[2] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[2] + complex(0, 8) * x[0] * x[1] * zeta[2] ** 4 - K ** 2 * cm * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][0] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][0] + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][0] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][0] - 8 * x[2] ** 2 * zeta[2] ** 4 - 12 * zeta[2] ** 4 * x[0] ** 2 - 4 * zeta[2] ** 4 * x[1] ** 2 + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][0] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][0] - 24 * zeta[2] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + 32 * zeta[2] * x[1] * x[2] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][0] + 32 * x[0] * x[1] * x[2] * DZ[2][0] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][0] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][0] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][0] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][0] - K ** 2 * zeta[2] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][0] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][0] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][0] - K ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg130 = 2 * (-2 * DM[1][0] * exp(2 * mu[1]) + 2 * DM[0][0] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][0] * exp(-2 * mu[0]) + 2 * DM[3][0] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg131 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * DSM[0] ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg132 = -2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg133 = 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg134 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (-2 * DM[3][0] * exp(-2 * mu[3]) + 2 * DM[2][0] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg135 = 2 * (-2 * DM[2][0] * exp(2 * mu[2]) + 2 * DM[1][0] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-12 * zeta[0] ** 4 * x[0] ** 2 - 4 * zeta[0] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * zeta[0] ** 4 - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][0] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + 32 * zeta[0] * x[1] * x[2] + 12 * x[0] ** 2 - 12 * x[1] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][0] - K ** 2 * cm * zeta[0] ** 2 + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][0] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][0] - K ** 2 * cm * zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * zeta[0] + complex(0, 8) * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][0] + complex(0, 24) * x[0] * x[1] - 24 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][0] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][0] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][0] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][0] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][0] - K ** 2 * zeta[0] ** 2 + 32 * x[0] * x[1] * x[2] * DZ[0][0] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][0] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][0] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][0] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][0] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][0] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][0] - K ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg136 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * DSM[0] ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg137 = -2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg138 = 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * x[0] ** 3 + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)

    cg139 = 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 + 4 * x[0] ** 3 - 4 * x[0] ** 3 * zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)


    return cg12  + cg13  + cg14  + cg15  + cg0  + cg1  + cg2  + cg3  + cg4  + cg5  + cg6  + cg7  + cg8  + cg9  + cg10  + cg11  + cg16  + cg17  + cg18  + cg19  + cg20  + cg21  + cg22  + cg23  + cg24  + cg25  + cg26  + cg27  + cg28  + cg29  + cg30  + cg31  + cg32  + cg33  + cg34  + cg35  + cg36  + cg37  + cg38  + cg39  + cg40  + cg41  + cg42  + cg43  + cg44  + cg45  + cg46  + cg47  + cg48  + cg49  + cg50  + cg51  + cg52  + cg53  + cg54  + cg55  + cg56  + cg57  + cg58  + cg59  + cg60  + cg61  + cg62  + cg63  + cg64  + cg65  + cg66  + cg67  + cg68  + cg69  + cg70  + cg71  + cg72  + cg73  + cg74  + cg75  + cg76  + cg77  + cg78  + cg79  + cg80  + cg81  + cg82  + cg83  + cg84  + cg85  + cg86  + cg87  + cg88  + cg89  + cg90  + cg91  + cg92  + cg93  + cg94  + cg95  + cg96  + cg97  + cg98  + cg99  + cg100  + cg101  + cg102  + cg103  + cg104  + cg105  + cg106  + cg107  + cg108  + cg109  + cg110  + cg111  + cg112  + cg113  + cg114  + cg115  + cg116  + cg117  + cg118  + cg119  + cg120  + cg121  + cg122  + cg123  + cg124  + cg125  + cg126  + cg127  + cg128  + cg129  + cg130  + cg131  + cg132  + cg133  + cg134  + cg135  + cg136  + cg137  + cg138  + cg139

