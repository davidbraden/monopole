DPHI1 = numpy.mat([[((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 1 / Zeta[1] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 / Zeta[1] * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3])) + 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[2] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * Zeta[2] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] * Zeta[2] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[0] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * Zeta[0] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] * Zeta[0] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 6 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[2] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * Zeta[2] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[2] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * Zeta[2] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -4) * Zeta[2] ** 3 * x[2] + 24 * Zeta[2] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * x[2] * Zeta[2] + complex(0, 24) * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 16 * Zeta[2] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * Zeta[2] ** 2 * x[0] - 16 * Zeta[2] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * Zeta[2] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * x[1] * x[2] + 8 * x[0]) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[0] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * Zeta[0] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[0] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * Zeta[0] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -4) * Zeta[0] ** 3 * x[2] + 24 * Zeta[0] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[0] * x[2] + complex(0, -12) * Zeta[0] * x[2] - 16 * Zeta[0] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * Zeta[0] ** 2 * x[0] - 16 * Zeta[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[1] * x[2] + 8 * x[0]) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-8 * x[2] ** 2 * Zeta[0] ** 4 - 12 * Zeta[0] ** 4 * x[0] ** 2 - 4 * Zeta[0] ** 4 * x[1] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] ** 3 * x[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 96 * Zeta[0] * x[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 24 * Zeta[0] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K * (2 * E - K) * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] ** 3 * x[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[0] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] * x[1] * x[2] + complex(0, -32) * Zeta[0] ** 3 * x[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * K * (2 * E - K) * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * Zeta[0] ** 3 * x[0] ** 2 * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * K ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 96) * Zeta[0] * x[1] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K * (2 * E - K) * Zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * Zeta[0] + complex(0, 8) * Zeta[0] ** 4 * x[0] * x[1] + complex(0, 24) * x[0] * x[1]) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[2] ** 4 * x[1] ** 2 - 8 * Zeta[2] ** 4 * x[2] ** 2 - 12 * Zeta[2] ** 4 * x[0] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * x[0] * x[1] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 96 * x[0] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 24 * Zeta[2] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K * (2 * E - K) * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 * Zeta[2] ** 2 + 32 * x[0] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[2] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + 32 * Zeta[2] * x[1] * x[2] + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * K ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 96) * x[1] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[0] ** 2 * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * K * (2 * E - K) * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * x[0] * x[1] + complex(0, -32) * x[0] * x[2] * Zeta[2] + complex(0, 8) * x[0] * x[1] * Zeta[2] ** 4 - K * (2 * E - K) * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 / Zeta[1] * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 / Zeta[1] * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 1 / Zeta[1] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) + ((-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 1 / Zeta[1] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])),((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 1 / Zeta[1] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 / Zeta[1] * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 1 / Zeta[1] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] * (complex(0, -4) * x[1] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1 / Zeta[1] ** 2 - 4 * x[0] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] - 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) ** 2 / Zeta[1] * (complex(0, -48) * x[0] * x[1] / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * x[2] + complex(0, -8) * x[1] / Zeta[1] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * K ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 3 - 24 * x[0] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 24 * x[1] ** 2 / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 48 * x[1] * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] ** 2 + 2 * K ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] - 8 * x[0] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[1] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[2] ** 2 / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[1] ** 2 + complex(0, 2) * x[2] / Zeta[1] - x[0] / Zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[1] + K ** 2 / Zeta[1] ** 3 - 4 * x[0] ** 2 / Zeta[1] ** 3 + 4 * x[1] ** 2 / Zeta[1] ** 3 - 12 * x[1] * x[2] / Zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[1] - 4 * x[0] ** 2 / Zeta[1] - 4 * x[1] ** 2 / Zeta[1] + 8 * x[2] ** 2 / Zeta[1] + 4 * x[1] * x[2]) / Zeta[1]) * (1 - math.exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[0] - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[2] ** 4 * x[1] ** 2 - 8 * Zeta[2] ** 4 * x[2] ** 2 - 12 * Zeta[2] ** 4 * x[0] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * x[0] * x[1] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 96 * x[0] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 24 * Zeta[2] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K * (2 * E - K) * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 * Zeta[2] ** 2 + 32 * x[0] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[2] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + 32 * Zeta[2] * x[1] * x[2] + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * K ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 96) * x[1] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[0] ** 2 * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * K * (2 * E - K) * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * x[0] * x[1] + complex(0, -32) * x[0] * x[2] * Zeta[2] + complex(0, 8) * x[0] * x[1] * Zeta[2] ** 4 - K * (2 * E - K) * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[1] ** 4 * x[0] ** 3 - 4 * Zeta[1] ** 4 * x[0] * x[1] ** 2 - 24 * Zeta[1] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[1] ** 4 - 12 * x[0] * x[1] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[1] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[1] ** 3 - K ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 4) * Zeta[1] ** 4 * x[1] ** 3 + complex(0, -3) * K ** 2 * Zeta[1] ** 2 * x[1] + complex(0, -24) * Zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[1] + complex(0, 4) * Zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[1] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[1] - K * (2 * E - K) * x[0] * Zeta[1] ** 4 - K * (2 * E - K) * Zeta[1] ** 2 * x[0] - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[1] ** 2 * x[1] + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[1] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[1] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[1]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) / Zeta[1] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[1] ** 4 * x[0] ** 3 - 4 * Zeta[1] ** 4 * x[0] * x[1] ** 2 - 24 * Zeta[1] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[1] ** 4 - 12 * x[0] * x[1] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[1] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[1] ** 3 - K ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 4) * Zeta[1] ** 4 * x[1] ** 3 + complex(0, -3) * K ** 2 * Zeta[1] ** 2 * x[1] + complex(0, -24) * Zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[1] + complex(0, 4) * Zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[1] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[1] - K * (2 * E - K) * x[0] * Zeta[1] ** 4 - K * (2 * E - K) * Zeta[1] ** 2 * x[0] - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[1] ** 2 * x[1] + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[1] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[1] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[1]) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) / Zeta[1] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[1] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * Zeta[1] ** 4 - 12 * Zeta[1] ** 4 * x[0] ** 2 - 24 * Zeta[1] ** 2 * x[2] ** 2 + 32 * Zeta[1] * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + 4 * K ** 2 * Zeta[1] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 32 * Zeta[1] ** 3 * x[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 96 * Zeta[1] * x[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * Zeta[1] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * K ** 2 * Zeta[1] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 96) * Zeta[1] * x[1] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -32) * Zeta[1] ** 3 * x[0] ** 2 * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 4) * K * (2 * E - K) * Zeta[1] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -32) * x[0] * x[2] * Zeta[1] + complex(0, 8) * Zeta[1] ** 4 * x[0] * x[1] - K * (2 * E - K) * Zeta[1] ** 4 + 8 * K * (2 * E - K) * x[0] * Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 4 * K * (2 * E - K) * Zeta[1] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 16 * K ** 2 * k1 ** 2 * Zeta[1] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - K ** 2 * Zeta[1] ** 2 + 32 * Zeta[1] ** 3 * x[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[1] ** 2 + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 24) * x[0] * x[1] + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -32) * Zeta[1] ** 3 * x[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) / Zeta[1] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[1] ** 4 * x[0] ** 3 - 4 * Zeta[1] ** 4 * x[0] * x[1] ** 2 - 24 * Zeta[1] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[1] ** 4 - 12 * x[0] * x[1] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[1] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[1] ** 3 - K ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 4) * Zeta[1] ** 4 * x[1] ** 3 + complex(0, -3) * K ** 2 * Zeta[1] ** 2 * x[1] + complex(0, -24) * Zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[1] + complex(0, 4) * Zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[1] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[1] - K * (2 * E - K) * x[0] * Zeta[1] ** 4 - K * (2 * E - K) * Zeta[1] ** 2 * x[0] - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[1] ** 2 * x[1] + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[1] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[1] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[1]) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) / Zeta[1] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[0] - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[1] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] / Zeta[1] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] / Zeta[1] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 1 / Zeta[1] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[1] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 4 * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[1] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2] / Zeta[1] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[1] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * Zeta[1] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[1] - (-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[1] - x[2] / Zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[1] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + 2 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[0] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * Zeta[0] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] * Zeta[0] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 2 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[2] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * Zeta[2] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] * Zeta[2] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 2 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-4 * Zeta[1] ** 4 * x[0] ** 3 - 4 * Zeta[1] ** 4 * x[0] * x[1] ** 2 - 24 * Zeta[1] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[1] ** 4 - 12 * x[0] * x[1] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[1] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[1] ** 3 - K ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 4) * Zeta[1] ** 4 * x[1] ** 3 + complex(0, -3) * K ** 2 * Zeta[1] ** 2 * x[1] + complex(0, -24) * Zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[1] + complex(0, 4) * Zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[1] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[1] - K * (2 * E - K) * x[0] * Zeta[1] ** 4 - K * (2 * E - K) * Zeta[1] ** 2 * x[0] - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[1] ** 2 * x[1] + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[1] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[1] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[1]) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) / Zeta[1] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[1] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * Zeta[1] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 12) * x[2] * Zeta[1] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 6 * (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[1] ** 4 * x[0] ** 3 - 4 * Zeta[1] ** 4 * x[0] * x[1] ** 2 - 24 * Zeta[1] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[1] ** 4 - 12 * x[0] * x[1] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[1] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[1] ** 3 - K ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 4) * Zeta[1] ** 4 * x[1] ** 3 + complex(0, -3) * K ** 2 * Zeta[1] ** 2 * x[1] + complex(0, -24) * Zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[1] + complex(0, 4) * Zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[1] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[1] - K * (2 * E - K) * x[0] * Zeta[1] ** 4 - K * (2 * E - K) * Zeta[1] ** 2 * x[0] - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[1] ** 2 * x[1] + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[1] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[1] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[1]) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) / Zeta[1] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 6 * (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[1] ** 4 * x[0] ** 3 - 4 * Zeta[1] ** 4 * x[0] * x[1] ** 2 - 24 * Zeta[1] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[1] ** 4 - 12 * x[0] * x[1] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[1] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[1] ** 3 - K ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 4) * Zeta[1] ** 4 * x[1] ** 3 + complex(0, -3) * K ** 2 * Zeta[1] ** 2 * x[1] + complex(0, -24) * Zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[1] + complex(0, 4) * Zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[1] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[1] - K * (2 * E - K) * x[0] * Zeta[1] ** 4 - K * (2 * E - K) * Zeta[1] ** 2 * x[0] - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[1] ** 2 * x[1] + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[1] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[1] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[1]) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) / Zeta[1] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[1] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * Zeta[1] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[1] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 16 * x[0] * x[2]) - (math.exp(2 * mu[2]) - math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[1] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[1] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[1] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[1] ** 4 * x[0] ** 3 - 4 * Zeta[1] ** 4 * x[0] * x[1] ** 2 - 24 * Zeta[1] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[1] ** 4 - 12 * x[0] * x[1] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[1] + 4 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[1] ** 3 - K ** 2 * Zeta[1] ** 2 * x[0] + complex(0, 4) * Zeta[1] ** 4 * x[1] ** 3 + complex(0, -3) * K ** 2 * Zeta[1] ** 2 * x[1] + complex(0, -24) * Zeta[1] ** 2 * x[1] * x[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[1] + complex(0, 4) * Zeta[1] ** 4 * x[0] ** 2 * x[1] + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[1] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[1] - K * (2 * E - K) * x[0] * Zeta[1] ** 4 - K * (2 * E - K) * Zeta[1] ** 2 * x[0] - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[1] ** 2 * x[1] + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[1] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[1] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[1] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[1] ** 2 * x[1]) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) / Zeta[1] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[1] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[1] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[1] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[1] ** 2 + complex(0, -4) * Zeta[1] ** 3 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] * x[2] - K ** 2 * Zeta[1] ** 2 + complex(0, -12) * Zeta[1] * x[0] * x[2] + 4 * Zeta[1] ** 2 * x[0] ** 2 + 4 * Zeta[1] ** 2 * x[1] ** 2 - 8 * Zeta[1] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[1] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 24) * Zeta[1] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -4) * Zeta[1] ** 3 * x[2] + 24 * Zeta[1] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 4 * K ** 2 * Zeta[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 24) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * x[0] * x[2] + complex(0, -12) * Zeta[1] * x[2] - 16 * Zeta[1] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 8 * Zeta[1] ** 2 * x[0] - 16 * Zeta[1] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 32 * Zeta[1] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) * x[1] * x[2] + 8 * x[0]) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[0] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * Zeta[0] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[0] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) - (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * Zeta[0] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -4) * Zeta[0] ** 3 * x[2] + 24 * Zeta[0] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[0] * x[2] + complex(0, -12) * Zeta[0] * x[2] - 16 * Zeta[0] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * Zeta[0] ** 2 * x[0] - 16 * Zeta[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[1] * x[2] + 8 * x[0]) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[2] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * Zeta[2] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[2] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) - (-math.exp(2 * mu[1]) + math.exp(2 * mu[0])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * Zeta[2] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -4) * Zeta[2] ** 3 * x[2] + 24 * Zeta[2] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * x[2] * Zeta[2] + complex(0, 24) * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 16 * Zeta[2] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * Zeta[2] ** 2 * x[0] - 16 * Zeta[2] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * Zeta[2] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * x[1] * x[2] + 8 * x[0]) + (-math.exp(2 * mu[2]) + math.exp(2 * mu[1])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-8 * x[2] ** 2 * Zeta[0] ** 4 - 12 * Zeta[0] ** 4 * x[0] ** 2 - 4 * Zeta[0] ** 4 * x[1] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] ** 3 * x[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 96 * Zeta[0] * x[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 24 * Zeta[0] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K * (2 * E - K) * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] ** 3 * x[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[0] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] * x[1] * x[2] + complex(0, -32) * Zeta[0] ** 3 * x[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * K * (2 * E - K) * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * Zeta[0] ** 3 * x[0] ** 2 * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * K ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 96) * Zeta[0] * x[1] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K * (2 * E - K) * Zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * Zeta[0] + complex(0, 8) * Zeta[0] ** 4 * x[0] * x[1] + complex(0, 24) * x[0] * x[1]) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)],[2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[2] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * Zeta[2] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] * Zeta[2] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[0] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * Zeta[0] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] * Zeta[0] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-4 * x[0] ** 3 * Zeta[3] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[3] ** 4 - 8 * x[0] * x[2] ** 2 * Zeta[3] ** 4 - 24 * x[0] * x[2] ** 2 * Zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[3] - 12 * x[0] * x[1] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 4 - K ** 2 * x[0] * Zeta[3] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[3] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[3] ** 4 + complex(0, -3) * K ** 2 * x[1] * Zeta[3] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[3] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[3] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[3] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[3] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[3] + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[3] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[3] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[3] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1]) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) / Zeta[3] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[3] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * Zeta[3] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] * Zeta[3] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 1 / Zeta[3] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[3] - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 1 / Zeta[3] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[3] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -2) * x[2] / Zeta[3] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[3] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) + ((math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 1 / Zeta[3] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[3] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[3] ** 4 - 8 * x[0] * x[2] ** 2 * Zeta[3] ** 4 - 24 * x[0] * x[2] ** 2 * Zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[3] - 12 * x[0] * x[1] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 4 - K ** 2 * x[0] * Zeta[3] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[3] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[3] ** 4 + complex(0, -3) * K ** 2 * x[1] * Zeta[3] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[3] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[3] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[3] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[3] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[3] + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[3] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[3] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[3] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1]) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) / Zeta[3] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * Zeta[3] ** 4 * x[0] ** 2 - 4 * Zeta[3] ** 4 * x[1] ** 2 - 8 * x[2] ** 2 * Zeta[3] ** 4 - 24 * Zeta[3] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + 32 * Zeta[3] * x[1] * x[2] + 32 * x[0] ** 3 * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 4 * K * (2 * E - K) * x[0] * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 16 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 4 * K ** 2 * x[0] * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 32 * x[0] * x[1] ** 2 * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 96 * x[0] * x[2] ** 2 * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -32) * x[0] * x[2] * Zeta[3] + complex(0, 8) * x[0] * x[1] * Zeta[3] ** 4 - K * (2 * E - K) * Zeta[3] ** 4 + complex(0, -16) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * K ** 2 * x[1] * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 96) * x[1] * x[2] ** 2 * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -32) * x[0] ** 2 * x[1] * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * K * (2 * E - K) * x[1] * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -32) * x[1] ** 3 * Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K ** 2 * Zeta[3] ** 2 - K * (2 * E - K) * Zeta[3] ** 2 + complex(0, 24) * x[0] * x[1]) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) / Zeta[3] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[2] ** 4 * x[1] ** 2 - 8 * Zeta[2] ** 4 * x[2] ** 2 - 12 * Zeta[2] ** 4 * x[0] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * x[0] * x[1] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 96 * x[0] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 24 * Zeta[2] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K * (2 * E - K) * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 * Zeta[2] ** 2 + 32 * x[0] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[2] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + 32 * Zeta[2] * x[1] * x[2] + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * K ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 96) * x[1] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[0] ** 2 * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * K * (2 * E - K) * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * x[0] * x[1] + complex(0, -32) * x[0] * x[2] * Zeta[2] + complex(0, 8) * x[0] * x[1] * Zeta[2] ** 4 - K * (2 * E - K) * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-8 * x[2] ** 2 * Zeta[0] ** 4 - 12 * Zeta[0] ** 4 * x[0] ** 2 - 4 * Zeta[0] ** 4 * x[1] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] ** 3 * x[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 96 * Zeta[0] * x[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 24 * Zeta[0] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K * (2 * E - K) * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] ** 3 * x[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[0] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] * x[1] * x[2] + complex(0, -32) * Zeta[0] ** 3 * x[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * K * (2 * E - K) * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * Zeta[0] ** 3 * x[0] ** 2 * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * K ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 96) * Zeta[0] * x[1] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K * (2 * E - K) * Zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * Zeta[0] + complex(0, 8) * Zeta[0] ** 4 * x[0] * x[1] + complex(0, 24) * x[0] * x[1]) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[3] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[3] ** 4 - 8 * x[0] * x[2] ** 2 * Zeta[3] ** 4 - 24 * x[0] * x[2] ** 2 * Zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[3] - 12 * x[0] * x[1] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 4 - K ** 2 * x[0] * Zeta[3] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[3] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[3] ** 4 + complex(0, -3) * K ** 2 * x[1] * Zeta[3] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[3] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[3] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[3] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[3] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[3] + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[3] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[3] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[3] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) / Zeta[3] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[3] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[3] ** 4 - 8 * x[0] * x[2] ** 2 * Zeta[3] ** 4 - 24 * x[0] * x[2] ** 2 * Zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[3] - 12 * x[0] * x[1] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 4 - K ** 2 * x[0] * Zeta[3] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[3] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[3] ** 4 + complex(0, -3) * K ** 2 * x[1] * Zeta[3] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[3] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[3] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[3] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[3] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[3] + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[3] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[3] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[3] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1]) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) / Zeta[3] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - math.exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[3])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) + ((complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 / Zeta[3] * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[3] - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 / Zeta[3] * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * Zeta[0] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -4) * Zeta[0] ** 3 * x[2] + 24 * Zeta[0] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[0] * x[2] + complex(0, -12) * Zeta[0] * x[2] - 16 * Zeta[0] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * Zeta[0] ** 2 * x[0] - 16 * Zeta[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[1] * x[2] + 8 * x[0]) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[3] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[3] ** 4 - 8 * x[0] * x[2] ** 2 * Zeta[3] ** 4 - 24 * x[0] * x[2] ** 2 * Zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[3] - 12 * x[0] * x[1] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 4 - K ** 2 * x[0] * Zeta[3] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[3] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[3] ** 4 + complex(0, -3) * K ** 2 * x[1] * Zeta[3] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[3] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[3] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[3] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[3] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[3] + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[3] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[3] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[3] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1]) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) / Zeta[3] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[3] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * Zeta[3] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[3] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[3] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[3] ** 4 - 8 * x[0] * x[2] ** 2 * Zeta[3] ** 4 - 24 * x[0] * x[2] ** 2 * Zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[3] - 12 * x[0] * x[1] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 4 - K ** 2 * x[0] * Zeta[3] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[3] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[3] ** 4 + complex(0, -3) * K ** 2 * x[1] * Zeta[3] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[3] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[3] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[3] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[3] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[3] + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[3] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[3] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[3] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1]) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) / Zeta[3] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 24) * Zeta[3] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -4) * Zeta[3] ** 3 * x[2] + 24 * Zeta[3] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 4 * K ** 2 * Zeta[3] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, -12) * x[2] * Zeta[3] + complex(0, 24) * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 16 * Zeta[3] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 8 * Zeta[3] ** 2 * x[0] - 16 * Zeta[3] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 32 * Zeta[3] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * x[1] * x[2] + 8 * x[0]) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[2] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * Zeta[2] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[2] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * Zeta[2] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -4) * Zeta[2] ** 3 * x[2] + 24 * Zeta[2] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * x[2] * Zeta[2] + complex(0, 24) * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 16 * Zeta[2] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * Zeta[2] ** 2 * x[0] - 16 * Zeta[2] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * Zeta[2] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * x[1] * x[2] + 8 * x[0]) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[0] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * Zeta[0] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[0] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + 6 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[3]) - math.exp(-2 * mu[2])) / Zeta[0] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[0]) - math.exp(-2 * mu[3])) / Zeta[2] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[3] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[3] ** 4 - 8 * x[0] * x[2] ** 2 * Zeta[3] ** 4 - 24 * x[0] * x[2] ** 2 * Zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[3] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[3] - 12 * x[0] * x[1] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 2 - K * (2 * E - K) * x[0] * Zeta[3] ** 4 - K ** 2 * x[0] * Zeta[3] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[3] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[3] ** 4 + complex(0, -3) * K ** 2 * x[1] * Zeta[3] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[3] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[3] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[3] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[3] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[3] + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[3] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[3] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[3] ** 3 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[3] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[3] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1]) * (-math.exp(-2 * mu[0]) + math.exp(-2 * mu[2])) / Zeta[3] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[3] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[3] ** 2 + complex(0, -4) * Zeta[3] ** 3 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] * x[2] - K ** 2 * Zeta[3] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[3] + 4 * Zeta[3] ** 2 * x[0] ** 2 + 4 * Zeta[3] ** 2 * x[1] ** 2 - 8 * Zeta[3] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[3] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4),2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[0] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * Zeta[0] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] * Zeta[0] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 4) * x[2] * Zeta[2] ** 3 + complex(0, -24) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * Zeta[2] ** 2 * x[0] + 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] * Zeta[2] + complex(0, -24) * (x[0] + complex(0, 1) * x[1]) * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, -8) * x[1]) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 / Zeta[3] * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[0] - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * Zeta[0] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -4) * Zeta[0] ** 3 * x[2] + 24 * Zeta[0] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[0] * x[2] + complex(0, -12) * Zeta[0] * x[2] - 16 * Zeta[0] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * Zeta[0] ** 2 * x[0] - 16 * Zeta[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * x[1] * x[2] + 8 * x[0]) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 1 / Zeta[3] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[1] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[1] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + complex(0, -2) * x[2] / Zeta[1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[1] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[1] ** 2 + 2 * Zeta[1] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[1] + 2 * x[2]) + K ** 2 * (4 * Zeta[1] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[1]) / 4) - x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[0] - 2 * mu[1]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (-math.exp(-2 * mu[2]) + math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1])) + ((math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[1] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[1] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[1] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[1] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[0] - 2 * mu[1])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] * (complex(0, -4) * x[1] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1 / Zeta[2] ** 2 - 4 * x[0] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] - 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) ** 2 / Zeta[2] * (complex(0, 12) * x[2] / Zeta[2] ** 2 + complex(0, -48) * x[0] * x[1] / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * x[1] / Zeta[2] ** 3 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 6 * K ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 3 - 24 * x[0] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 24 * x[1] ** 2 / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 48 * x[1] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * K ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] - 8 * x[0] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[1] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[2] ** 2 / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 / Zeta[3] * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * Zeta[2] ** 4 * x[1] ** 2 - 8 * Zeta[2] ** 4 * x[2] ** 2 - 12 * Zeta[2] ** 4 * x[0] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * x[0] * x[1] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 96 * x[0] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 24 * Zeta[2] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K * (2 * E - K) * x[0] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 * Zeta[2] ** 2 + 32 * x[0] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[2] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + 32 * Zeta[2] * x[1] * x[2] + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[1] ** 3 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * K ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 96) * x[1] * x[2] ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -32) * x[0] ** 2 * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 4) * K * (2 * E - K) * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * x[0] * x[1] + complex(0, -32) * x[0] * x[2] * Zeta[2] + complex(0, 8) * x[0] * x[1] * Zeta[2] ** 4 - K * (2 * E - K) * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1]) + complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[0])) + ((-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[2] ** 2 + complex(0, 2) * x[2] / Zeta[2] - x[0] / Zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[2] + K ** 2 / Zeta[2] ** 3 - 4 * x[0] ** 2 / Zeta[2] ** 3 + 4 * x[1] ** 2 / Zeta[2] ** 3 - 12 * x[1] * x[2] / Zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[2] - 4 * x[0] ** 2 / Zeta[2] - 4 * x[1] ** 2 / Zeta[2] + 8 * x[2] ** 2 / Zeta[2] + 4 * x[1] * x[2]) / Zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2))) * (complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[2]) + complex(0, 1) * (K * (2 * E - K) * Zeta[1] ** 2 - K ** 2 * Zeta[1] ** 2 + 8 * Zeta[1] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[1] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[1] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[1] - K ** 2 * Zeta[1] ** 3 + 4 * Zeta[1] * x[0] ** 2 + complex(0, -12) * Zeta[1] ** 2 * x[0] * x[2] - 4 * Zeta[1] ** 3 * x[1] ** 2 - 12 * Zeta[1] ** 2 * x[1] * x[2] - K ** 2 * Zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[1] * x[1] ** 2 - 8 * Zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(-2 * mu[1])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 1 / Zeta[3] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[3] + complex(0, -2) * math.pi - 2 * mu[0])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[0] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -2) * x[2] / Zeta[0] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[0] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) + ((complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] * (complex(0, -4) * x[1] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 4) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1 / Zeta[3] ** 2 - 4 * x[0] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] - 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) ** 2 / Zeta[3] * (complex(0, -8) * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[2] + complex(0, -48) * x[0] * x[1] / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * K ** 2 * k1 ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 6 * K ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 3 - 24 * x[0] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 24 * x[1] ** 2 / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 48 * x[1] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 48) * x[0] * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 2 * K ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] - 8 * x[0] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[1] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[2] ** 2 / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[3] - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[3] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[3] ** 2 + complex(0, 2) * x[2] / Zeta[3] - x[0] / Zeta[3] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[3] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[3] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[3] + K ** 2 / Zeta[3] ** 3 - 4 * x[0] ** 2 / Zeta[3] ** 3 + 4 * x[1] ** 2 / Zeta[3] ** 3 - 12 * x[1] * x[2] / Zeta[3] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[3] - 4 * x[0] ** 2 / Zeta[3] - 4 * x[1] ** 2 / Zeta[3] + 8 * x[2] ** 2 / Zeta[3] + 4 * x[1] * x[2]) / Zeta[3]) * (1 - math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) - 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] * (complex(0, -4) * x[1] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1 / Zeta[0] ** 2 - 4 * x[0] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 1) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] - 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) ** 2 / Zeta[0] * (complex(0, -8) * x[1] / Zeta[0] ** 3 + complex(0, 48) * x[0] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[2] - 4 * K ** 2 * k1 ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * K ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 3 - 24 * x[0] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 24 * x[1] ** 2 / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 48 * x[1] * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -48) * x[0] * x[1] / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 2 * K ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] - 8 * x[0] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[1] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[2] ** 2 / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) + 4 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * Zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / Zeta[0] ** 2 + complex(0, 2) * x[2] / Zeta[0] - x[0] / Zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / Zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / Zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / Zeta[0] + K ** 2 / Zeta[0] ** 3 - 4 * x[0] ** 2 / Zeta[0] ** 3 + 4 * x[1] ** 2 / Zeta[0] ** 3 - 12 * x[1] * x[2] / Zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / Zeta[0] - 4 * x[0] ** 2 / Zeta[0] - 4 * x[1] ** 2 / Zeta[0] + 8 * x[2] ** 2 / Zeta[0] + 4 * x[1] * x[2]) / Zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) + ((complex(0, -1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[2] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] / Zeta[2] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 12) * x[2] / Zeta[2] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + 2 * (complex(0, -2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 1 / Zeta[2] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + 2 * (-1 + complex(0, 2) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + 2 * (complex(0, -1) / Zeta[2] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 4 * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * Zeta[2] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / Zeta[2] - (-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[2] - x[2] / Zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[2] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[2] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2] / Zeta[2] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[2] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) + (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[0]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[3] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] / Zeta[3] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + complex(0, 12) * x[2] / Zeta[3] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 1 / Zeta[3] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[3] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) - 4 * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * math.exp(2 * mu[3] - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (math.exp(2 * mu[0]) - math.exp(2 * mu[2])) * Zeta[3] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[3] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[3] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[3] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[3]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[3] - (-x[0] + complex(0, -1) * x[1]) / Zeta[3] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[3]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[3] - x[2] / Zeta[3] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + math.exp(2 * mu[3] - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[3] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[3] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2] / Zeta[3] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[3] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[3] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[3] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[3] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[3] ** 2 + 2 * Zeta[3] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[3] + 2 * x[2]) + K ** 2 * (4 * Zeta[3] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[3]) / 4) + 16 * x[0] * x[2]) + (complex(0, -1) * (K * (2 * E - K) * Zeta[3] ** 2 - K ** 2 * Zeta[3] ** 2 + 8 * Zeta[3] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[3] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[3] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[3] - K ** 2 * Zeta[3] ** 3 + 4 * Zeta[3] * x[0] ** 2 + complex(0, -12) * Zeta[3] ** 2 * x[0] * x[2] - 4 * Zeta[3] ** 3 * x[1] ** 2 - 12 * Zeta[3] ** 2 * x[1] * x[2] - K ** 2 * Zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[3] * x[1] ** 2 - 8 * Zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[3]) + complex(0, 1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) * math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - 2 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (-8 * x[0] + complex(0, -8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] / Zeta[0] ** 3 + complex(0, 24) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] / Zeta[0] ** 2 - 4 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * x[2] / Zeta[0] + complex(0, 24) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 8 * x[0] + complex(0, 8) * x[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, 8) * x[1]) * Zeta[2] + complex(0, -0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2]) + (complex(0, -2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 1 / Zeta[0] ** 2 - 4 * (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)) + (-1 + complex(0, 2) * x[2] / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(-x[0] + complex(0, -1) * x[1]) / Zeta[2] ** 2 - 4 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -2) * x[2] / Zeta[2] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 2 * x[0]) + (complex(0, -1) / Zeta[0] + complex(0, 2) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 4 * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4)) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (-8 * x[0] + complex(0, -8) * x[1]) / Zeta[2] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (complex(0, 1) * (K * (2 * E - K) * Zeta[0] ** 2 - K ** 2 * Zeta[0] ** 2 + 8 * Zeta[0] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[0] ** 2 * x[0] * x[1] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[0] * x[0] * x[2] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[0] - K ** 2 * Zeta[0] ** 3 + 4 * Zeta[0] * x[0] ** 2 + complex(0, -12) * Zeta[0] ** 2 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] ** 2 - 12 * Zeta[0] ** 2 * x[1] * x[2] - K ** 2 * Zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[0] * x[1] ** 2 - 8 * Zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) + complex(0, -1) * (K * (2 * E - K) * Zeta[2] ** 2 - K ** 2 * Zeta[2] ** 2 + 8 * Zeta[2] ** 2 * x[0] ** 2 + K * (2 * E - K) + complex(0, -8) * Zeta[2] ** 2 * x[1] * x[0] - K ** 2 + 8 * x[0] ** 2 + complex(0, -16) * Zeta[2] * x[2] * x[0] + complex(0, 8) * x[0] * x[1]) / (4 * Zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * Zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * Zeta[2] - K ** 2 * Zeta[2] ** 3 + 4 * Zeta[2] * x[0] ** 2 + complex(0, -12) * Zeta[2] ** 2 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] ** 2 - 12 * Zeta[2] ** 2 * x[1] * x[2] - K ** 2 * Zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * Zeta[2] * x[1] ** 2 - 8 * Zeta[2] * x[2] ** 2 + 4 * x[1] * x[2])) * exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2]) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * Zeta[0] * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, 1) * x[1]) / Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) / Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, -1) * x[1]) * x[2] / Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / Zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * Zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / Zeta[0] - (-x[0] + complex(0, -1) * x[1]) / Zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / Zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / Zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / Zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (-x[0] + complex(0, 1) * x[1]) / Zeta[0] - x[2] / Zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / Zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * math.pi - 2 * mu[2])) / K ** 2 / (-(complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 2 + (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 * (-(complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) / Zeta[0] ** 3 - 6 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) / Zeta[0] ** 4 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2] / Zeta[0] ** 2 + 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] / Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + (complex(0, -1) * (-8 * x[0] + complex(0, -8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -2) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) / Zeta[0] + 2 * (complex(0, -1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) / Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2])) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-8 * x[2] ** 2 * Zeta[0] ** 4 - 12 * Zeta[0] ** 4 * x[0] ** 2 - 4 * Zeta[0] ** 4 * x[1] ** 2 - 64 * x[0] * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 32 * Zeta[0] ** 3 * x[0] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 96 * Zeta[0] * x[0] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 64 * x[0] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - 24 * Zeta[0] ** 2 * x[2] ** 2 - 16 * K ** 2 * k1 ** 2 * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 8 * K * (2 * E - K) * x[0] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 4 * K * (2 * E - K) * Zeta[0] * x[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] ** 3 * x[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K ** 2 + 12 * x[0] ** 2 - 12 * x[1] ** 2 - K * (2 * E - K) * Zeta[0] ** 2 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + 32 * Zeta[0] * x[1] * x[2] + complex(0, -32) * Zeta[0] ** 3 * x[1] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 32) * x[0] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * x[1] ** 2 * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -96) * x[2] ** 3 * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -64) * x[1] * x[2] ** 2 * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 4) * K * (2 * E - K) * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K * (2 * E - K) * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -8) * K * (2 * E - K) * x[1] * Zeta[0] ** 3 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 24) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -16) * K ** 2 * k1 ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -12) * K ** 2 * x[2] * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, -32) * Zeta[0] ** 3 * x[0] ** 2 * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 12) * K ** 2 * Zeta[0] * x[1] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + complex(0, 96) * Zeta[0] * x[1] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - K * (2 * E - K) * Zeta[0] ** 4 + complex(0, -32) * x[0] * x[2] * Zeta[0] + complex(0, 8) * Zeta[0] ** 4 * x[0] * x[1] + complex(0, 24) * x[0] * x[1]) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (-8 * x[0] + complex(0, 8) * x[1]) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[2] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * Zeta[2] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[2] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 16 * x[0] * x[2]) - (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (-8 * K ** 2 * k1 ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 24) * Zeta[2] ** 2 * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -4) * Zeta[2] ** 3 * x[2] + 24 * Zeta[2] ** 2 * x[1] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 4 * K ** 2 * Zeta[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, -12) * x[2] * Zeta[2] + complex(0, 24) * x[0] * x[2] * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) - 16 * Zeta[2] * x[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 8 * Zeta[2] ** 2 * x[0] - 16 * Zeta[2] * x[1] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + 32 * Zeta[2] * x[2] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) + complex(0, 8) * x[1] - 24 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4) * x[1] * x[2] + 8 * x[0]) - (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 3 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, -16) * x[2] ** 2) * Zeta[0] ** 3 - 6 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * Zeta[0] ** 2 * x[0] * x[2] - 8 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) - (complex(0, 1) * (-8 * x[0] + complex(0, 8) * x[1]) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 2) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * k1 ** 2 + complex(0, 16) * x[2] ** 2) * Zeta[0] + 2 * (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 16 * x[0] * x[2]) + 6 * (-math.exp(2 * mu[3]) + math.exp(2 * mu[2])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[0] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[0] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[0] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-12 * x[0] * x[1] ** 2 - 4 * Zeta[0] ** 4 * x[0] ** 3 + 4 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * Zeta[0] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[0] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * Zeta[0] ** 2 * x[1] + complex(0, -1) * K * (2 * E - K) * Zeta[0] ** 2 * x[1] + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[0] ** 3 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[0] ** 4 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[0] + complex(0, -3) * K ** 2 * Zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * x[2] * Zeta[0] ** 3 + complex(0, -24) * Zeta[0] ** 2 * x[1] * x[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[0] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[0] + complex(0, 4) * Zeta[0] ** 4 * x[0] ** 2 * x[1] - K * (2 * E - K) * x[0] * Zeta[0] ** 4 - K * (2 * E - K) * Zeta[0] ** 2 * x[0] + complex(0, 16) * x[2] ** 3 * Zeta[0] ** 3 - K ** 2 * Zeta[0] ** 2 * x[0] + complex(0, 4) * Zeta[0] ** 4 * x[1] ** 3 - 24 * Zeta[0] ** 2 * x[0] * x[2] ** 2 - 4 * Zeta[0] ** 4 * x[0] * x[1] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[0] ** 4) * (math.exp(-2 * mu[2]) - math.exp(-2 * mu[1])) / Zeta[0] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[0] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[0] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[0] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[0] ** 2 + complex(0, -4) * Zeta[0] ** 3 * x[0] * x[2] - 4 * Zeta[0] ** 3 * x[1] * x[2] - K ** 2 * Zeta[0] ** 2 + complex(0, -12) * Zeta[0] * x[0] * x[2] + 4 * Zeta[0] ** 2 * x[0] ** 2 + 4 * Zeta[0] ** 2 * x[1] ** 2 - 8 * Zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[0] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[0] ** 2 + 2 * Zeta[0] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[0] + 2 * x[2]) + K ** 2 * (4 * Zeta[0] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[0]) / 4) + 6 * (-math.exp(2 * mu[0]) + math.exp(2 * mu[3])) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * (complex(0, 4) * x[2] * (x[0] + complex(0, -1) * x[1]) * Zeta[2] ** 3 - (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * Zeta[2] ** 2 + complex(0, 12) * (x[0] + complex(0, 1) * x[1]) * x[2] * Zeta[2] + K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) ** 2 * (-4 * x[0] ** 3 * Zeta[2] ** 4 - 12 * x[0] * x[1] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] * Zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * Zeta[2] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -1) * K * (2 * E - K) * x[1] * Zeta[2] ** 2 + complex(0, 1) * K * (2 * E - K) * x[1] * Zeta[2] ** 4 + complex(0, 2) * K * (2 * E - K) * x[2] * Zeta[2] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 + 4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * Zeta[2] ** 2 + complex(0, -24) * x[1] * x[2] ** 2 * Zeta[2] ** 2 + complex(0, 8) * x[1] * x[2] ** 2 * Zeta[2] ** 4 + complex(0, -16) * x[0] ** 2 * x[2] * Zeta[2] + complex(0, 4) * x[0] ** 2 * x[1] * Zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * Zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * Zeta[2] - K * (2 * E - K) * x[0] * Zeta[2] ** 4 - K * (2 * E - K) * x[0] * Zeta[2] ** 2 + complex(0, 16) * x[2] ** 3 * Zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * Zeta[2] ** 4 - K ** 2 * x[0] * Zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 24 * x[0] * x[2] ** 2 * Zeta[2] ** 2 - 8 * x[0] * x[2] ** 2 * Zeta[2] ** 4 - 4 * x[0] * x[1] ** 2 * Zeta[2] ** 4) * (math.exp(-2 * mu[1]) - math.exp(-2 * mu[0])) / Zeta[2] ** 4 / K ** 2 / ((complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, -1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, 1) * x[1]) + complex(0, -16) * (x[0] + complex(0, -1) * x[1]) * x[2] ** 2) * Zeta[2] ** 3 + 2 * (2 * K ** 2 * k1 ** 2 - K ** 2 + 4 * (x[0] + complex(0, 1) * x[1]) * (x[0] + complex(0, -1) * x[1]) - 8 * x[2] ** 2) * x[2] * Zeta[2] ** 2 - (complex(0, 1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * ((x[0] + complex(0, 1) * x[1]) * (2 * k1 ** 2 - 1) + x[0] + complex(0, -1) * x[1]) + complex(0, 16) * (x[0] + complex(0, 1) * x[1]) * x[2] ** 2) * Zeta[2] - x[2] * (2 * K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2)) / (2 * K ** 2 * k1 ** 2 * Zeta[2] ** 2 + complex(0, -4) * Zeta[2] ** 3 * x[0] * x[2] - 4 * Zeta[2] ** 3 * x[1] * x[2] - K ** 2 * Zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * Zeta[2] + 4 * Zeta[2] ** 2 * x[0] ** 2 + 4 * Zeta[2] ** 2 * x[1] ** 2 - 8 * Zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * Zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (complex(0, 1) * Zeta[2] ** 2 + complex(0, 1)) / (2 * ((x[1] + complex(0, 1) * x[0]) * Zeta[2] ** 2 + 2 * Zeta[2] * x[2] - x[1] + complex(0, 1) * x[0]) * (2 * (x[1] + complex(0, 1) * x[0]) * Zeta[2] + 2 * x[2]) + K ** 2 * (4 * Zeta[2] ** 3 + 4 * (-2 * k1 ** 2 + 1) * Zeta[2]) / 4)]])
