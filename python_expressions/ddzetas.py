from numpy import complex, complex64, mat, dot, trace, pi, sqrt, mat
from mpmath import ellipk, ellipe
from cmath import exp


def ddzetas(zeta, x, k):

    K = complex64(ellipk(k**2))

    E = complex64(ellipe(k**2))

    cm= (2*E-K)/K

    k1 = sqrt(1-k**2)

    xp = x[0]+complex(0,1)*x[1]
    xm = x[0]-complex(0,1)*x[1]
    S =  sqrt(K**2-4*xp*xm)
    SP = sqrt(K**2-4*xp**2)
    SM = sqrt(K**2-4*xm**2)
    SPM = sqrt(-k1**2*(K**2*k**2-4*xm*xp)+(xm-xp)**2)
    R = 2*K**2*k1**2-S**2-8*x[2]**2
    RM = complex(0,1)*SM**2*(xm*(2*k1**2-1)+xp)-(16*complex(0,1))*xm*x[2]**2
    RP = complex(0,1)*SM**2*(xp*(2*k1**2-1)+xm)+(16*complex(0,1))*xp*x[2]**2
    RMBAR=-complex(0,1)*SP**2*( xp*(2*k1**2-1)+xm ) +16*complex(0,1)*xp*x[2]**2
    RPBAR=-complex(0,1)*SP**2*( xm*(2*k1**2-1)+xp ) -16*complex(0,1)*xm*x[2]**2
    r=sqrt(x[0]**2+x[1]**2+x[2]**2)

    DDZ = [None]*4
    DDZ[0] = [None]*3
    DDZ[1] = [None]*3
    DDZ[2] = [None]*3
    DDZ[3] = [None]*3

    DDZ[0][0]  = 2 * (48 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[1] * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[1] * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[0] * x[1] * x[2] + 8 * x[0] ** 4 - 8 * x[1] ** 4 + K ** 4 * zeta[0] ** 8 + K ** 4 * zeta[0] ** 2 + 96 * zeta[0] ** 2 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[0] ** 8 * x[0] ** 2 + 144 * zeta[0] ** 8 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 2 * zeta[0] ** 6 * x[0] ** 2 - 48 * zeta[0] ** 6 * x[0] ** 2 * x[1] ** 2 + 480 * zeta[0] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[0] ** 4 * x[0] ** 2 * x[1] ** 2 + 576 * zeta[0] ** 4 * x[0] ** 2 * x[2] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] ** 2 - 4 * K ** 2 * zeta[0] ** 2 * x[0] ** 2 + 48 * zeta[0] ** 2 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[0] ** 4 - 4 * K ** 4 * k1 ** 2 * zeta[0] ** 6 - 2 * K ** 2 * zeta[0] ** 8 * x[1] ** 2 - 176 * zeta[0] ** 7 * x[1] ** 3 * x[2] + 4 * K ** 4 * k1 ** 4 * zeta[0] ** 2 - 8 * K ** 4 * k1 ** 2 * zeta[0] ** 4 + 4 * K ** 2 * zeta[0] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[0] ** 6 * x[2] ** 2 - 480 * zeta[0] ** 6 * x[1] ** 2 * x[2] ** 2 + 432 * zeta[0] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[0] ** 5 * x[1] * x[2] ** 3 - 4 * K ** 4 * k1 ** 2 * zeta[0] ** 2 + 768 * zeta[0] ** 4 * x[1] ** 2 * x[2] ** 2 - 336 * zeta[0] ** 3 * x[1] ** 3 * x[2] + 448 * zeta[0] ** 3 * x[1] * x[2] ** 3 - 4 * K ** 2 * k1 ** 2 * x[1] ** 2 - 4 * K ** 2 * zeta[0] ** 2 * x[1] ** 2 + 8 * K ** 2 * zeta[0] ** 2 * x[2] ** 2 - 288 * zeta[0] ** 2 * x[1] ** 2 * x[2] ** 2 + 80 * zeta[0] * x[1] ** 3 * x[2] - 12 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] ** 2 + 528 * zeta[0] ** 7 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] ** 2 + 240 * zeta[0] ** 5 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] ** 2 - 2 * K ** 2 * x[0] ** 2 - 24 * zeta[0] ** 8 * x[0] ** 4 - 64 * zeta[0] ** 6 * x[0] ** 4 - 48 * zeta[0] ** 4 * x[0] ** 4 - 24 * zeta[0] ** 8 * x[1] ** 4 + 3 * K ** 4 * zeta[0] ** 6 + 80 * zeta[0] ** 6 * x[1] ** 4 + 3 * K ** 4 * zeta[0] ** 4 - 96 * zeta[0] ** 4 * x[1] ** 4 - 256 * zeta[0] ** 4 * x[2] ** 4 + 48 * zeta[0] ** 2 * x[1] ** 4 + 2 * K ** 2 * x[1] ** 2 + complex(0, -96) * zeta[0] ** 8 * x[0] * x[1] ** 3 + complex(0, 176) * zeta[0] ** 6 * x[0] * x[1] ** 3 + complex(0, -48) * zeta[0] ** 2 * x[0] ** 3 * x[1] + complex(0, -16) * zeta[0] * x[0] ** 3 * x[2] + complex(0, 96) * zeta[0] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[0] ** 7 * x[0] ** 3 * x[2] + complex(0, 112) * zeta[0] ** 6 * x[0] ** 3 * x[1] + complex(0, 336) * zeta[0] ** 5 * x[0] ** 3 * x[2] + complex(0, -48) * zeta[0] ** 4 * x[0] ** 3 * x[1] + complex(0, 144) * zeta[0] ** 3 * x[0] ** 3 * x[2] + complex(0, -576) * zeta[0] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[0] ** 4 * x[0] * x[1] ** 3 + complex(0, -320) * zeta[0] ** 3 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[0] ** 2 * x[0] * x[1] ** 3 + complex(0, -4) * K ** 2 * x[0] * x[1] + complex(0, 16) * x[0] ** 3 * x[1] + complex(0, 16) * x[0] * x[1] ** 3 - 336 * zeta[0] ** 3 * x[0] ** 2 * x[1] * x[2] - 48 * zeta[0] * x[0] ** 2 * x[1] * x[2] + 8 * K ** 2 * zeta[0] ** 3 * x[1] * x[2] - 8 * K ** 2 * zeta[0] * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[0] ** 7 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] ** 2 + 48 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[2] ** 2 + 8 * K ** 2 * zeta[0] ** 5 * x[1] * x[2] + 20 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] ** 2 - 16 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[1] + complex(0, -16) * K ** 2 * k1 ** 2 * zeta[0] * x[0] * x[2] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] * x[1] + complex(0, -4) * K ** 2 * zeta[0] ** 8 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[0] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[0] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[0] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, -8) * K ** 2 * zeta[0] ** 5 * x[0] * x[2] + complex(0, 528) * zeta[0] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, 8) * K ** 2 * zeta[0] ** 4 * x[0] * x[1] + complex(0, 192) * zeta[0] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[0] ** 3 * x[0] * x[2] + complex(0, 144) * zeta[0] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, 8) * K ** 2 * k1 ** 2 * x[0] * x[1] + complex(0, 384) * zeta[0] ** 2 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[0] * x[0] * x[2] + complex(0, -144) * zeta[0] * x[0] * x[1] ** 2 * x[2]) / (4 * zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[0] - K ** 2 * zeta[0] ** 3 + 4 * x[0] ** 2 * zeta[0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] ** 2 - 12 * zeta[0] ** 2 * x[1] * x[2] - K ** 2 * zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[0] - 8 * zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (-zeta[0] ** 2 - 1)

    DDZ[1][0]  = 2 * (48 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[1] * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[1] * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[1] * x[1] * x[2] + 8 * x[0] ** 4 - 8 * x[1] ** 4 + K ** 4 * zeta[1] ** 8 + K ** 4 * zeta[1] ** 2 + 480 * zeta[1] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[1] ** 4 * x[0] ** 2 * x[1] ** 2 + 576 * zeta[1] ** 4 * x[0] ** 2 * x[2] ** 2 - 4 * K ** 2 * zeta[1] ** 2 * x[0] ** 2 + 48 * zeta[1] ** 2 * x[0] ** 2 * x[1] ** 2 + 96 * zeta[1] ** 2 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[1] ** 8 * x[0] ** 2 + 144 * zeta[1] ** 8 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 2 * zeta[1] ** 6 * x[0] ** 2 - 48 * zeta[1] ** 6 * x[0] ** 2 * x[1] ** 2 - 176 * zeta[1] ** 7 * x[1] ** 3 * x[2] + 4 * K ** 4 * k1 ** 4 * zeta[1] ** 2 - 8 * K ** 4 * k1 ** 2 * zeta[1] ** 4 + 4 * K ** 2 * zeta[1] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[1] ** 6 * x[2] ** 2 - 480 * zeta[1] ** 6 * x[1] ** 2 * x[2] ** 2 + 432 * zeta[1] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[1] ** 5 * x[1] * x[2] ** 3 - 4 * K ** 4 * k1 ** 2 * zeta[1] ** 2 + 768 * zeta[1] ** 4 * x[1] ** 2 * x[2] ** 2 - 336 * zeta[1] ** 3 * x[1] ** 3 * x[2] + 4 * K ** 2 * k1 ** 2 * x[0] ** 2 - 4 * K ** 2 * k1 ** 2 * x[1] ** 2 - 2 * K ** 2 * x[0] ** 2 + 2 * K ** 2 * x[1] ** 2 - 24 * zeta[1] ** 8 * x[1] ** 4 + 3 * K ** 4 * zeta[1] ** 6 + 80 * zeta[1] ** 6 * x[1] ** 4 + 3 * K ** 4 * zeta[1] ** 4 - 96 * zeta[1] ** 4 * x[1] ** 4 - 256 * zeta[1] ** 4 * x[2] ** 4 + 48 * zeta[1] ** 2 * x[1] ** 4 - 64 * zeta[1] ** 6 * x[0] ** 4 - 48 * zeta[1] ** 4 * x[0] ** 4 - 24 * zeta[1] ** 8 * x[0] ** 4 + complex(0, -4) * K ** 2 * x[0] * x[1] + complex(0, 16) * x[0] ** 3 * x[1] + complex(0, 16) * x[0] * x[1] ** 3 + complex(0, -48) * zeta[1] ** 4 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[1] ** 6 * x[0] * x[1] ** 3 + complex(0, 144) * zeta[1] ** 3 * x[0] ** 3 * x[2] + complex(0, -576) * zeta[1] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[1] ** 2 * x[0] ** 3 * x[1] + complex(0, -48) * zeta[1] ** 4 * x[0] * x[1] ** 3 + complex(0, -16) * zeta[1] * x[0] ** 3 * x[2] + complex(0, -320) * zeta[1] ** 3 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[1] ** 2 * x[0] * x[1] ** 3 + complex(0, 96) * zeta[1] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[1] ** 7 * x[0] ** 3 * x[2] + complex(0, 112) * zeta[1] ** 6 * x[0] ** 3 * x[1] + complex(0, -96) * zeta[1] ** 8 * x[0] * x[1] ** 3 + complex(0, 336) * zeta[1] ** 5 * x[0] ** 3 * x[2] - 12 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] ** 2 + 528 * zeta[1] ** 7 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] ** 2 + 240 * zeta[1] ** 5 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] ** 2 - 336 * zeta[1] ** 3 * x[0] ** 2 * x[1] * x[2] - 48 * zeta[1] * x[0] ** 2 * x[1] * x[2] + 20 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] ** 2 - 16 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[2] ** 2 + 8 * K ** 2 * zeta[1] ** 3 * x[1] * x[2] - 8 * K ** 2 * zeta[1] * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[1] ** 7 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] ** 2 + 48 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[2] ** 2 + 8 * K ** 2 * zeta[1] ** 5 * x[1] * x[2] + complex(0, -4) * K ** 2 * zeta[1] ** 8 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[1] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[1] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[1] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, -8) * K ** 2 * zeta[1] ** 5 * x[0] * x[2] + complex(0, 528) * zeta[1] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, 8) * K ** 2 * zeta[1] ** 4 * x[0] * x[1] + complex(0, 192) * zeta[1] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[1] ** 3 * x[0] * x[2] + complex(0, 144) * zeta[1] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, 384) * zeta[1] ** 2 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[1] * x[0] * x[2] + complex(0, -144) * zeta[1] * x[0] * x[1] ** 2 * x[2] + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[1] + complex(0, -16) * K ** 2 * k1 ** 2 * zeta[1] * x[0] * x[2] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] * x[1] + 448 * zeta[1] ** 3 * x[1] * x[2] ** 3 - 4 * K ** 2 * zeta[1] ** 2 * x[1] ** 2 + 8 * K ** 2 * zeta[1] ** 2 * x[2] ** 2 - 288 * zeta[1] ** 2 * x[1] ** 2 * x[2] ** 2 + 80 * zeta[1] * x[1] ** 3 * x[2] + 4 * K ** 4 * k1 ** 4 * zeta[1] ** 4 - 4 * K ** 4 * k1 ** 2 * zeta[1] ** 6 - 2 * K ** 2 * zeta[1] ** 8 * x[1] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * x[0] * x[1]) / (4 * zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[1] - K ** 2 * zeta[1] ** 3 + 4 * x[0] ** 2 * zeta[1] + complex(0, -12) * zeta[1] ** 2 * x[0] * x[2] - 4 * zeta[1] ** 3 * x[1] ** 2 - 12 * zeta[1] ** 2 * x[1] * x[2] - K ** 2 * zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[1] - 8 * zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (-zeta[1] ** 2 - 1)

    DDZ[2][0] = 2 * (-64 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[1] * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[2] * x[1] * x[2] + 48 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[1] * x[2] + 8 * x[0] ** 4 - 8 * x[1] ** 4 + K ** 4 * zeta[2] ** 2 + K ** 4 * zeta[2] ** 8 + 4 * K ** 2 * k1 ** 2 * x[0] ** 2 - 4 * K ** 2 * k1 ** 2 * x[1] ** 2 - 2 * K ** 2 * x[0] ** 2 + 2 * K ** 2 * x[1] ** 2 - 24 * zeta[2] ** 8 * x[1] ** 4 + 3 * K ** 4 * zeta[2] ** 6 + 80 * zeta[2] ** 6 * x[1] ** 4 + 3 * K ** 4 * zeta[2] ** 4 - 96 * zeta[2] ** 4 * x[1] ** 4 - 256 * zeta[2] ** 4 * x[2] ** 4 + 48 * zeta[2] ** 2 * x[1] ** 4 - 24 * zeta[2] ** 8 * x[0] ** 4 - 64 * zeta[2] ** 6 * x[0] ** 4 - 48 * zeta[2] ** 4 * x[0] ** 4 + complex(0, 112) * zeta[2] ** 6 * x[0] ** 3 * x[1] + complex(0, -96) * zeta[2] ** 8 * x[0] * x[1] ** 3 + complex(0, 336) * zeta[2] ** 5 * x[0] ** 3 * x[2] + complex(0, -48) * zeta[2] ** 4 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[2] ** 6 * x[0] * x[1] ** 3 + complex(0, 144) * zeta[2] ** 3 * x[0] ** 3 * x[2] + complex(0, -576) * zeta[2] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[2] ** 2 * x[0] ** 3 * x[1] + complex(0, -48) * zeta[2] ** 4 * x[0] * x[1] ** 3 + complex(0, -16) * zeta[2] * x[0] ** 3 * x[2] + complex(0, -320) * zeta[2] ** 3 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[2] ** 2 * x[0] * x[1] ** 3 + complex(0, 96) * zeta[2] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[2] ** 7 * x[0] ** 3 * x[2] + complex(0, -4) * K ** 2 * x[0] * x[1] + complex(0, 16) * x[0] ** 3 * x[1] + complex(0, 16) * x[0] * x[1] ** 3 - 48 * zeta[2] * x[0] ** 2 * x[1] * x[2] + complex(0, -8) * K ** 2 * zeta[2] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[2] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[2] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, -8) * K ** 2 * zeta[2] ** 5 * x[0] * x[2] + complex(0, 528) * zeta[2] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, 8) * K ** 2 * zeta[2] ** 4 * x[0] * x[1] + complex(0, 192) * zeta[2] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[2] ** 3 * x[0] * x[2] + complex(0, 144) * zeta[2] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, 384) * zeta[2] ** 2 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[2] * x[0] * x[2] + complex(0, -144) * zeta[2] * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[2] ** 8 * x[0] * x[1] + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] * x[1] + complex(0, -16) * K ** 2 * k1 ** 2 * zeta[2] * x[0] * x[2] - 12 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] ** 2 + 528 * zeta[2] ** 7 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] ** 2 + 240 * zeta[2] ** 5 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] ** 2 - 336 * zeta[2] ** 3 * x[0] ** 2 * x[1] * x[2] + 48 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[2] ** 2 + 8 * K ** 2 * zeta[2] ** 5 * x[1] * x[2] + 20 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] ** 2 - 16 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[2] ** 2 + 8 * K ** 2 * zeta[2] ** 3 * x[1] * x[2] - 8 * K ** 2 * zeta[2] * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[2] ** 7 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] ** 2 - 4 * K ** 4 * k1 ** 2 * zeta[2] ** 6 - 2 * K ** 2 * zeta[2] ** 8 * x[1] ** 2 - 176 * zeta[2] ** 7 * x[1] ** 3 * x[2] + 4 * K ** 4 * k1 ** 4 * zeta[2] ** 2 - 8 * K ** 4 * k1 ** 2 * zeta[2] ** 4 + 4 * K ** 2 * zeta[2] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[2] ** 6 * x[2] ** 2 - 480 * zeta[2] ** 6 * x[1] ** 2 * x[2] ** 2 + 432 * zeta[2] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[2] ** 5 * x[1] * x[2] ** 3 - 4 * K ** 4 * k1 ** 2 * zeta[2] ** 2 + 768 * zeta[2] ** 4 * x[1] ** 2 * x[2] ** 2 - 336 * zeta[2] ** 3 * x[1] ** 3 * x[2] + 448 * zeta[2] ** 3 * x[1] * x[2] ** 3 - 4 * K ** 2 * zeta[2] ** 2 * x[1] ** 2 + 8 * K ** 2 * zeta[2] ** 2 * x[2] ** 2 - 288 * zeta[2] ** 2 * x[1] ** 2 * x[2] ** 2 + 80 * zeta[2] * x[1] ** 3 * x[2] + 96 * zeta[2] ** 2 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[2] ** 8 * x[0] ** 2 + 144 * zeta[2] ** 8 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 2 * zeta[2] ** 6 * x[0] ** 2 - 48 * zeta[2] ** 6 * x[0] ** 2 * x[1] ** 2 + 480 * zeta[2] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[2] ** 4 * x[0] ** 2 * x[1] ** 2 + 576 * zeta[2] ** 4 * x[0] ** 2 * x[2] ** 2 - 4 * K ** 2 * zeta[2] ** 2 * x[0] ** 2 + 48 * zeta[2] ** 2 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[2] ** 4 + complex(0, 8) * K ** 2 * k1 ** 2 * x[0] * x[1]) / (4 * zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[2] - K ** 2 * zeta[2] ** 3 + 4 * x[0] ** 2 * zeta[2] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] ** 2 - 12 * zeta[2] ** 2 * x[1] * x[2] - K ** 2 * zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[2] - 8 * zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (-zeta[2] ** 2 - 1)

    DDZ[3][0] = 2 * (48 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[1] * x[2] - 64 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[1] * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[3] * x[1] * x[2] + 8 * x[0] ** 4 - 8 * x[1] ** 4 + K ** 4 * zeta[3] ** 8 + K ** 4 * zeta[3] ** 2 + 4 * K ** 2 * k1 ** 2 * x[0] ** 2 - 4 * K ** 2 * k1 ** 2 * x[1] ** 2 + 2 * K ** 2 * zeta[3] ** 8 * x[0] ** 2 + 144 * zeta[3] ** 8 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 2 * zeta[3] ** 6 * x[0] ** 2 - 48 * zeta[3] ** 6 * x[0] ** 2 * x[1] ** 2 + 480 * zeta[3] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[3] ** 4 * x[0] ** 2 * x[1] ** 2 + 576 * zeta[3] ** 4 * x[0] ** 2 * x[2] ** 2 - 4 * K ** 2 * zeta[3] ** 2 * x[0] ** 2 + 48 * zeta[3] ** 2 * x[0] ** 2 * x[1] ** 2 + 96 * zeta[3] ** 2 * x[0] ** 2 * x[2] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[3] ** 4 - 4 * K ** 4 * k1 ** 2 * zeta[3] ** 6 - 2 * K ** 2 * zeta[3] ** 8 * x[1] ** 2 - 176 * zeta[3] ** 7 * x[1] ** 3 * x[2] + 4 * K ** 4 * k1 ** 4 * zeta[3] ** 2 - 8 * K ** 4 * k1 ** 2 * zeta[3] ** 4 + 4 * K ** 2 * zeta[3] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[3] ** 6 * x[2] ** 2 - 480 * zeta[3] ** 6 * x[1] ** 2 * x[2] ** 2 + 432 * zeta[3] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[3] ** 5 * x[1] * x[2] ** 3 - 4 * K ** 4 * k1 ** 2 * zeta[3] ** 2 + 768 * zeta[3] ** 4 * x[1] ** 2 * x[2] ** 2 - 336 * zeta[3] ** 3 * x[1] ** 3 * x[2] + 448 * zeta[3] ** 3 * x[1] * x[2] ** 3 - 4 * K ** 2 * zeta[3] ** 2 * x[1] ** 2 + 8 * K ** 2 * zeta[3] ** 2 * x[2] ** 2 - 288 * zeta[3] ** 2 * x[1] ** 2 * x[2] ** 2 + 80 * zeta[3] * x[1] ** 3 * x[2] - 64 * zeta[3] ** 6 * x[0] ** 4 - 48 * zeta[3] ** 4 * x[0] ** 4 - 24 * zeta[3] ** 8 * x[0] ** 4 - 24 * zeta[3] ** 8 * x[1] ** 4 + 3 * K ** 4 * zeta[3] ** 6 + 80 * zeta[3] ** 6 * x[1] ** 4 + 3 * K ** 4 * zeta[3] ** 4 - 96 * zeta[3] ** 4 * x[1] ** 4 - 256 * zeta[3] ** 4 * x[2] ** 4 + 48 * zeta[3] ** 2 * x[1] ** 4 - 2 * K ** 2 * x[0] ** 2 + 2 * K ** 2 * x[1] ** 2 + complex(0, -16) * zeta[3] * x[0] ** 3 * x[2] + complex(0, 96) * zeta[3] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[3] ** 7 * x[0] ** 3 * x[2] + complex(0, -48) * zeta[3] ** 4 * x[0] ** 3 * x[1] + complex(0, 112) * zeta[3] ** 6 * x[0] ** 3 * x[1] + complex(0, 336) * zeta[3] ** 5 * x[0] ** 3 * x[2] + complex(0, 144) * zeta[3] ** 3 * x[0] ** 3 * x[2] + complex(0, -48) * zeta[3] ** 2 * x[0] ** 3 * x[1] + complex(0, -96) * zeta[3] ** 8 * x[0] * x[1] ** 3 + complex(0, 176) * zeta[3] ** 6 * x[0] * x[1] ** 3 + complex(0, -576) * zeta[3] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[3] ** 4 * x[0] * x[1] ** 3 + complex(0, -320) * zeta[3] ** 3 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[3] ** 2 * x[0] * x[1] ** 3 + complex(0, -4) * K ** 2 * x[0] * x[1] + complex(0, 16) * x[0] ** 3 * x[1] + complex(0, 16) * x[0] * x[1] ** 3 + complex(0, -16) * K ** 2 * k1 ** 2 * zeta[3] * x[0] * x[2] + complex(0, -4) * K ** 2 * zeta[3] ** 8 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[3] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[3] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[3] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, -8) * K ** 2 * zeta[3] ** 5 * x[0] * x[2] + complex(0, 528) * zeta[3] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, 8) * K ** 2 * zeta[3] ** 4 * x[0] * x[1] + complex(0, 192) * zeta[3] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[3] ** 3 * x[0] * x[2] + complex(0, 144) * zeta[3] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, 384) * zeta[3] ** 2 * x[0] * x[1] * x[2] ** 2 + complex(0, 8) * K ** 2 * zeta[3] * x[0] * x[2] + complex(0, -144) * zeta[3] * x[0] * x[1] ** 2 * x[2] + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[1] + complex(0, 32) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] * x[1] - 12 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] ** 2 + 528 * zeta[3] ** 7 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] ** 2 + 240 * zeta[3] ** 5 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] ** 2 - 336 * zeta[3] ** 3 * x[0] ** 2 * x[1] * x[2] - 48 * zeta[3] * x[0] ** 2 * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[3] ** 7 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] ** 2 + 48 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[2] ** 2 + 8 * K ** 2 * zeta[3] ** 5 * x[1] * x[2] + 20 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] ** 2 - 16 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[2] ** 2 + 8 * K ** 2 * zeta[3] ** 3 * x[1] * x[2] - 8 * K ** 2 * zeta[3] * x[1] * x[2] + complex(0, 8) * K ** 2 * k1 ** 2 * x[0] * x[1]) / (4 * zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[3] - K ** 2 * zeta[3] ** 3 + 4 * x[0] ** 2 * zeta[3] + complex(0, -12) * zeta[3] ** 2 * x[0] * x[2] - 4 * zeta[3] ** 3 * x[1] ** 2 - 12 * zeta[3] ** 2 * x[1] * x[2] - K ** 2 * zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[3] - 8 * zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (-zeta[3] ** 2 - 1)

    DDZ[0][1] = 2 * (48 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[1] * x[2] - 32 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[1] * x[2] - 16 * K ** 2 * k1 ** 2 * zeta[0] * x[1] * x[2] - 8 * x[0] ** 4 + 8 * x[1] ** 4 + K ** 4 * zeta[0] ** 8 - K ** 4 * zeta[0] ** 2 + 288 * zeta[0] ** 2 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[0] ** 8 * x[0] ** 2 + 144 * zeta[0] ** 8 * x[0] ** 2 * x[1] ** 2 + 16 * K ** 2 * zeta[0] ** 6 * x[0] ** 2 + 48 * zeta[0] ** 6 * x[0] ** 2 * x[1] ** 2 + 480 * zeta[0] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[0] ** 4 * x[0] ** 2 * x[1] ** 2 + 768 * zeta[0] ** 4 * x[0] ** 2 * x[2] ** 2 - 4 * K ** 2 * k1 ** 2 * x[0] ** 2 + 16 * K ** 2 * zeta[0] ** 2 * x[0] ** 2 - 48 * zeta[0] ** 2 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[0] ** 4 - 4 * K ** 4 * k1 ** 2 * zeta[0] ** 6 - 2 * K ** 2 * zeta[0] ** 8 * x[1] ** 2 - 176 * zeta[0] ** 7 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 4 * zeta[0] ** 2 - 8 * K ** 2 * zeta[0] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[0] ** 6 * x[2] ** 2 - 480 * zeta[0] ** 6 * x[1] ** 2 * x[2] ** 2 + 336 * zeta[0] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[0] ** 5 * x[1] * x[2] ** 3 + 4 * K ** 4 * k1 ** 2 * zeta[0] ** 2 + 576 * zeta[0] ** 4 * x[1] ** 2 * x[2] ** 2 - 144 * zeta[0] ** 3 * x[1] ** 3 * x[2] + 320 * zeta[0] ** 3 * x[1] * x[2] ** 3 + 4 * K ** 2 * k1 ** 2 * x[1] ** 2 - 8 * K ** 2 * zeta[0] ** 2 * x[1] ** 2 - 8 * K ** 2 * zeta[0] ** 2 * x[2] ** 2 - 96 * zeta[0] ** 2 * x[1] ** 2 * x[2] ** 2 - 16 * zeta[0] * x[1] ** 3 * x[2] + complex(0, 4) * K ** 2 * x[0] * x[1] + complex(0, 48) * zeta[0] ** 4 * x[0] * x[1] ** 3 + complex(0, 80) * zeta[0] * x[0] ** 3 * x[2] + complex(0, -448) * zeta[0] ** 3 * x[0] * x[2] ** 3 + complex(0, 176) * zeta[0] ** 6 * x[0] ** 3 * x[1] + complex(0, 432) * zeta[0] ** 5 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[0] ** 4 * x[0] ** 3 * x[1] + complex(0, 112) * zeta[0] ** 6 * x[0] * x[1] ** 3 + complex(0, 336) * zeta[0] ** 3 * x[0] ** 3 * x[2] + complex(0, -16) * x[0] * x[1] ** 3 + complex(0, -16) * x[0] ** 3 * x[1] - 12 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] ** 2 + 528 * zeta[0] ** 7 * x[0] ** 2 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] ** 2 + 528 * zeta[0] ** 5 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] ** 2 + 20 * K ** 2 * zeta[0] ** 4 * x[1] ** 2 - 48 * K ** 2 * zeta[0] ** 4 * x[2] ** 2 + 28 * K ** 2 * zeta[0] ** 4 * x[0] ** 2 - 48 * zeta[0] ** 2 * x[0] ** 4 + 2 * K ** 2 * x[0] ** 2 - 24 * zeta[0] ** 8 * x[0] ** 4 - 80 * zeta[0] ** 6 * x[0] ** 4 - 96 * zeta[0] ** 4 * x[0] ** 4 - 24 * zeta[0] ** 8 * x[1] ** 4 + K ** 4 * zeta[0] ** 6 + 64 * zeta[0] ** 6 * x[1] ** 4 - K ** 4 * zeta[0] ** 4 - 48 * zeta[0] ** 4 * x[1] ** 4 - 256 * zeta[0] ** 4 * x[2] ** 4 - 2 * K ** 2 * x[1] ** 2 + complex(0, -96) * zeta[0] ** 8 * x[0] * x[1] ** 3 + complex(0, -48) * zeta[0] ** 2 * x[0] ** 3 * x[1] + complex(0, 96) * zeta[0] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[0] ** 7 * x[0] ** 3 * x[2] + complex(0, -576) * zeta[0] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[0] ** 2 * x[0] * x[1] ** 3 - 144 * zeta[0] ** 3 * x[0] ** 2 * x[1] * x[2] - 144 * zeta[0] * x[0] ** 2 * x[1] * x[2] + 40 * K ** 2 * zeta[0] ** 3 * x[1] * x[2] + 8 * K ** 2 * zeta[0] * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[0] ** 7 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] ** 2 + 48 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[2] ** 2 - 40 * K ** 2 * zeta[0] ** 5 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[2] ** 2 + complex(0, -8) * K ** 2 * zeta[0] * x[0] * x[2] + complex(0, -48) * zeta[0] * x[0] * x[1] ** 2 * x[2] + complex(0, -24) * K ** 2 * zeta[0] ** 6 * x[0] * x[1] + complex(0, -56) * K ** 2 * zeta[0] ** 5 * x[0] * x[2] + complex(0, 240) * zeta[0] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, -192) * zeta[0] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, -56) * K ** 2 * zeta[0] ** 3 * x[0] * x[2] + complex(0, 336) * zeta[0] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[1] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * x[0] * x[1] + complex(0, 24) * K ** 2 * zeta[0] ** 2 * x[0] * x[1] + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[0] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] * x[1] + complex(0, -4) * K ** 2 * zeta[0] ** 8 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[0] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[0] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[0] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, 384) * zeta[0] ** 2 * x[0] * x[1] * x[2] ** 2) / (4 * zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[0] - K ** 2 * zeta[0] ** 3 + 4 * x[0] ** 2 * zeta[0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] ** 2 - 12 * zeta[0] ** 2 * x[1] * x[2] - K ** 2 * zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[0] - 8 * zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (zeta[0] ** 2 - 1)

    DDZ[1][1] = 2 * (48 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[1] * x[2] - 32 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[1] * x[2] - 16 * K ** 2 * k1 ** 2 * zeta[1] * x[1] * x[2] - 8 * x[0] ** 4 + 8 * x[1] ** 4 + K ** 4 * zeta[1] ** 8 - K ** 4 * zeta[1] ** 2 + 480 * zeta[1] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[1] ** 4 * x[0] ** 2 * x[1] ** 2 + 768 * zeta[1] ** 4 * x[0] ** 2 * x[2] ** 2 + 16 * K ** 2 * zeta[1] ** 2 * x[0] ** 2 - 48 * zeta[1] ** 2 * x[0] ** 2 * x[1] ** 2 + 288 * zeta[1] ** 2 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[1] ** 8 * x[0] ** 2 + 144 * zeta[1] ** 8 * x[0] ** 2 * x[1] ** 2 + 16 * K ** 2 * zeta[1] ** 6 * x[0] ** 2 + 48 * zeta[1] ** 6 * x[0] ** 2 * x[1] ** 2 - 176 * zeta[1] ** 7 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 4 * zeta[1] ** 2 - 8 * K ** 2 * zeta[1] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[1] ** 6 * x[2] ** 2 - 480 * zeta[1] ** 6 * x[1] ** 2 * x[2] ** 2 + 336 * zeta[1] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[1] ** 5 * x[1] * x[2] ** 3 + 4 * K ** 4 * k1 ** 2 * zeta[1] ** 2 + 576 * zeta[1] ** 4 * x[1] ** 2 * x[2] ** 2 - 144 * zeta[1] ** 3 * x[1] ** 3 * x[2] - 4 * K ** 2 * k1 ** 2 * x[0] ** 2 + 4 * K ** 2 * k1 ** 2 * x[1] ** 2 + complex(0, 112) * zeta[1] ** 6 * x[0] * x[1] ** 3 + complex(0, 48) * zeta[1] ** 4 * x[0] * x[1] ** 3 + complex(0, -448) * zeta[1] ** 3 * x[0] * x[2] ** 3 + complex(0, 48) * zeta[1] ** 4 * x[0] ** 3 * x[1] + complex(0, 336) * zeta[1] ** 3 * x[0] ** 3 * x[2] + complex(0, 80) * zeta[1] * x[0] ** 3 * x[2] + complex(0, 176) * zeta[1] ** 6 * x[0] ** 3 * x[1] + complex(0, 432) * zeta[1] ** 5 * x[0] ** 3 * x[2] + complex(0, 4) * K ** 2 * x[0] * x[1] + complex(0, -16) * x[0] * x[1] ** 3 + complex(0, -16) * x[0] ** 3 * x[1] + 28 * K ** 2 * zeta[1] ** 4 * x[0] ** 2 + 20 * K ** 2 * zeta[1] ** 4 * x[1] ** 2 - 48 * K ** 2 * zeta[1] ** 4 * x[2] ** 2 - 48 * zeta[1] ** 2 * x[0] ** 4 + 2 * K ** 2 * x[0] ** 2 - 2 * K ** 2 * x[1] ** 2 - 24 * zeta[1] ** 8 * x[1] ** 4 + K ** 4 * zeta[1] ** 6 + 64 * zeta[1] ** 6 * x[1] ** 4 - K ** 4 * zeta[1] ** 4 - 48 * zeta[1] ** 4 * x[1] ** 4 - 256 * zeta[1] ** 4 * x[2] ** 4 - 80 * zeta[1] ** 6 * x[0] ** 4 - 96 * zeta[1] ** 4 * x[0] ** 4 - 24 * zeta[1] ** 8 * x[0] ** 4 + complex(0, -576) * zeta[1] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[1] ** 2 * x[0] ** 3 * x[1] + complex(0, -48) * zeta[1] ** 2 * x[0] * x[1] ** 3 + complex(0, 96) * zeta[1] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[1] ** 7 * x[0] ** 3 * x[2] + complex(0, -96) * zeta[1] ** 8 * x[0] * x[1] ** 3 - 12 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] ** 2 + 528 * zeta[1] ** 7 * x[0] ** 2 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] ** 2 + 528 * zeta[1] ** 5 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] ** 2 - 144 * zeta[1] ** 3 * x[0] ** 2 * x[1] * x[2] - 144 * zeta[1] * x[0] ** 2 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[2] ** 2 + 40 * K ** 2 * zeta[1] ** 3 * x[1] * x[2] + 8 * K ** 2 * zeta[1] * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[1] ** 7 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] ** 2 + 48 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[2] ** 2 - 40 * K ** 2 * zeta[1] ** 5 * x[1] * x[2] + complex(0, -56) * K ** 2 * zeta[1] ** 5 * x[0] * x[2] + complex(0, 240) * zeta[1] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, -192) * zeta[1] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, -56) * K ** 2 * zeta[1] ** 3 * x[0] * x[2] + complex(0, 336) * zeta[1] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, -8) * K ** 2 * zeta[1] * x[0] * x[2] + complex(0, -48) * zeta[1] * x[0] * x[1] ** 2 * x[2] + complex(0, -24) * K ** 2 * zeta[1] ** 6 * x[0] * x[1] + complex(0, 24) * K ** 2 * zeta[1] ** 2 * x[0] * x[1] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[1] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[1] * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * x[0] * x[1] + complex(0, -4) * K ** 2 * zeta[1] ** 8 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[1] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[1] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[1] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, 384) * zeta[1] ** 2 * x[0] * x[1] * x[2] ** 2 + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[1] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] * x[1] + 320 * zeta[1] ** 3 * x[1] * x[2] ** 3 - 8 * K ** 2 * zeta[1] ** 2 * x[1] ** 2 - 8 * K ** 2 * zeta[1] ** 2 * x[2] ** 2 - 96 * zeta[1] ** 2 * x[1] ** 2 * x[2] ** 2 - 16 * zeta[1] * x[1] ** 3 * x[2] + 4 * K ** 4 * k1 ** 4 * zeta[1] ** 4 - 4 * K ** 4 * k1 ** 2 * zeta[1] ** 6 - 2 * K ** 2 * zeta[1] ** 8 * x[1] ** 2) / (4 * zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[1] - K ** 2 * zeta[1] ** 3 + 4 * x[0] ** 2 * zeta[1] + complex(0, -12) * zeta[1] ** 2 * x[0] * x[2] - 4 * zeta[1] ** 3 * x[1] ** 2 - 12 * zeta[1] ** 2 * x[1] * x[2] - K ** 2 * zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[1] - 8 * zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (zeta[1] ** 2 - 1)

    DDZ[2][1] = 2 * (-32 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[1] * x[2] - 16 * K ** 2 * k1 ** 2 * zeta[2] * x[1] * x[2] + 48 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[1] * x[2] + complex(0, 80) * zeta[2] * x[0] ** 3 * x[2] + complex(0, 112) * zeta[2] ** 6 * x[0] * x[1] ** 3 + complex(0, 48) * zeta[2] ** 4 * x[0] * x[1] ** 3 + complex(0, -448) * zeta[2] ** 3 * x[0] * x[2] ** 3 + complex(0, 176) * zeta[2] ** 6 * x[0] ** 3 * x[1] + complex(0, 432) * zeta[2] ** 5 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[2] ** 4 * x[0] ** 3 * x[1] + complex(0, 336) * zeta[2] ** 3 * x[0] ** 3 * x[2] - 8 * x[0] ** 4 + 8 * x[1] ** 4 - K ** 4 * zeta[2] ** 2 + K ** 4 * zeta[2] ** 8 + 20 * K ** 2 * zeta[2] ** 4 * x[1] ** 2 - 48 * K ** 2 * zeta[2] ** 4 * x[2] ** 2 - 4 * K ** 2 * k1 ** 2 * x[0] ** 2 + 4 * K ** 2 * k1 ** 2 * x[1] ** 2 + complex(0, 4) * K ** 2 * x[0] * x[1] + complex(0, -16) * x[0] * x[1] ** 3 + complex(0, -16) * x[0] ** 3 * x[1] + 28 * K ** 2 * zeta[2] ** 4 * x[0] ** 2 - 48 * zeta[2] ** 2 * x[0] ** 4 + 2 * K ** 2 * x[0] ** 2 - 2 * K ** 2 * x[1] ** 2 - 24 * zeta[2] ** 8 * x[1] ** 4 + K ** 4 * zeta[2] ** 6 + 64 * zeta[2] ** 6 * x[1] ** 4 - K ** 4 * zeta[2] ** 4 - 48 * zeta[2] ** 4 * x[1] ** 4 - 256 * zeta[2] ** 4 * x[2] ** 4 - 24 * zeta[2] ** 8 * x[0] ** 4 - 80 * zeta[2] ** 6 * x[0] ** 4 - 96 * zeta[2] ** 4 * x[0] ** 4 + complex(0, -96) * zeta[2] ** 8 * x[0] * x[1] ** 3 + complex(0, -576) * zeta[2] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[2] ** 2 * x[0] ** 3 * x[1] + complex(0, -48) * zeta[2] ** 2 * x[0] * x[1] ** 3 + complex(0, 96) * zeta[2] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[2] ** 7 * x[0] ** 3 * x[2] + complex(0, 24) * K ** 2 * zeta[2] ** 2 * x[0] * x[1] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[1] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] * x[0] * x[2] - 144 * zeta[2] * x[0] ** 2 * x[1] * x[2] + complex(0, -56) * K ** 2 * zeta[2] ** 5 * x[0] * x[2] + complex(0, 240) * zeta[2] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, -192) * zeta[2] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, -56) * K ** 2 * zeta[2] ** 3 * x[0] * x[2] + complex(0, 336) * zeta[2] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, -8) * K ** 2 * zeta[2] * x[0] * x[2] + complex(0, -48) * zeta[2] * x[0] * x[1] ** 2 * x[2] + complex(0, -24) * K ** 2 * zeta[2] ** 6 * x[0] * x[1] + complex(0, -8) * K ** 2 * k1 ** 2 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[2] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[2] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[2] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, 384) * zeta[2] ** 2 * x[0] * x[1] * x[2] ** 2 + complex(0, -4) * K ** 2 * zeta[2] ** 8 * x[0] * x[1] + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] * x[1] - 12 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[0] ** 2 + 528 * zeta[2] ** 7 * x[0] ** 2 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] ** 2 + 528 * zeta[2] ** 5 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] ** 2 - 144 * zeta[2] ** 3 * x[0] ** 2 * x[1] * x[2] + 48 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[2] ** 2 - 40 * K ** 2 * zeta[2] ** 5 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[2] ** 2 + 40 * K ** 2 * zeta[2] ** 3 * x[1] * x[2] + 8 * K ** 2 * zeta[2] * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[2] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[2] ** 7 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] ** 2 - 4 * K ** 4 * k1 ** 2 * zeta[2] ** 6 - 2 * K ** 2 * zeta[2] ** 8 * x[1] ** 2 - 176 * zeta[2] ** 7 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 4 * zeta[2] ** 2 - 8 * K ** 2 * zeta[2] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[2] ** 6 * x[2] ** 2 - 480 * zeta[2] ** 6 * x[1] ** 2 * x[2] ** 2 + 336 * zeta[2] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[2] ** 5 * x[1] * x[2] ** 3 + 4 * K ** 4 * k1 ** 2 * zeta[2] ** 2 + 576 * zeta[2] ** 4 * x[1] ** 2 * x[2] ** 2 - 144 * zeta[2] ** 3 * x[1] ** 3 * x[2] + 320 * zeta[2] ** 3 * x[1] * x[2] ** 3 - 8 * K ** 2 * zeta[2] ** 2 * x[1] ** 2 - 8 * K ** 2 * zeta[2] ** 2 * x[2] ** 2 - 96 * zeta[2] ** 2 * x[1] ** 2 * x[2] ** 2 - 16 * zeta[2] * x[1] ** 3 * x[2] + 288 * zeta[2] ** 2 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[2] ** 8 * x[0] ** 2 + 144 * zeta[2] ** 8 * x[0] ** 2 * x[1] ** 2 + 16 * K ** 2 * zeta[2] ** 6 * x[0] ** 2 + 48 * zeta[2] ** 6 * x[0] ** 2 * x[1] ** 2 + 480 * zeta[2] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[2] ** 4 * x[0] ** 2 * x[1] ** 2 + 768 * zeta[2] ** 4 * x[0] ** 2 * x[2] ** 2 + 16 * K ** 2 * zeta[2] ** 2 * x[0] ** 2 - 48 * zeta[2] ** 2 * x[0] ** 2 * x[1] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[2] ** 4) / (4 * zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[2] - K ** 2 * zeta[2] ** 3 + 4 * x[0] ** 2 * zeta[2] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] ** 2 - 12 * zeta[2] ** 2 * x[1] * x[2] - K ** 2 * zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[2] - 8 * zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (zeta[2] ** 2 - 1)

    DDZ[3][1] = 2 * (48 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[1] * x[2] - 32 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[1] * x[2] - 16 * K ** 2 * k1 ** 2 * zeta[3] * x[1] * x[2] + complex(0, 80) * zeta[3] * x[0] ** 3 * x[2] + complex(0, 176) * zeta[3] ** 6 * x[0] ** 3 * x[1] + complex(0, 432) * zeta[3] ** 5 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[3] ** 4 * x[0] ** 3 * x[1] + complex(0, 336) * zeta[3] ** 3 * x[0] ** 3 * x[2] + complex(0, 112) * zeta[3] ** 6 * x[0] * x[1] ** 3 + complex(0, 48) * zeta[3] ** 4 * x[0] * x[1] ** 3 + complex(0, -448) * zeta[3] ** 3 * x[0] * x[2] ** 3 - 8 * x[0] ** 4 + 8 * x[1] ** 4 + K ** 4 * zeta[3] ** 8 - K ** 4 * zeta[3] ** 2 - 4 * K ** 2 * k1 ** 2 * x[0] ** 2 + 4 * K ** 2 * k1 ** 2 * x[1] ** 2 + complex(0, 4) * K ** 2 * x[0] * x[1] + complex(0, -16) * x[0] * x[1] ** 3 + complex(0, -16) * x[0] ** 3 * x[1] + 2 * K ** 2 * zeta[3] ** 8 * x[0] ** 2 + 144 * zeta[3] ** 8 * x[0] ** 2 * x[1] ** 2 + 16 * K ** 2 * zeta[3] ** 6 * x[0] ** 2 + 48 * zeta[3] ** 6 * x[0] ** 2 * x[1] ** 2 + 480 * zeta[3] ** 6 * x[0] ** 2 * x[2] ** 2 - 144 * zeta[3] ** 4 * x[0] ** 2 * x[1] ** 2 + 768 * zeta[3] ** 4 * x[0] ** 2 * x[2] ** 2 + 16 * K ** 2 * zeta[3] ** 2 * x[0] ** 2 - 48 * zeta[3] ** 2 * x[0] ** 2 * x[1] ** 2 + 288 * zeta[3] ** 2 * x[0] ** 2 * x[2] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[3] ** 4 - 4 * K ** 4 * k1 ** 2 * zeta[3] ** 6 - 2 * K ** 2 * zeta[3] ** 8 * x[1] ** 2 - 176 * zeta[3] ** 7 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 4 * zeta[3] ** 2 - 8 * K ** 2 * zeta[3] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[3] ** 6 * x[2] ** 2 - 480 * zeta[3] ** 6 * x[1] ** 2 * x[2] ** 2 + 336 * zeta[3] ** 5 * x[1] ** 3 * x[2] - 576 * zeta[3] ** 5 * x[1] * x[2] ** 3 + 4 * K ** 4 * k1 ** 2 * zeta[3] ** 2 + 576 * zeta[3] ** 4 * x[1] ** 2 * x[2] ** 2 - 144 * zeta[3] ** 3 * x[1] ** 3 * x[2] + 320 * zeta[3] ** 3 * x[1] * x[2] ** 3 - 8 * K ** 2 * zeta[3] ** 2 * x[1] ** 2 - 8 * K ** 2 * zeta[3] ** 2 * x[2] ** 2 - 96 * zeta[3] ** 2 * x[1] ** 2 * x[2] ** 2 - 16 * zeta[3] * x[1] ** 3 * x[2] - 80 * zeta[3] ** 6 * x[0] ** 4 - 96 * zeta[3] ** 4 * x[0] ** 4 - 24 * zeta[3] ** 8 * x[0] ** 4 - 24 * zeta[3] ** 8 * x[1] ** 4 + K ** 4 * zeta[3] ** 6 + 64 * zeta[3] ** 6 * x[1] ** 4 - K ** 4 * zeta[3] ** 4 - 48 * zeta[3] ** 4 * x[1] ** 4 - 256 * zeta[3] ** 4 * x[2] ** 4 - 48 * zeta[3] ** 2 * x[0] ** 4 + 2 * K ** 2 * x[0] ** 2 - 2 * K ** 2 * x[1] ** 2 + complex(0, 96) * zeta[3] ** 8 * x[0] ** 3 * x[1] + complex(0, 176) * zeta[3] ** 7 * x[0] ** 3 * x[2] + complex(0, -48) * zeta[3] ** 2 * x[0] ** 3 * x[1] + complex(0, -96) * zeta[3] ** 8 * x[0] * x[1] ** 3 + complex(0, -576) * zeta[3] ** 5 * x[0] * x[2] ** 3 + complex(0, -48) * zeta[3] ** 2 * x[0] * x[1] ** 3 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[1] + complex(0, 64) * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[3] * x[0] * x[2] + complex(0, -56) * K ** 2 * zeta[3] ** 5 * x[0] * x[2] + complex(0, 240) * zeta[3] ** 5 * x[0] * x[1] ** 2 * x[2] + complex(0, -192) * zeta[3] ** 4 * x[0] * x[1] * x[2] ** 2 + complex(0, -56) * K ** 2 * zeta[3] ** 3 * x[0] * x[2] + complex(0, 336) * zeta[3] ** 3 * x[0] * x[1] ** 2 * x[2] + complex(0, -8) * K ** 2 * zeta[3] * x[0] * x[2] + complex(0, -48) * zeta[3] * x[0] * x[1] ** 2 * x[2] + complex(0, -24) * K ** 2 * zeta[3] ** 6 * x[0] * x[1] + complex(0, 24) * K ** 2 * zeta[3] ** 2 * x[0] * x[1] + complex(0, -8) * K ** 2 * k1 ** 2 * x[0] * x[1] + complex(0, -4) * K ** 2 * zeta[3] ** 8 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[3] ** 7 * x[0] * x[2] + complex(0, -528) * zeta[3] ** 7 * x[0] * x[1] ** 2 * x[2] + complex(0, -960) * zeta[3] ** 6 * x[0] * x[1] * x[2] ** 2 + complex(0, 384) * zeta[3] ** 2 * x[0] * x[1] * x[2] ** 2 + complex(0, 24) * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] * x[1] + complex(0, 48) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] * x[2] + complex(0, -24) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] * x[1] - 12 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[0] ** 2 + 528 * zeta[3] ** 7 * x[0] ** 2 * x[1] * x[2] - 28 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] ** 2 + 528 * zeta[3] ** 5 * x[0] ** 2 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] ** 2 - 144 * zeta[3] ** 3 * x[0] ** 2 * x[1] * x[2] - 144 * zeta[3] * x[0] ** 2 * x[1] * x[2] + 12 * K ** 2 * k1 ** 2 * zeta[3] ** 6 * x[1] ** 2 - 8 * K ** 2 * zeta[3] ** 7 * x[1] * x[2] - 20 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] ** 2 + 48 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[2] ** 2 - 40 * K ** 2 * zeta[3] ** 5 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[2] ** 2 + 40 * K ** 2 * zeta[3] ** 3 * x[1] * x[2] + 8 * K ** 2 * zeta[3] * x[1] * x[2] + 28 * K ** 2 * zeta[3] ** 4 * x[0] ** 2 + 20 * K ** 2 * zeta[3] ** 4 * x[1] ** 2 - 48 * K ** 2 * zeta[3] ** 4 * x[2] ** 2) / (4 * zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[3] - K ** 2 * zeta[3] ** 3 + 4 * x[0] ** 2 * zeta[3] + complex(0, -12) * zeta[3] ** 2 * x[0] * x[2] - 4 * zeta[3] ** 3 * x[1] ** 2 - 12 * zeta[3] ** 2 * x[1] * x[2] - K ** 2 * zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[3] - 8 * zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3 * (zeta[3] ** 2 - 1)

    DDZ[0][2] = 8 * (16 * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[1] * x[2] - 16 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] * x[2] + complex(0, 16) * x[0] ** 3 * x[2] + complex(0, -48) * x[1] ** 2 * x[2] * x[0] + complex(0, 32) * zeta[0] ** 7 * x[0] ** 3 * x[1] + complex(0, 64) * zeta[0] ** 6 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[0] ** 5 * x[0] ** 3 * x[1] + complex(0, -32) * zeta[0] ** 7 * x[0] * x[1] ** 3 + complex(0, 144) * zeta[0] ** 4 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[0] ** 5 * x[0] * x[1] ** 3 + complex(0, 96) * zeta[0] ** 2 * x[0] ** 3 * x[2] + complex(0, -256) * zeta[0] ** 4 * x[0] * x[2] ** 3 + complex(0, -16) * zeta[0] * x[0] ** 3 * x[1] + complex(0, -192) * zeta[0] ** 2 * x[0] * x[2] ** 3 + complex(0, -16) * zeta[0] * x[0] * x[1] ** 3 - 4 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] ** 2 + 192 * zeta[0] ** 6 * x[0] ** 2 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[0] ** 2 + 144 * zeta[0] ** 4 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[0] * x[0] ** 2 - 96 * zeta[0] ** 2 * x[0] ** 2 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[0] ** 6 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[0] ** 3 * x[2] ** 2 - 16 * K ** 2 * zeta[0] ** 4 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[0] * x[1] ** 2 + 8 * K ** 2 * zeta[0] ** 2 * x[1] * x[2] + 16 * x[1] ** 3 * x[2] - 24 * zeta[0] ** 5 * x[0] ** 4 - 24 * zeta[0] ** 3 * x[0] ** 4 - 8 * zeta[0] * x[0] ** 4 - 8 * zeta[0] ** 7 * x[0] ** 4 - 8 * zeta[0] ** 7 * x[1] ** 4 + 2 * K ** 4 * zeta[0] ** 5 + 24 * zeta[0] ** 5 * x[1] ** 4 - 24 * zeta[0] ** 3 * x[1] ** 4 - 128 * zeta[0] ** 3 * x[2] ** 4 + 8 * zeta[0] * x[1] ** 4 + K ** 4 * zeta[0] ** 7 + K ** 4 * zeta[0] ** 3 + complex(0, -4) * K ** 2 * zeta[0] ** 5 * x[0] * x[1] + complex(0, -384) * zeta[0] ** 5 * x[0] * x[1] * x[2] ** 2 + complex(0, 144) * zeta[0] ** 4 * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[0] ** 3 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[0] ** 2 * x[0] * x[2] + complex(0, 96) * zeta[0] ** 2 * x[0] * x[1] ** 2 * x[2] + complex(0, 4) * K ** 2 * zeta[0] * x[0] * x[1] + complex(0, 192) * zeta[0] * x[0] * x[1] * x[2] ** 2 + complex(0, 4) * K ** 2 * zeta[0] ** 7 * x[0] * x[1] + complex(0, 8) * K ** 2 * zeta[0] ** 6 * x[0] * x[2] + complex(0, -192) * zeta[0] ** 6 * x[0] * x[1] ** 2 * x[2] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] ** 5 * x[0] * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] ** 4 * x[0] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[0] * x[0] * x[1] - 48 * x[1] * x[2] * x[0] ** 2 + 2 * K ** 2 * zeta[0] * x[0] ** 2 + 96 * zeta[0] * x[0] ** 2 * x[2] ** 2 - 2 * K ** 2 * zeta[0] ** 7 * x[0] ** 2 + 48 * zeta[0] ** 7 * x[0] ** 2 * x[1] ** 2 - 2 * K ** 2 * zeta[0] ** 5 * x[0] ** 2 + 192 * zeta[0] ** 5 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[0] ** 3 * x[0] ** 2 - 48 * zeta[0] ** 3 * x[0] ** 2 * x[1] ** 2 + 288 * zeta[0] ** 3 * x[0] ** 2 * x[2] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[0] ** 3 - 4 * K ** 4 * k1 ** 2 * zeta[0] ** 5 + 2 * K ** 2 * zeta[0] ** 7 * x[1] ** 2 - 64 * zeta[0] ** 6 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 2 * zeta[0] ** 3 - 6 * K ** 2 * zeta[0] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[0] ** 5 * x[2] ** 2 - 192 * zeta[0] ** 5 * x[1] ** 2 * x[2] ** 2 + 144 * zeta[0] ** 4 * x[1] ** 3 * x[2] - 256 * zeta[0] ** 4 * x[1] * x[2] ** 3 + 6 * K ** 2 * zeta[0] ** 3 * x[1] ** 2 - 8 * K ** 2 * zeta[0] ** 3 * x[2] ** 2 + 288 * zeta[0] ** 3 * x[1] ** 2 * x[2] ** 2 - 96 * zeta[0] ** 2 * x[1] ** 3 * x[2] + 192 * zeta[0] ** 2 * x[1] * x[2] ** 3 - 2 * K ** 2 * zeta[0] * x[1] ** 2 - 96 * zeta[0] * x[1] ** 2 * x[2] ** 2) * zeta[0] / (4 * zeta[0] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[0] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[0] - K ** 2 * zeta[0] ** 3 + 4 * x[0] ** 2 * zeta[0] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] ** 2 - 12 * zeta[0] ** 2 * x[1] * x[2] - K ** 2 * zeta[0] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[0] - 8 * zeta[0] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDZ[1][2] = 8 * (16 * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[1] * x[2] - 16 * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[1] * x[2] + complex(0, -192) * zeta[1] ** 2 * x[0] * x[2] ** 3 + complex(0, -16) * zeta[1] * x[0] * x[1] ** 3 + complex(0, 32) * zeta[1] ** 7 * x[0] ** 3 * x[1] + complex(0, 64) * zeta[1] ** 6 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[1] ** 5 * x[0] ** 3 * x[1] + complex(0, -32) * zeta[1] ** 7 * x[0] * x[1] ** 3 + complex(0, 144) * zeta[1] ** 4 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[1] ** 5 * x[0] * x[1] ** 3 + complex(0, 96) * zeta[1] ** 2 * x[0] ** 3 * x[2] + complex(0, -256) * zeta[1] ** 4 * x[0] * x[2] ** 3 + complex(0, -16) * zeta[1] * x[0] ** 3 * x[1] + complex(0, 16) * x[0] ** 3 * x[2] + complex(0, -48) * x[1] ** 2 * x[2] * x[0] + 4 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[1] ** 6 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[2] ** 2 - 4 * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] ** 2 + 192 * zeta[1] ** 6 * x[0] ** 2 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[1] ** 3 * x[0] ** 2 + 144 * zeta[1] ** 4 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[1] * x[0] ** 2 - 96 * zeta[1] ** 2 * x[0] ** 2 * x[1] * x[2] - 16 * K ** 2 * zeta[1] ** 4 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[1] * x[1] ** 2 + 8 * K ** 2 * zeta[1] ** 2 * x[1] * x[2] + 16 * x[1] ** 3 * x[2] - 24 * zeta[1] ** 5 * x[0] ** 4 - 24 * zeta[1] ** 3 * x[0] ** 4 - 8 * zeta[1] * x[0] ** 4 - 8 * zeta[1] ** 7 * x[0] ** 4 - 8 * zeta[1] ** 7 * x[1] ** 4 + 2 * K ** 4 * zeta[1] ** 5 + 24 * zeta[1] ** 5 * x[1] ** 4 - 24 * zeta[1] ** 3 * x[1] ** 4 - 128 * zeta[1] ** 3 * x[2] ** 4 + 8 * zeta[1] * x[1] ** 4 + K ** 4 * zeta[1] ** 7 + K ** 4 * zeta[1] ** 3 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[1] ** 5 * x[0] * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[1] ** 4 * x[0] * x[2] + complex(0, 4) * K ** 2 * zeta[1] ** 7 * x[0] * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[1] ** 2 * x[0] * x[2] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[1] * x[0] * x[1] + complex(0, 8) * K ** 2 * zeta[1] ** 6 * x[0] * x[2] + complex(0, -192) * zeta[1] ** 6 * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[1] ** 5 * x[0] * x[1] + complex(0, -384) * zeta[1] ** 5 * x[0] * x[1] * x[2] ** 2 + complex(0, 144) * zeta[1] ** 4 * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[1] ** 3 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[1] ** 2 * x[0] * x[2] + complex(0, 96) * zeta[1] ** 2 * x[0] * x[1] ** 2 * x[2] + complex(0, 4) * K ** 2 * zeta[1] * x[0] * x[1] + complex(0, 192) * zeta[1] * x[0] * x[1] * x[2] ** 2 - 2 * K ** 2 * zeta[1] ** 7 * x[0] ** 2 + 48 * zeta[1] ** 7 * x[0] ** 2 * x[1] ** 2 - 2 * K ** 2 * zeta[1] ** 5 * x[0] ** 2 + 192 * zeta[1] ** 5 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[1] ** 3 * x[0] ** 2 - 48 * zeta[1] ** 3 * x[0] ** 2 * x[1] ** 2 + 288 * zeta[1] ** 3 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[1] * x[0] ** 2 - 4 * K ** 4 * k1 ** 2 * zeta[1] ** 5 + 2 * K ** 2 * zeta[1] ** 7 * x[1] ** 2 - 64 * zeta[1] ** 6 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 2 * zeta[1] ** 3 - 6 * K ** 2 * zeta[1] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[1] ** 5 * x[2] ** 2 - 192 * zeta[1] ** 5 * x[1] ** 2 * x[2] ** 2 + 144 * zeta[1] ** 4 * x[1] ** 3 * x[2] - 256 * zeta[1] ** 4 * x[1] * x[2] ** 3 + 6 * K ** 2 * zeta[1] ** 3 * x[1] ** 2 - 8 * K ** 2 * zeta[1] ** 3 * x[2] ** 2 + 288 * zeta[1] ** 3 * x[1] ** 2 * x[2] ** 2 - 96 * zeta[1] ** 2 * x[1] ** 3 * x[2] + 192 * zeta[1] ** 2 * x[1] * x[2] ** 3 - 2 * K ** 2 * zeta[1] * x[1] ** 2 - 96 * zeta[1] * x[1] ** 2 * x[2] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[1] ** 3 - 48 * x[1] * x[2] * x[0] ** 2 + 96 * zeta[1] * x[0] ** 2 * x[2] ** 2) * zeta[1] / (4 * zeta[1] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[1] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[1] - K ** 2 * zeta[1] ** 3 + 4 * x[0] ** 2 * zeta[1] + complex(0, -12) * zeta[1] ** 2 * x[0] * x[2] - 4 * zeta[1] ** 3 * x[1] ** 2 - 12 * zeta[1] ** 2 * x[1] * x[2] - K ** 2 * zeta[1] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[1] - 8 * zeta[1] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDZ[2][2] = 8 * (-16 * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[1] * x[2] + 16 * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[1] * x[2] + complex(0, 16) * x[0] ** 3 * x[2] + complex(0, -48) * x[1] ** 2 * x[2] * x[0] + 16 * x[1] ** 3 * x[2] - 8 * zeta[2] ** 7 * x[0] ** 4 - 24 * zeta[2] ** 5 * x[0] ** 4 - 24 * zeta[2] ** 3 * x[0] ** 4 - 8 * zeta[2] * x[0] ** 4 - 8 * zeta[2] ** 7 * x[1] ** 4 + 2 * K ** 4 * zeta[2] ** 5 + 24 * zeta[2] ** 5 * x[1] ** 4 - 24 * zeta[2] ** 3 * x[1] ** 4 - 128 * zeta[2] ** 3 * x[2] ** 4 + 8 * zeta[2] * x[1] ** 4 + K ** 4 * zeta[2] ** 7 + K ** 4 * zeta[2] ** 3 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] * x[1] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[2] * x[0] * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] ** 4 * x[0] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] ** 2 * x[0] * x[2] + complex(0, 192) * zeta[2] * x[0] * x[1] * x[2] ** 2 + complex(0, 4) * K ** 2 * zeta[2] ** 7 * x[0] * x[1] + complex(0, 8) * K ** 2 * zeta[2] ** 6 * x[0] * x[2] + complex(0, -192) * zeta[2] ** 6 * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[2] ** 5 * x[0] * x[1] + complex(0, -384) * zeta[2] ** 5 * x[0] * x[1] * x[2] ** 2 + complex(0, 144) * zeta[2] ** 4 * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[2] ** 3 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[2] ** 2 * x[0] * x[2] + complex(0, 96) * zeta[2] ** 2 * x[0] * x[1] ** 2 * x[2] + complex(0, 4) * K ** 2 * zeta[2] * x[0] * x[1] + complex(0, 48) * zeta[2] ** 5 * x[0] * x[1] ** 3 + complex(0, 96) * zeta[2] ** 2 * x[0] ** 3 * x[2] + complex(0, -256) * zeta[2] ** 4 * x[0] * x[2] ** 3 + complex(0, -16) * zeta[2] * x[0] ** 3 * x[1] + complex(0, -192) * zeta[2] ** 2 * x[0] * x[2] ** 3 + complex(0, -16) * zeta[2] * x[0] * x[1] ** 3 + complex(0, 32) * zeta[2] ** 7 * x[0] ** 3 * x[1] + complex(0, 64) * zeta[2] ** 6 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[2] ** 5 * x[0] ** 3 * x[1] + complex(0, -32) * zeta[2] ** 7 * x[0] * x[1] ** 3 + complex(0, 144) * zeta[2] ** 4 * x[0] ** 3 * x[2] - 48 * zeta[2] ** 3 * x[0] ** 2 * x[1] ** 2 + 288 * zeta[2] ** 3 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[2] * x[0] ** 2 + 96 * zeta[2] * x[0] ** 2 * x[2] ** 2 - 2 * K ** 2 * zeta[2] ** 7 * x[0] ** 2 + 48 * zeta[2] ** 7 * x[0] ** 2 * x[1] ** 2 - 2 * K ** 2 * zeta[2] ** 5 * x[0] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[2] ** 3 - 4 * K ** 4 * k1 ** 2 * zeta[2] ** 5 + 2 * K ** 2 * zeta[2] ** 7 * x[1] ** 2 - 64 * zeta[2] ** 6 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 2 * zeta[2] ** 3 - 6 * K ** 2 * zeta[2] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[2] ** 5 * x[2] ** 2 - 192 * zeta[2] ** 5 * x[1] ** 2 * x[2] ** 2 + 144 * zeta[2] ** 4 * x[1] ** 3 * x[2] - 256 * zeta[2] ** 4 * x[1] * x[2] ** 3 + 6 * K ** 2 * zeta[2] ** 3 * x[1] ** 2 - 8 * K ** 2 * zeta[2] ** 3 * x[2] ** 2 + 288 * zeta[2] ** 3 * x[1] ** 2 * x[2] ** 2 - 96 * zeta[2] ** 2 * x[1] ** 3 * x[2] + 192 * zeta[2] ** 2 * x[1] * x[2] ** 3 - 2 * K ** 2 * zeta[2] * x[1] ** 2 - 96 * zeta[2] * x[1] ** 2 * x[2] ** 2 + 192 * zeta[2] ** 5 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[2] ** 3 * x[0] ** 2 - 48 * x[1] * x[2] * x[0] ** 2 - 4 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[0] ** 2 + 192 * zeta[2] ** 6 * x[0] ** 2 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[0] ** 2 + 144 * zeta[2] ** 4 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[2] * x[0] ** 2 - 96 * zeta[2] ** 2 * x[0] ** 2 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[2] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[2] ** 6 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[2] ** 3 * x[2] ** 2 - 16 * K ** 2 * zeta[2] ** 4 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[2] * x[1] ** 2 + 8 * K ** 2 * zeta[2] ** 2 * x[1] * x[2]) * zeta[2] / (4 * zeta[2] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[2] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[2] - K ** 2 * zeta[2] ** 3 + 4 * x[0] ** 2 * zeta[2] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] ** 2 - 12 * zeta[2] ** 2 * x[1] * x[2] - K ** 2 * zeta[2] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[2] - 8 * zeta[2] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    DDZ[3][2] = 8 * (16 * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[1] * x[2] - 16 * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[1] * x[2] + complex(0, 16) * x[0] ** 3 * x[2] + complex(0, -48) * x[1] ** 2 * x[2] * x[0] + complex(0, 144) * zeta[3] ** 4 * x[0] ** 3 * x[2] + complex(0, 96) * zeta[3] ** 2 * x[0] ** 3 * x[2] + complex(0, -16) * zeta[3] * x[0] ** 3 * x[1] + complex(0, 32) * zeta[3] ** 7 * x[0] ** 3 * x[1] + complex(0, 64) * zeta[3] ** 6 * x[0] ** 3 * x[2] + complex(0, 48) * zeta[3] ** 5 * x[0] ** 3 * x[1] + complex(0, -32) * zeta[3] ** 7 * x[0] * x[1] ** 3 + complex(0, 48) * zeta[3] ** 5 * x[0] * x[1] ** 3 + complex(0, -256) * zeta[3] ** 4 * x[0] * x[2] ** 3 + complex(0, -192) * zeta[3] ** 2 * x[0] * x[2] ** 3 + complex(0, -16) * zeta[3] * x[0] * x[1] ** 3 + 16 * x[1] ** 3 * x[2] - 8 * zeta[3] ** 7 * x[1] ** 4 + 2 * K ** 4 * zeta[3] ** 5 + 24 * zeta[3] ** 5 * x[1] ** 4 - 24 * zeta[3] ** 3 * x[1] ** 4 - 128 * zeta[3] ** 3 * x[2] ** 4 + 8 * zeta[3] * x[1] ** 4 - 24 * zeta[3] ** 5 * x[0] ** 4 - 24 * zeta[3] ** 3 * x[0] ** 4 - 8 * zeta[3] * x[0] ** 4 - 8 * zeta[3] ** 7 * x[0] ** 4 + K ** 4 * zeta[3] ** 7 + K ** 4 * zeta[3] ** 3 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] * x[1] + complex(0, -8) * K ** 2 * k1 ** 2 * zeta[3] * x[0] * x[1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[3] ** 4 * x[0] * x[2] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[3] ** 2 * x[0] * x[2] + complex(0, 4) * K ** 2 * zeta[3] ** 7 * x[0] * x[1] + complex(0, 8) * K ** 2 * zeta[3] ** 6 * x[0] * x[2] + complex(0, -192) * zeta[3] ** 6 * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[3] ** 5 * x[0] * x[1] + complex(0, -384) * zeta[3] ** 5 * x[0] * x[1] * x[2] ** 2 + complex(0, 144) * zeta[3] ** 4 * x[0] * x[1] ** 2 * x[2] + complex(0, -4) * K ** 2 * zeta[3] ** 3 * x[0] * x[1] + complex(0, -8) * K ** 2 * zeta[3] ** 2 * x[0] * x[2] + complex(0, 96) * zeta[3] ** 2 * x[0] * x[1] ** 2 * x[2] + complex(0, 4) * K ** 2 * zeta[3] * x[0] * x[1] + complex(0, 192) * zeta[3] * x[0] * x[1] * x[2] ** 2 - 2 * K ** 2 * zeta[3] ** 5 * x[0] ** 2 + 192 * zeta[3] ** 5 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[3] ** 3 * x[0] ** 2 - 48 * zeta[3] ** 3 * x[0] ** 2 * x[1] ** 2 + 288 * zeta[3] ** 3 * x[0] ** 2 * x[2] ** 2 + 2 * K ** 2 * zeta[3] * x[0] ** 2 + 96 * zeta[3] * x[0] ** 2 * x[2] ** 2 + 4 * K ** 4 * k1 ** 4 * zeta[3] ** 3 - 4 * K ** 4 * k1 ** 2 * zeta[3] ** 5 + 2 * K ** 2 * zeta[3] ** 7 * x[1] ** 2 - 64 * zeta[3] ** 6 * x[1] ** 3 * x[2] - 4 * K ** 4 * k1 ** 2 * zeta[3] ** 3 - 6 * K ** 2 * zeta[3] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[3] ** 5 * x[2] ** 2 - 192 * zeta[3] ** 5 * x[1] ** 2 * x[2] ** 2 + 144 * zeta[3] ** 4 * x[1] ** 3 * x[2] - 256 * zeta[3] ** 4 * x[1] * x[2] ** 3 + 6 * K ** 2 * zeta[3] ** 3 * x[1] ** 2 - 8 * K ** 2 * zeta[3] ** 3 * x[2] ** 2 + 288 * zeta[3] ** 3 * x[1] ** 2 * x[2] ** 2 - 96 * zeta[3] ** 2 * x[1] ** 3 * x[2] + 192 * zeta[3] ** 2 * x[1] * x[2] ** 3 - 2 * K ** 2 * zeta[3] * x[1] ** 2 - 96 * zeta[3] * x[1] ** 2 * x[2] ** 2 - 2 * K ** 2 * zeta[3] ** 7 * x[0] ** 2 + 48 * zeta[3] ** 7 * x[0] ** 2 * x[1] ** 2 - 48 * x[1] * x[2] * x[0] ** 2 - 4 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[0] ** 2 + 192 * zeta[3] ** 6 * x[0] ** 2 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[0] ** 2 + 144 * zeta[3] ** 4 * x[0] ** 2 * x[1] * x[2] - 4 * K ** 2 * k1 ** 2 * zeta[3] * x[0] ** 2 - 96 * zeta[3] ** 2 * x[0] ** 2 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[3] ** 5 * x[1] ** 2 + 8 * K ** 2 * zeta[3] ** 6 * x[1] * x[2] - 8 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[1] ** 2 + 16 * K ** 2 * k1 ** 2 * zeta[3] ** 3 * x[2] ** 2 - 16 * K ** 2 * zeta[3] ** 4 * x[1] * x[2] + 4 * K ** 2 * k1 ** 2 * zeta[3] * x[1] ** 2 + 8 * K ** 2 * zeta[3] ** 2 * x[1] * x[2]) * zeta[3] / (4 * zeta[3] ** 3 * x[0] ** 2 + complex(0, -8) * zeta[3] ** 3 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 * zeta[3] - K ** 2 * zeta[3] ** 3 + 4 * x[0] ** 2 * zeta[3] + complex(0, -12) * zeta[3] ** 2 * x[0] * x[2] - 4 * zeta[3] ** 3 * x[1] ** 2 - 12 * zeta[3] ** 2 * x[1] * x[2] - K ** 2 * zeta[3] + complex(0, -4) * x[0] * x[2] + 4 * x[1] ** 2 * zeta[3] - 8 * zeta[3] * x[2] ** 2 + 4 * x[1] * x[2]) ** 3

    return DDZ