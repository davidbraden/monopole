from numpy import complex, complex64, mat, dot, trace, pi, sqrt, mat
from mpmath import ellipk, ellipe
from cmath import exp


def ddphis211(zeta, mu, DM, DZ, DDM, DDZ, x, k):

    K = complex64(ellipk(k**2))

    E = complex64(ellipe(k**2))

    cm= (2*E-K)/K

    k1 = sqrt(1-k**2)

    xp = x[0]+complex(0,1)*x[1]
    xm = x[0]-complex(0,1)*x[1]
    S =  sqrt(K**2-4*xp*xm)
    SP = sqrt(K**2-4*xp**2)
    SM = sqrt(K**2-4*xm**2)
    SPM = sqrt(-k1**2*(K**2*k**2-4*xm*xp)+(xm-xp)**2)
    R = 2*K**2*k1**2-S**2-8*x[2]**2
    RM = complex(0,1)*SM**2*(xm*(2*k1**2-1)+xp)-(16*complex(0,1))*xm*x[2]**2
    RP = complex(0,1)*SM**2*(xp*(2*k1**2-1)+xm)+(16*complex(0,1))*xp*x[2]**2
    RMBAR=-complex(0,1)*SP**2*( xp*(2*k1**2-1)+xm ) +16*complex(0,1)*xp*x[2]**2
    RPBAR=-complex(0,1)*SP**2*( xm*(2*k1**2-1)+xp ) -16*complex(0,1)*xm*x[2]**2
    r=sqrt(x[0]**2+x[1]**2+x[2]**2)

    DS = [None]*2
    DSP = [None]*2
    DSM = [None]*2
    DSPM = [None]*2
    DRP = [None]*3
    DRM = [None]*3
    DRPBAR = [None]*3
    DRMBAR = [None]*3


    DS[0] = -4 * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1) * x[0]

    DS[1] = -4 * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1) * x[1]

    DSP[0] = -4 * (x[0] + complex(0, 1) * x[1]) * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSP[1] = -4 * (complex(0, 1) * x[0] - x[1]) * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSM[0] = 4 * (complex(0, 1) * x[1] - x[0]) * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSM[1] = 4 * (x[1] + complex(0, 1) * x[0]) * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.1e1 / 0.2e1)

    DSPM[0] = 4 * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1) * k1 ** 2 * x[0]

    DSPM[1] = 4 * x[1] * (k1 ** 2 - 1) * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.1e1 / 0.2e1)

    DRP[0] = complex(0, -8) * k1 ** 2 * x[1] ** 2 - 16 * k1 ** 2 * x[0] * x[1] + complex(0, 2) * K ** 2 * k1 ** 2 + complex(0, 16) * x[1] ** 2 + complex(0, -24) * k1 ** 2 * x[0] ** 2 - 16 * x[0] * x[1] + complex(0, 16) * x[2] ** 2

    DRP[1] = -24 * k1 ** 2 * x[1] ** 2 + complex(0, -16) * k1 ** 2 * x[0] * x[1] - 2 * K ** 2 * k1 ** 2 + 24 * x[1] ** 2 - 8 * k1 ** 2 * x[0] ** 2 + complex(0, 32) * x[0] * x[1] + 2 * K ** 2 - 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRP[2] = -32 * x[1] * x[2] + complex(0, 32) * x[0] * x[2]

    DRM[0] = complex(0, 24) * k1 ** 2 * x[1] ** 2 - 48 * k1 ** 2 * x[0] * x[1] + complex(0, 2) * K ** 2 * k1 ** 2 + complex(0, -16) * x[1] ** 2 + complex(0, -24) * k1 ** 2 * x[0] ** 2 + 16 * x[0] * x[1] + complex(0, -16) * x[2] ** 2

    DRM[1] = 24 * k1 ** 2 * x[1] ** 2 + complex(0, 48) * k1 ** 2 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 - 24 * x[1] ** 2 - 24 * k1 ** 2 * x[0] ** 2 + complex(0, -32) * x[0] * x[1] - 2 * K ** 2 + 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRM[2] = -32 * x[1] * x[2] + complex(0, -32) * x[0] * x[2]

    DRPBAR[0] = complex(0, 8) * k1 ** 2 * x[1] ** 2 - 16 * k1 ** 2 * x[0] * x[1] + complex(0, -2) * K ** 2 * k1 ** 2 + complex(0, -16) * x[1] ** 2 + complex(0, 24) * k1 ** 2 * x[0] ** 2 - 16 * x[0] * x[1] + complex(0, -16) * x[2] ** 2

    DRPBAR[1] = -24 * k1 ** 2 * x[1] ** 2 + complex(0, 16) * k1 ** 2 * x[0] * x[1] - 2 * K ** 2 * k1 ** 2 + 24 * x[1] ** 2 - 8 * k1 ** 2 * x[0] ** 2 + complex(0, -32) * x[0] * x[1] + 2 * K ** 2 - 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRPBAR[2] = -32 * x[1] * x[2] + complex(0, -32) * x[0] * x[2]

    DRMBAR[0] = complex(0, -24) * k1 ** 2 * x[1] ** 2 - 48 * k1 ** 2 * x[0] * x[1] + complex(0, -2) * K ** 2 * k1 ** 2 + complex(0, 16) * x[1] ** 2 + complex(0, 24) * k1 ** 2 * x[0] ** 2 + 16 * x[0] * x[1] + complex(0, 16) * x[2] ** 2

    DRMBAR[1] = 24 * k1 ** 2 * x[1] ** 2 + complex(0, -48) * k1 ** 2 * x[0] * x[1] + 2 * K ** 2 * k1 ** 2 - 24 * x[1] ** 2 - 24 * k1 ** 2 * x[0] ** 2 + complex(0, 32) * x[0] * x[1] - 2 * K ** 2 + 8 * x[0] ** 2 - 16 * x[2] ** 2

    DRMBAR[2] = -32 * x[1] * x[2] + complex(0, 32) * x[0] * x[2]

    DDS = [None]*2
    DDSP = [None]*2
    DDSM = [None]*2
    DDSPM = [None]*2
    DDRP = [None]*3
    DDRM = [None]*3
    DDRPBAR = [None]*3
    DDRMBAR = [None]*3

    DDS[0] = -4 * (K ** 2 - 4 * x[1] ** 2) * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDS[1] = -4 * (K ** 2 - 4 * x[0] ** 2) * (K ** 2 - 4 * x[0] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDSP[0] = -4 * K ** 2 * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSP[1] = 4 * K ** 2 * (4 * x[1] ** 2 + complex(0, -8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSM[0] = -4 * K ** 2 * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSM[1] = 4 * K ** 2 * (4 * x[1] ** 2 + complex(0, 8) * x[0] * x[1] + K ** 2 - 4 * x[0] ** 2) ** (-0.3e1 / 0.2e1)

    DDSPM[0] = -4 * k1 ** 2 * (K ** 2 * k ** 2 * k1 ** 2 - 4 * k1 ** 2 * x[1] ** 2 + 4 * x[1] ** 2) * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDSPM[1] = -4 * (k1 ** 2 - 1) * k1 ** 2 * (K ** 2 * k ** 2 - 4 * x[0] ** 2) * (-K ** 2 * k ** 2 * k1 ** 2 + 4 * k1 ** 2 * x[0] ** 2 + 4 * k1 ** 2 * x[1] ** 2 - 4 * x[1] ** 2) ** (-0.3e1 / 0.2e1)

    DDRP[0] = -16 * k1 ** 2 * x[1] + complex(0, -48) * k1 ** 2 * x[0] - 16 * x[1]

    DDRP[1] = -48 * k1 ** 2 * x[1] + complex(0, -16) * k1 ** 2 * x[0] + 48 * x[1] + complex(0, 32) * x[0]

    DDRP[2] = -32 * x[1] + complex(0, 32) * x[0]

    DDRM[0] = -48 * k1 ** 2 * x[1] + complex(0, -48) * k1 ** 2 * x[0] + 16 * x[1]

    DDRM[1] = 48 * k1 ** 2 * x[1] + complex(0, 48) * k1 ** 2 * x[0] - 48 * x[1] + complex(0, -32) * x[0]

    DDRM[2] = -32 * x[1] + complex(0, -32) * x[0]

    DDRPBAR[0] = -16 * k1 ** 2 * x[1] + complex(0, 48) * k1 ** 2 * x[0] - 16 * x[1]

    DDRPBAR[1] = -48 * k1 ** 2 * x[1] + complex(0, 16) * k1 ** 2 * x[0] + 48 * x[1] + complex(0, -32) * x[0]

    DDRPBAR[2] = -32 * x[1] + complex(0, -32) * x[0]

    DDRMBAR[0] = -48 * k1 ** 2 * x[1] + complex(0, 48) * k1 ** 2 * x[0] + 16 * x[1]

    DDRMBAR[1] = 48 * k1 ** 2 * x[1] + complex(0, -48) * k1 ** 2 * x[0] - 48 * x[1] + complex(0, 32) * x[0]

    DDRMBAR[2] = -32 * x[1] + complex(0, 32) * x[0]

    return -2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (complex(0, 24) * x[2] * xm * zeta[0] * DZ[0][1] ** 2 - 24 * DZ[0][1] * x[2] + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DDZ[0][1] - 8 * zeta[0] ** 2 - 32 * zeta[0] * x[1] * DZ[0][1] - 2 * R * DZ[0][1] ** 2 - 2 * R * zeta[0] * DDZ[0][1] + 24 * zeta[0] ** 2 * x[2] * DZ[0][1] + complex(0, 12) * xp * x[2] * DDZ[0][1] + 2 * DSP[1] ** 2 + 2 * SP * DDSP[1]) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (-24 * DZ[2][1] * x[2] + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DDZ[2][1] + complex(0, 24) * x[2] * xm * zeta[2] * DZ[2][1] ** 2 - 8 * zeta[2] ** 2 - 32 * zeta[2] * x[1] * DZ[2][1] - 2 * R * DZ[2][1] ** 2 - 2 * R * zeta[2] * DDZ[2][1] + 24 * zeta[2] ** 2 * x[2] * DZ[2][1] + complex(0, 12) * xp * x[2] * DDZ[2][1] + 2 * DSP[1] ** 2 + 2 * SP * DDSP[1]) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * DZ[0][1] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[0] * DDZ[0][1] + complex(0, -24) * zeta[0] * x[0] * x[2] * DZ[0][1] ** 2 + complex(0, -12) * DDZ[0][1] * x[0] * x[2] - 24 * zeta[0] * x[1] * x[2] * DZ[0][1] ** 2 - 24 * zeta[0] ** 2 * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DDZ[0][1] - 2 * K ** 2 * DZ[0][1] ** 2 - 2 * K ** 2 * zeta[0] * DDZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DDZ[0][1] + 8 * DZ[0][1] ** 2 * x[0] ** 2 + 8 * zeta[0] * x[0] ** 2 * DDZ[0][1] + 8 * DZ[0][1] ** 2 * x[1] ** 2 + 32 * zeta[0] * x[1] * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DDZ[0][1] + 8 * zeta[0] ** 2 - 16 * DZ[0][1] ** 2 * x[2] ** 2 - 16 * zeta[0] * x[2] ** 2 * DDZ[0][1] + 12 * DDZ[0][1] * x[1] * x[2] + 24 * DZ[0][1] * x[2] - 8) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) + 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 3 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] ** 2 - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) - 6 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][1] - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 3 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) ** 2 - 3 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDZ[0][1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 + 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] - 12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][1] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] - 6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][1] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) - 6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][1] + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] - 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDSM[1] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] + 12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 5 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][1] ** 2 - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] + 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 3 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] ** 2 - 3 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDZ[2][1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DDSM[1] + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 3 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) ** 2 - 6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][1] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] + (-2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[3][1]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DDM[0][1] - 2 * DDM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DDM[2][1] - 2 * DDM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DDM[1][1] - 2 * DDM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[3][1]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[1] ** 3 + 6 * DRMBAR[1] / zeta[1] ** 4 * DZ[1][1] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][1] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][1] + 16 * x[2] / zeta[1] ** 2 - 64 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][1] + DDRPBAR[1] / zeta[1] - 2 * DRPBAR[1] / zeta[1] ** 2 * DZ[1][1] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][1] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[2] ** 3 + 6 * DRMBAR[1] / zeta[2] ** 4 * DZ[2][1] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][1] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][1] + 16 * x[2] / zeta[2] ** 2 - 64 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][1] + DDRPBAR[1] / zeta[2] - 2 * DRPBAR[1] / zeta[2] ** 2 * DZ[2][1] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][1] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[0] ** 3 + 6 * DRMBAR[1] / zeta[0] ** 4 * DZ[0][1] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][1] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][1] + 16 * x[2] / zeta[0] ** 2 - 64 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][1] + DDRPBAR[1] / zeta[0] - 2 * DRPBAR[1] / zeta[0] ** 2 * DZ[0][1] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][1] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[3][1]) ** 2 * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (2 * DDM[2][1] * exp(2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][1] * exp(2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][1] ** 2 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][1] + 24 * x[2] / zeta[1] ** 4 * DZ[1][1] - 8 / zeta[1] ** 2 + 32 * x[1] / zeta[1] ** 3 * DZ[1][1] - 6 * R / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 - 24 * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][1] - 8 / zeta[2] ** 2 + 32 * x[1] / zeta[2] ** 3 * DZ[2][1] - 6 * R / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][1] + 24 * x[2] / zeta[2] ** 4 * DZ[2][1] + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][1] - 24 * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][1] + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][1] - 24 * x[2] / zeta[0] ** 2 * DZ[0][1] - 8 / zeta[0] ** 2 + 32 * x[1] / zeta[0] ** 3 * DZ[0][1] - 6 * R / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][1] + 24 * x[2] / zeta[0] ** 4 * DZ[0][1] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (-8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * DZ[1][1] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) * DZ[1][1] + 4 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 2) * zeta[3] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[3][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][1]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 2) / zeta[3] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 * DZ[3][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][1]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DDZ[1][1] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 4) / zeta[1] ** 3 * DZ[1][1] + complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][1] - 6 * x[0] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][1]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (8 / zeta[1] ** 3 + complex(0, 48) * x[0] / zeta[1] ** 4 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DDZ[1][1] - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][1] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][1] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][1] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][1] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 48 * x[1] / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] / zeta[1] ** 2 * DZ[1][1] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[2] / zeta[1] ** 3 * DZ[1][1] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 3 * DZ[1][1] ** 2 + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 4) / zeta[1] ** 3 * DZ[1][1] + complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][1] - 6 * x[0] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][1]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (8 / zeta[1] ** 3 + complex(0, 48) * x[0] / zeta[1] ** 4 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DDZ[1][1] - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][1] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][1] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][1] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][1] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 48 * x[1] / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] / zeta[1] ** 2 * DZ[1][1] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[2] / zeta[1] ** 3 * DZ[1][1] - 8 / zeta[1]) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 2) * zeta[3] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[3][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][1]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 2) / zeta[3] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 * DZ[3][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][1]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] + 4 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] + 4 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) * DZ[2][1] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) * DZ[2][1] - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1] + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DDZ[2][1] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 3 * DZ[2][1] ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 4) / zeta[2] ** 3 * DZ[2][1] + complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][1] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][1] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][1] - 6 * x[0] / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][1]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][1] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][1] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - K ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 48) * x[0] / zeta[2] ** 4 * DZ[2][1] + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 48 * x[1] / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][1] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][1] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][1] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][1] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 + 48 * x[2] / zeta[2] ** 3 * DZ[2][1] - 8 / zeta[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 4) / zeta[2] ** 3 * DZ[2][1] + complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][1] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][1] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][1] - 6 * x[0] / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][1]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][1] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][1] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - K ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 48) * x[0] / zeta[2] ** 4 * DZ[2][1] + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 48 * x[1] / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][1] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][1] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][1] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][1] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 + 48 * x[2] / zeta[2] ** 3 * DZ[2][1] - 8 / zeta[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) ** 2 + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2])) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][1] * exp(2 * mu[1]) - 4 * DM[1][1] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][1] * exp(2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][1] * exp(2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][1] * exp(2 * mu[1]) + 4 * DM[1][1] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 2) / zeta[3] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 * DZ[3][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][1]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 2) * zeta[3] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[3][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][1]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] + 4 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) * DZ[0][1] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) * DZ[0][1] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 4) / zeta[0] ** 3 * DZ[0][1] + complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][1] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][1] - 6 * x[0] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][1]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][1] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][1] + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][1] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][1] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 48 * x[1] / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] / zeta[0] ** 2 * DZ[0][1] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 48 * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DDZ[0][1] + complex(0, 48) * x[0] / zeta[0] ** 4 * DZ[0][1] - 8 / zeta[0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 4) / zeta[0] ** 3 * DZ[0][1] + complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][1] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][1] - 6 * x[0] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][1]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][1] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][1] + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][1] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][1] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 48 * x[1] / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] / zeta[0] ** 2 * DZ[0][1] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 48 * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DDZ[0][1] + complex(0, 48) * x[0] / zeta[0] ** 4 * DZ[0][1] - 8 / zeta[0]) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1] + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DDZ[0][1] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 3 * DZ[0][1] ** 2 + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1]) * (-exp(-2 * mu[0]) + exp(-2 * mu[2])) + (4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[1][1] - 2 * DDM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[1] ** 3 + 6 * DRMBAR[1] / zeta[1] ** 4 * DZ[1][1] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][1] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][1] + 16 * x[2] / zeta[1] ** 2 - 64 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][1] + DDRPBAR[1] / zeta[1] - 2 * DRPBAR[1] / zeta[1] ** 2 * DZ[1][1] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][1] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[0] ** 3 + 6 * DRMBAR[1] / zeta[0] ** 4 * DZ[0][1] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][1] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][1] + 16 * x[2] / zeta[0] ** 2 - 64 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][1] + DDRPBAR[1] / zeta[0] - 2 * DRPBAR[1] / zeta[0] ** 2 * DZ[0][1] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][1] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[0][1] - 2 * DDM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][1] ** 2 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][1] + 24 * x[2] / zeta[1] ** 4 * DZ[1][1] - 8 / zeta[1] ** 2 + 32 * x[1] / zeta[1] ** 3 * DZ[1][1] - 6 * R / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 - 24 * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][1] + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][1] - 24 * x[2] / zeta[0] ** 2 * DZ[0][1] - 8 / zeta[0] ** 2 + 32 * x[1] / zeta[0] ** 3 * DZ[0][1] - 6 * R / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][1] + 24 * x[2] / zeta[0] ** 4 * DZ[0][1] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][1] * exp(2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][1] * exp(2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-2 / zeta[1] ** 2 * DZ[1][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DDZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 2) * zeta[2] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[2][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][1]) + (complex(0, -2) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, 1) * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, -4) / zeta[1] ** 3 * DZ[1][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DDZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-0.1e1 / zeta[2] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 * DZ[2][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][1] - 4 * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][1]) + (complex(0, 2) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * x[2] / zeta[1] ** 2 * DDZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-0.1e1 / zeta[2] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 * DZ[2][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][1] - 4 * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][1] + 2) + (2 / zeta[1] ** 2 * DZ[1][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DDZ[1][1] - 6 * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[2] / zeta[1] ** 3 * DDZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 2) / zeta[2] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 * DZ[2][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][1])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-2 / zeta[0] ** 2 * DZ[0][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DDZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 2) * zeta[2] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[2][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][1]) + (complex(0, -2) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 1) * x[2] / zeta[0] ** 2 * DDZ[0][1] + complex(0, -4) / zeta[0] ** 3 * DZ[0][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DDZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-0.1e1 / zeta[2] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 * DZ[2][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][1] - 4 * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][1]) + (complex(0, 2) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * x[2] / zeta[0] ** 2 * DDZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-0.1e1 / zeta[2] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 * DZ[2][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][1] - 4 * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][1] + 2) + (2 / zeta[0] ** 2 * DZ[0][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DDZ[0][1] - 6 * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * x[2] / zeta[0] ** 3 * DDZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 2) / zeta[2] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 * DZ[2][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][1])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][1] * exp(2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][1] * exp(2 * mu[1]) + 4 * DM[1][1] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[2] ** 3 + 6 * DRMBAR[1] / zeta[2] ** 4 * DZ[2][1] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][1] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][1] + 16 * x[2] / zeta[2] ** 2 - 64 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][1] + DDRPBAR[1] / zeta[2] - 2 * DRPBAR[1] / zeta[2] ** 2 * DZ[2][1] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][1] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][1] * exp(2 * mu[1]) - 4 * DM[1][1] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][1] * exp(2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][1] - 8 / zeta[2] ** 2 + 32 * x[1] / zeta[2] ** 3 * DZ[2][1] - 6 * R / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][1] + 24 * x[2] / zeta[2] ** 4 * DZ[2][1] + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][1] - 24 * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-2 / zeta[2] ** 2 * DZ[2][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DDZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 4 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 2) * zeta[2] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[2][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][1]) + 2 * (complex(0, -2) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 1) * x[2] / zeta[2] ** 2 * DDZ[2][1] + complex(0, -4) / zeta[2] ** 3 * DZ[2][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DDZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 4 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-0.1e1 / zeta[2] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 * DZ[2][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][1] - 4 * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][1]) + 2 * (complex(0, 2) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * x[2] / zeta[2] ** 2 * DDZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 4 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-0.1e1 / zeta[2] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 3 * DZ[2][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DDZ[2][1] - 4 * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DDZ[2][1] + 2) + 2 * (2 / zeta[2] ** 2 * DZ[2][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DDZ[2][1] - 6 * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * x[2] / zeta[2] ** 3 * DDZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 4 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 2) / zeta[2] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 * DZ[2][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][1])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2))) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) + ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[2][1] - 2 * DDM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[1][1] - 2 * DDM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[2] ** 3 + 6 * DRMBAR[1] / zeta[2] ** 4 * DZ[2][1] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][1] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][1] + 16 * x[2] / zeta[2] ** 2 - 64 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][1] + DDRPBAR[1] / zeta[2] - 2 * DRPBAR[1] / zeta[2] ** 2 * DZ[2][1] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][1] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[1] ** 3 + 6 * DRMBAR[1] / zeta[1] ** 4 * DZ[1][1] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][1] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][1] + 16 * x[2] / zeta[1] ** 2 - 64 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][1] + DDRPBAR[1] / zeta[1] - 2 * DRPBAR[1] / zeta[1] ** 2 * DZ[1][1] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][1] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) ** 2 * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) ** 2 * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-2 / zeta[2] ** 2 * DZ[2][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DDZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 2) * zeta[0] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[0][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][1]) + (complex(0, -2) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 1) * x[2] / zeta[2] ** 2 * DDZ[2][1] + complex(0, -4) / zeta[2] ** 3 * DZ[2][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DDZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-0.1e1 / zeta[0] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 * DZ[0][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][1] - 4 * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][1]) + (complex(0, 2) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * x[2] / zeta[2] ** 2 * DDZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-0.1e1 / zeta[0] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 * DZ[0][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][1] - 4 * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][1] + 2) + (2 / zeta[2] ** 2 * DZ[2][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DDZ[2][1] - 6 * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * x[2] / zeta[2] ** 3 * DDZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 2) / zeta[0] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 * DZ[0][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][1])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][1] * exp(2 * mu[1]) - 4 * DM[1][1] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][1] * exp(2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][1] - 8 / zeta[2] ** 2 + 32 * x[1] / zeta[2] ** 3 * DZ[2][1] - 6 * R / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][1] + 24 * x[2] / zeta[2] ** 4 * DZ[2][1] + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][1] - 24 * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][1] ** 2 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][1] + 24 * x[2] / zeta[1] ** 4 * DZ[1][1] - 8 / zeta[1] ** 2 + 32 * x[1] / zeta[1] ** 3 * DZ[1][1] - 6 * R / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 - 24 * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][1] * exp(2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][1] * exp(2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-2 / zeta[1] ** 2 * DZ[1][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DDZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 2) * zeta[0] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[0][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][1]) + (complex(0, -2) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, 1) * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, -4) / zeta[1] ** 3 * DZ[1][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DDZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-0.1e1 / zeta[0] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 * DZ[0][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][1] - 4 * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][1]) + (complex(0, 2) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * x[2] / zeta[1] ** 2 * DDZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-0.1e1 / zeta[0] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 * DZ[0][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][1] - 4 * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][1] + 2) + (2 / zeta[1] ** 2 * DZ[1][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DDZ[1][1] - 6 * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[2] / zeta[1] ** 3 * DDZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 2) / zeta[0] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 * DZ[0][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][1])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[0] ** 3 + 6 * DRMBAR[1] / zeta[0] ** 4 * DZ[0][1] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][1] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][1] + 16 * x[2] / zeta[0] ** 2 - 64 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][1] + DDRPBAR[1] / zeta[0] - 2 * DRPBAR[1] / zeta[0] ** 2 * DZ[0][1] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][1] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][1] + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][1] - 24 * x[2] / zeta[0] ** 2 * DZ[0][1] - 8 / zeta[0] ** 2 + 32 * x[1] / zeta[0] ** 3 * DZ[0][1] - 6 * R / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][1] + 24 * x[2] / zeta[0] ** 4 * DZ[0][1] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-2 / zeta[0] ** 2 * DZ[0][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DDZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 4 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 2) * zeta[0] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[0][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][1]) + 2 * (complex(0, -2) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 1) * x[2] / zeta[0] ** 2 * DDZ[0][1] + complex(0, -4) / zeta[0] ** 3 * DZ[0][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DDZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 4 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-0.1e1 / zeta[0] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 * DZ[0][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][1] - 4 * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][1]) + 2 * (complex(0, 2) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * x[2] / zeta[0] ** 2 * DDZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 4 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-0.1e1 / zeta[0] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 3 * DZ[0][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DDZ[0][1] - 4 * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DDZ[0][1] + 2) + 2 * (2 / zeta[0] ** 2 * DZ[0][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DDZ[0][1] - 6 * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * x[2] / zeta[0] ** 3 * DDZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 4 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 2) / zeta[0] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 * DZ[0][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][1])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][1] * exp(2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][1] * exp(2 * mu[1]) + 4 * DM[1][1] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2))) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) + (-2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[1] ** 3 + 6 * DRMBAR[1] / zeta[1] ** 4 * DZ[1][1] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][1] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][1] + 16 * x[2] / zeta[1] ** 2 - 64 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][1] + DDRPBAR[1] / zeta[1] - 2 * DRPBAR[1] / zeta[1] ** 2 * DZ[1][1] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][1] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[0] ** 3 + 6 * DRMBAR[1] / zeta[0] ** 4 * DZ[0][1] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][1] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][1] + 16 * x[2] / zeta[0] ** 2 - 64 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][1] + DDRPBAR[1] / zeta[0] - 2 * DRPBAR[1] / zeta[0] ** 2 * DZ[0][1] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][1] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DDM[0][1] - 2 * DDM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[2][1]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[2][1]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DDM[1][1] - 2 * DDM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][1] + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][1] - 24 * x[2] / zeta[0] ** 2 * DZ[0][1] - 8 / zeta[0] ** 2 + 32 * x[1] / zeta[0] ** 3 * DZ[0][1] - 6 * R / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][1] + 24 * x[2] / zeta[0] ** 4 * DZ[0][1] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][1] ** 2 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][1] + 24 * x[2] / zeta[1] ** 4 * DZ[1][1] - 8 / zeta[1] ** 2 + 32 * x[1] / zeta[1] ** 3 * DZ[1][1] - 6 * R / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 - 24 * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] + 4 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 2) * zeta[2] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[2][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][1]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 2) / zeta[2] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 * DZ[2][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][1]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) * DZ[0][1] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) * DZ[0][1] - 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1] + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DDZ[0][1] + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 3 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 3 * DZ[0][1] ** 2 - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][1] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][1] + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][1] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][1] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 48 * x[1] / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] / zeta[0] ** 2 * DZ[0][1] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 48 * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DDZ[0][1] + complex(0, 48) * x[0] / zeta[0] ** 4 * DZ[0][1] - 8 / zeta[0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, 4) / zeta[0] ** 3 * DZ[0][1] + complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][1] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][1] - 6 * x[0] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][1]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (8 / zeta[0] ** 3 - 4 * K ** 2 * k1 ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 72 * x[1] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DDZ[0][1] + 24 * x[1] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DDZ[0][1] + complex(0, -96) * x[0] * x[1] / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 3 * K ** 2 / zeta[0] ** 4 * DDZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DDZ[0][1] - 12 * x[1] ** 2 / zeta[0] ** 4 * DDZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DDZ[0][1] + 4 * x[1] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DDZ[0][1] - 48 * x[1] / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] / zeta[0] ** 2 * DZ[0][1] + 12 * K ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 - 48 * x[0] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 48 * x[1] ** 2 / zeta[0] ** 5 * DZ[0][1] ** 2 + 2 * K ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[0] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 - 8 * x[1] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 16 * x[2] ** 2 / zeta[0] ** 3 * DZ[0][1] ** 2 + 48 * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DDZ[0][1] + complex(0, 48) * x[0] / zeta[0] ** 4 * DZ[0][1] - 8 / zeta[0]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, 4) / zeta[0] ** 3 * DZ[0][1] + complex(0, -6) * x[1] / zeta[0] ** 4 * DZ[0][1] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DDZ[0][1] + complex(0, 4) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -2) * x[2] / zeta[0] ** 2 * DDZ[0][1] - 6 * x[0] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * x[0] / zeta[0] ** 3 * DDZ[0][1]) - 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2])) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][1] * exp(2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][1] * exp(2 * mu[1]) + 4 * DM[1][1] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 4 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 2) * zeta[2] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[2][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[2][1]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 2) / zeta[2] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 * DZ[2][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DDZ[2][1]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * DZ[1][1] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) * DZ[1][1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DDZ[1][1] + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1] + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (8 / zeta[1] ** 3 + complex(0, 48) * x[0] / zeta[1] ** 4 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DDZ[1][1] - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][1] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][1] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][1] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][1] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 48 * x[1] / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] / zeta[1] ** 2 * DZ[1][1] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[2] / zeta[1] ** 3 * DZ[1][1] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 4) / zeta[1] ** 3 * DZ[1][1] + complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][1] - 6 * x[0] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][1]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (8 / zeta[1] ** 3 + complex(0, 48) * x[0] / zeta[1] ** 4 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DDZ[1][1] - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][1] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][1] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][1] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][1] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 48 * x[1] / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] / zeta[1] ** 2 * DZ[1][1] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[2] / zeta[1] ** 3 * DZ[1][1] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 4) / zeta[1] ** 3 * DZ[1][1] + complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][1] - 6 * x[0] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 3 * DZ[1][1] ** 2 + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2])) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][1] * exp(2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][1] * exp(2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) + (2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][1] ** 2 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][1] + 24 * x[2] / zeta[1] ** 4 * DZ[1][1] - 8 / zeta[1] ** 2 + 32 * x[1] / zeta[1] ** 3 * DZ[1][1] - 6 * R / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 - 24 * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DDZ[0][1] + complex(0, 48) * x[2] * xp / zeta[0] ** 5 * DZ[0][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DDZ[0][1] - 24 * x[2] / zeta[0] ** 2 * DZ[0][1] - 8 / zeta[0] ** 2 + 32 * x[1] / zeta[0] ** 3 * DZ[0][1] - 6 * R / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * R / zeta[0] ** 3 * DDZ[0][1] + 24 * x[2] / zeta[0] ** 4 * DZ[0][1] + complex(0, 24) * xm * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][1] - 8 / zeta[2] ** 2 + 32 * x[1] / zeta[2] ** 3 * DZ[2][1] - 6 * R / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][1] + 24 * x[2] / zeta[2] ** 4 * DZ[2][1] + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][1] - 24 * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-2 / zeta[2] ** 2 * DZ[2][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DDZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 2) * zeta[3] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[3][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][1]) + (complex(0, -2) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, 1) * x[2] / zeta[2] ** 2 * DDZ[2][1] + complex(0, -4) / zeta[2] ** 3 * DZ[2][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DDZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-0.1e1 / zeta[3] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 * DZ[3][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][1] - 4 * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][1]) + (complex(0, 2) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * x[2] / zeta[2] ** 2 * DDZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-0.1e1 / zeta[3] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 * DZ[3][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][1] - 4 * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][1] + 2) + (2 / zeta[2] ** 2 * DZ[2][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DDZ[2][1] - 6 * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * x[2] / zeta[2] ** 3 * DDZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 2) / zeta[3] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 * DZ[3][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][1])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[2][1] * exp(2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][1] * exp(2 * mu[1]) + 4 * DM[1][1] ** 2 * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DDZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-2 / zeta[1] ** 2 * DZ[1][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DDZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 2) * zeta[3] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[3][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][1]) + (complex(0, -2) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, 1) * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, -4) / zeta[1] ** 3 * DZ[1][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DDZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-0.1e1 / zeta[3] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 * DZ[3][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][1] - 4 * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][1]) + (complex(0, 2) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * x[2] / zeta[1] ** 2 * DDZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-0.1e1 / zeta[3] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 * DZ[3][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][1] - 4 * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][1] + 2) + (2 / zeta[1] ** 2 * DZ[1][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DDZ[1][1] - 6 * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[2] / zeta[1] ** 3 * DDZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 2) / zeta[3] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 * DZ[3][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][1])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][1] * exp(2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][1] * exp(2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-2 / zeta[0] ** 2 * DZ[0][1] + complex(0, 2) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DDZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 2) * zeta[3] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[3][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[3][1]) + (complex(0, -2) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, 1) * x[2] / zeta[0] ** 2 * DDZ[0][1] + complex(0, -4) / zeta[0] ** 3 * DZ[0][1] - 6 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DDZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-0.1e1 / zeta[3] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 * DZ[3][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][1] - 4 * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][1]) + (complex(0, 2) * x[2] / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * x[2] / zeta[0] ** 2 * DDZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-0.1e1 / zeta[3] ** 2 + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 3 * DZ[3][1] - 6 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 4 * DZ[3][1] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DDZ[3][1] - 4 * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -4) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DDZ[3][1] + 2) + (2 / zeta[0] ** 2 * DZ[0][1] + complex(0, 2) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DDZ[0][1] - 6 * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 + 2 * x[2] / zeta[0] ** 3 * DDZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 2) / zeta[3] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 * DZ[3][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 3 * DZ[3][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DDZ[3][1])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][1] * exp(2 * mu[1]) - 4 * DM[1][1] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][1] * exp(2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[1][1] - 2 * DDM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[0] ** 3 + 6 * DRMBAR[1] / zeta[0] ** 4 * DZ[0][1] - 12 * RMBAR / zeta[0] ** 5 * DZ[0][1] ** 2 + 3 * RMBAR / zeta[0] ** 4 * DDZ[0][1] + 16 * x[2] / zeta[0] ** 2 - 64 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] + 12 * R * x[2] / zeta[0] ** 4 * DZ[0][1] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DDZ[0][1] + DDRPBAR[1] / zeta[0] - 2 * DRPBAR[1] / zeta[0] ** 2 * DZ[0][1] + 2 * RPBAR / zeta[0] ** 3 * DZ[0][1] ** 2 - RPBAR / zeta[0] ** 2 * DDZ[0][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[2] ** 3 + 6 * DRMBAR[1] / zeta[2] ** 4 * DZ[2][1] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][1] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][1] + 16 * x[2] / zeta[2] ** 2 - 64 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][1] + DDRPBAR[1] / zeta[2] - 2 * DRPBAR[1] / zeta[2] ** 2 * DZ[2][1] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][1] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[1] ** 3 + 6 * DRMBAR[1] / zeta[1] ** 4 * DZ[1][1] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][1] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][1] + 16 * x[2] / zeta[1] ** 2 - 64 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][1] + DDRPBAR[1] / zeta[1] - 2 * DRPBAR[1] / zeta[1] ** 2 * DZ[1][1] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][1] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) ** 2 * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[0][1] - 2 * DDM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DDM[2][1] - 2 * DDM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) ** 2 * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) ** 2 * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (-exp(-2 * mu[0]) + exp(-2 * mu[2])) + ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[3][1] * exp(-2 * mu[3]) + 4 * DM[3][1] ** 2 * exp(-2 * mu[3]) + 2 * DDM[2][1] * exp(-2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(-2 * mu[2])) + ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[0][1] * exp(-2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(-2 * mu[0]) + 2 * DDM[3][1] * exp(-2 * mu[3]) - 4 * DM[3][1] ** 2 * exp(-2 * mu[3])) + ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[3][1] * exp(-2 * mu[3]) + 4 * DM[3][1] ** 2 * exp(-2 * mu[3]) + 2 * DDM[2][1] * exp(-2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(-2 * mu[2])) + (2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * DSP[1] ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 2) * zeta[0] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[0][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][1]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 2) / zeta[0] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 * DZ[0][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][1]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] + 4 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) * DZ[1][1] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) * DZ[1][1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (8 / zeta[1] ** 3 + complex(0, 48) * x[0] / zeta[1] ** 4 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DDZ[1][1] - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][1] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][1] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][1] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][1] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 48 * x[1] / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] / zeta[1] ** 2 * DZ[1][1] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[2] / zeta[1] ** 3 * DZ[1][1] - 8 / zeta[1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, 4) / zeta[1] ** 3 * DZ[1][1] + complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][1] - 6 * x[0] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][1]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (8 / zeta[1] ** 3 + complex(0, 48) * x[0] / zeta[1] ** 4 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DDZ[1][1] - 4 * K ** 2 * k1 ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 72 * x[1] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DDZ[1][1] + 24 * x[1] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DDZ[1][1] + complex(0, 72) * x[0] * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, -96) * x[0] * x[1] / zeta[1] ** 5 * DZ[1][1] ** 2 + 2 * K ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[0] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 8 * x[1] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 + 16 * x[2] ** 2 / zeta[1] ** 3 * DZ[1][1] ** 2 - 3 * K ** 2 / zeta[1] ** 4 * DDZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DDZ[1][1] - 12 * x[1] ** 2 / zeta[1] ** 4 * DDZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DDZ[1][1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DDZ[1][1] - 48 * x[1] / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] / zeta[1] ** 2 * DZ[1][1] + 12 * K ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 - 48 * x[0] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[1] ** 2 / zeta[1] ** 5 * DZ[1][1] ** 2 + 48 * x[2] / zeta[1] ** 3 * DZ[1][1] - 8 / zeta[1]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DDZ[1][1] + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, 4) / zeta[1] ** 3 * DZ[1][1] + complex(0, -6) * x[1] / zeta[1] ** 4 * DZ[1][1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DDZ[1][1] + complex(0, 4) * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 + complex(0, -2) * x[2] / zeta[1] ** 2 * DDZ[1][1] - 6 * x[0] / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * x[0] / zeta[1] ** 3 * DDZ[1][1]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 3 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 3 * DZ[1][1] ** 2 + 8 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2])) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DDZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-2 * DDM[1][1] * exp(2 * mu[1]) - 4 * DM[1][1] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][1] * exp(2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DDZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 2) * zeta[0] - 4 * (x[0] + complex(0, -1) * x[1]) * DZ[0][1] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DDZ[0][1]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 2) / zeta[0] - 4 * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 * DZ[0][1] + complex(0, 0.1e1 / 0.2e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 3 * DZ[0][1] ** 2 + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DDZ[0][1]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] + 4 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] + 4 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) * DZ[2][1] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) * DZ[2][1] - 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DDZ[2][1] + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 3 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) ** 2 + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 3 * DZ[2][1] ** 2 - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, 4) / zeta[2] ** 3 * DZ[2][1] + complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][1] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][1] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][1] - 6 * x[0] / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][1]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][1] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][1] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - K ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 48) * x[0] / zeta[2] ** 4 * DZ[2][1] + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 48 * x[1] / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][1] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][1] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][1] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][1] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 + 48 * x[2] / zeta[2] ** 3 * DZ[2][1] - 8 / zeta[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, 4) / zeta[2] ** 3 * DZ[2][1] + complex(0, -6) * x[1] / zeta[2] ** 4 * DZ[2][1] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DDZ[2][1] + complex(0, 4) * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -2) * x[2] / zeta[2] ** 2 * DDZ[2][1] - 6 * x[0] / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * x[0] / zeta[2] ** 3 * DDZ[2][1]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (8 / zeta[2] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DDZ[2][1] + 24 * x[1] * x[2] / zeta[2] ** 3 * DDZ[2][1] - 4 * K ** 2 * k1 ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 72 * x[1] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - K ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 48) * x[0] / zeta[2] ** 4 * DZ[2][1] + 12 * K ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 - 48 * x[0] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 48 * x[1] ** 2 / zeta[2] ** 5 * DZ[2][1] ** 2 + 2 * K ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[0] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 8 * x[1] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 + 16 * x[2] ** 2 / zeta[2] ** 3 * DZ[2][1] ** 2 - 48 * x[1] / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DDZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DDZ[2][1] - 12 * x[1] ** 2 / zeta[2] ** 4 * DDZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DDZ[2][1] + 4 * x[1] ** 2 / zeta[2] ** 2 * DDZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DDZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DDZ[2][1] + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DDZ[2][1] + complex(0, -96) * x[0] * x[1] / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 72) * x[0] * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 + 48 * x[2] / zeta[2] ** 3 * DZ[2][1] - 8 / zeta[2]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 8 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[1] ** 5 * DZ[1][1] ** 2 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DDZ[1][1] + 24 * x[2] / zeta[1] ** 4 * DZ[1][1] - 8 / zeta[1] ** 2 + 32 * x[1] / zeta[1] ** 3 * DZ[1][1] - 6 * R / zeta[1] ** 4 * DZ[1][1] ** 2 + 2 * R / zeta[1] ** 3 * DDZ[1][1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DDZ[1][1] + complex(0, 24) * xm * x[2] / zeta[1] ** 3 * DZ[1][1] ** 2 - 24 * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 48) * x[2] * xp / zeta[2] ** 5 * DZ[2][1] ** 2 + complex(0, 24) * xm * x[2] / zeta[2] ** 3 * DZ[2][1] ** 2 + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DDZ[2][1] - 8 / zeta[2] ** 2 + 32 * x[1] / zeta[2] ** 3 * DZ[2][1] - 6 * R / zeta[2] ** 4 * DZ[2][1] ** 2 + 2 * R / zeta[2] ** 3 * DDZ[2][1] + 24 * x[2] / zeta[2] ** 4 * DZ[2][1] + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DDZ[2][1] - 24 * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * DSM[1] ** 2 + 2 * SM * DDSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DDZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (2 * DDM[2][1] * exp(2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(2 * mu[2]) - 2 * DDM[0][1] * exp(2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * DSP[1] * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DDM[1][1] - 2 * DDM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[0][1]) ** 2 * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DDM[2][1] - 2 * DDM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[0][1]) ** 2 * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[1] ** 3 + 6 * DRMBAR[1] / zeta[1] ** 4 * DZ[1][1] - 12 * RMBAR / zeta[1] ** 5 * DZ[1][1] ** 2 + 3 * RMBAR / zeta[1] ** 4 * DDZ[1][1] + 16 * x[2] / zeta[1] ** 2 - 64 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] + 12 * R * x[2] / zeta[1] ** 4 * DZ[1][1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DDZ[1][1] + DDRPBAR[1] / zeta[1] - 2 * DRPBAR[1] / zeta[1] ** 2 * DZ[1][1] + 2 * RPBAR / zeta[1] ** 3 * DZ[1][1] ** 2 - RPBAR / zeta[1] ** 2 * DDZ[1][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DDRMBAR[1] / zeta[2] ** 3 + 6 * DRMBAR[1] / zeta[2] ** 4 * DZ[2][1] - 12 * RMBAR / zeta[2] ** 5 * DZ[2][1] ** 2 + 3 * RMBAR / zeta[2] ** 4 * DDZ[2][1] + 16 * x[2] / zeta[2] ** 2 - 64 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] + 12 * R * x[2] / zeta[2] ** 4 * DZ[2][1] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DDZ[2][1] + DDRPBAR[1] / zeta[2] - 2 * DRPBAR[1] / zeta[2] ** 2 * DZ[2][1] + 2 * RPBAR / zeta[2] ** 3 * DZ[2][1] ** 2 - RPBAR / zeta[2] ** 2 * DDZ[2][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) + 4 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 3 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) ** 2 - 2 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DDSP[1] - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) + 2 * ((-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) + 2 * ((-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[2] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 3 * DZ[2][1] + 2 * x[2] / zeta[2] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[2] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[2] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) + 2 * ((-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[0][1]) * exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] + complex(0, -2) * pi - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + 2 * (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + 2 * (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + 2 * (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + 2 * (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + 2 * (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + 2 * (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[0] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[0][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[0] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 3 * DZ[0][1] + 2 * x[2] / zeta[0] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[0] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] ** 2 * DZ[0][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[0][1]) * exp(2 * mu[1] - 2 * mu[0]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[0] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[0] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[0] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[0] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] - 2 * mu[0])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) + 2 * ((-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[2][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[2] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[2][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[2] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] ** 2 * DZ[2][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[2][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) + 2 * ((-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((0.1e1 / zeta[2] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[2] ** 2 * DZ[2][1] + complex(0, 1) / zeta[2] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 3 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[2] ** 2 * DZ[2][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[2] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] ** 2 * DZ[2][1] + 2 * x[2] / zeta[2] ** 3 * DZ[2][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((0.1e1 / zeta[0] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[0] ** 2 * DZ[0][1] + complex(0, 1) / zeta[0] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 3 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[0] ** 2 * DZ[0][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[0] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] ** 2 * DZ[0][1] + 2 * x[2] / zeta[0] ** 3 * DZ[0][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((0.1e1 / zeta[1] + complex(0, -1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) + (complex(0, 1) * x[2] / zeta[1] ** 2 * DZ[1][1] + complex(0, 1) / zeta[1] ** 2 + 2 * (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 3 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1]) + (complex(0, 1) + complex(0, -1) * x[2] / zeta[1] ** 2 * DZ[1][1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (complex(0, 1) * (x[0] + complex(0, 1) * x[1]) / zeta[3] ** 2 + 2 * (K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 3 * DZ[3][1] + 2 * x[2] / zeta[3] + complex(0, 2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * (x[0] + complex(0, 1) * x[1]) + complex(0, 1) * (x[0] + complex(0, -1) * x[1])) + (-0.1e1 / zeta[1] + complex(0, -1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] ** 2 * DZ[1][1] + 2 * x[2] / zeta[1] ** 3 * DZ[1][1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (2 * DM[0][1] * exp(-2 * mu[0]) - 2 * DM[2][1] * exp(-2 * mu[2])) + ((-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[2] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[2] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[2])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (-2 * DDM[0][1] * exp(-2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(-2 * mu[0]) + 2 * DDM[3][1] * exp(-2 * mu[3]) - 4 * DM[3][1] ** 2 * exp(-2 * mu[3])) + ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[2]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[2] - (-x[0] + complex(0, -1) * x[1]) / zeta[2] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[2]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[2] - x[2] / zeta[2] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[0] - (-x[0] + complex(0, -1) * x[1]) / zeta[0] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[0]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[0] - x[2] / zeta[0] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * ((-x[2] + complex(0, 1) * (-x[0] + complex(0, -1) * x[1]) / zeta[1]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) + (complex(0, -1) * x[2] / zeta[1] - (-x[0] + complex(0, -1) * x[1]) / zeta[1] ** 2) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 - 0.3e1 / 0.2e1 * x[2] ** 2) + (-x[0] + complex(0, 1) * x[1] + complex(0, 1) * x[2] / zeta[1]) * (-(K ** 2 / 8 - (x[0] + complex(0, 1) * x[1]) ** 2 / 2) / zeta[3] ** 2 + complex(0, -2) * (x[0] + complex(0, 1) * x[1]) * x[2] / zeta[3] + K ** 2 * (-2 * k ** 2 + 1) / 8 + (x[0] + complex(0, -1) * x[1]) * (x[0] + complex(0, 1) * x[1]) - x[2] ** 2 / 2) + (complex(0, 1) * (complex(0, 1) * x[1] - x[0]) / zeta[1] - x[2] / zeta[1] ** 2) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2])) * (1 + exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (2 * DDM[0][1] * exp(-2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(-2 * mu[0]) - 2 * DDM[2][1] * exp(-2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(-2 * mu[2])) + ((-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2))) * (2 * DDM[0][1] * exp(-2 * mu[0]) - 4 * DM[0][1] ** 2 * exp(-2 * mu[0]) - 2 * DDM[2][1] * exp(-2 * mu[2]) + 4 * DM[2][1] ** 2 * exp(-2 * mu[2])) + 2 * ((-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * DZ[2][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (-4 * x[2] / zeta[2] ** 3 + complex(0, -12) * x[2] * xp / zeta[2] ** 4 * DZ[2][1] - 8 * x[1] / zeta[2] ** 2 + 2 * R / zeta[2] ** 3 * DZ[2][1] + 12 * x[2] / zeta[2] + complex(0, -12) * xm * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[2][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] * (complex(0, -1) / zeta[2] ** 2 + complex(0, 2) * x[1] / zeta[2] ** 3 * DZ[2][1] + complex(0, -2) * x[2] / zeta[2] ** 2 * DZ[2][1] + 2 * x[0] / zeta[2] ** 3 * DZ[2][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) ** 2 / zeta[2] * (complex(0, -8) * x[0] / zeta[2] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[2] ** 3 * DZ[2][1] + complex(0, 24) * x[0] * x[1] / zeta[2] ** 4 * DZ[2][1] + 2 * K ** 2 * k1 ** 2 / zeta[2] ** 2 * DZ[2][1] - 3 * K ** 2 / zeta[2] ** 4 * DZ[2][1] + 12 * x[0] ** 2 / zeta[2] ** 4 * DZ[2][1] + 8 * x[1] / zeta[2] ** 3 - 12 * x[1] ** 2 / zeta[2] ** 4 * DZ[2][1] - 12 * x[2] / zeta[2] ** 2 + 24 * x[1] * x[2] / zeta[2] ** 3 * DZ[2][1] - K ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[0] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[1] / zeta[2] + 4 * x[1] ** 2 / zeta[2] ** 2 * DZ[2][1] - 8 * x[2] ** 2 / zeta[2] ** 2 * DZ[2][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2] ** 2 * DZ[2][1]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (2 * DM[2][1] - 2 * DM[3][1]) * exp(2 * mu[2] - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * zeta[2] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[2] ** 3 - R / zeta[2] ** 2 + complex(0, 12) * xm * x[2] / zeta[2] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[2] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[2] ** 2 + complex(0, 2) * x[2] / zeta[2] - x[0] / zeta[2] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[2] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[2] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[2] + K ** 2 / zeta[2] ** 3 - 4 * x[0] ** 2 / zeta[2] ** 3 + 4 * x[1] ** 2 / zeta[2] ** 3 - 12 * x[1] * x[2] / zeta[2] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[2] - 4 * x[0] ** 2 / zeta[2] - 4 * x[1] ** 2 / zeta[2] + 8 * x[2] ** 2 / zeta[2] + 4 * x[1] * x[2]) / zeta[2]) * (1 - exp(2 * mu[2] - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[2] ** 3 + 2 * R * x[2] / zeta[2] ** 2 + RPBAR / zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[2] ** 3 + 3 * RMBAR / zeta[2] ** 4 * DZ[2][1] + 16 * x[1] * x[2] / zeta[2] ** 2 - 4 * R * x[2] / zeta[2] ** 3 * DZ[2][1] + DRPBAR[1] / zeta[2] - RPBAR / zeta[2] ** 2 * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * DZ[0][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (-4 * x[2] / zeta[0] ** 3 + complex(0, -12) * x[2] * xp / zeta[0] ** 4 * DZ[0][1] - 8 * x[1] / zeta[0] ** 2 + 2 * R / zeta[0] ** 3 * DZ[0][1] + 12 * x[2] / zeta[0] + complex(0, -12) * xm * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[0][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] * (complex(0, -1) / zeta[0] ** 2 + complex(0, 2) * x[1] / zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * x[2] / zeta[0] ** 2 * DZ[0][1] + 2 * x[0] / zeta[0] ** 3 * DZ[0][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) ** 2 / zeta[0] * (complex(0, 24) * x[0] * x[1] / zeta[0] ** 4 * DZ[0][1] + complex(0, -24) * x[0] * x[2] / zeta[0] ** 3 * DZ[0][1] + complex(0, -8) * x[0] / zeta[0] ** 3 + 2 * K ** 2 * k1 ** 2 / zeta[0] ** 2 * DZ[0][1] - 3 * K ** 2 / zeta[0] ** 4 * DZ[0][1] + 12 * x[0] ** 2 / zeta[0] ** 4 * DZ[0][1] + 8 * x[1] / zeta[0] ** 3 - 12 * x[1] ** 2 / zeta[0] ** 4 * DZ[0][1] - 12 * x[2] / zeta[0] ** 2 + 24 * x[1] * x[2] / zeta[0] ** 3 * DZ[0][1] - K ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[0] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[1] / zeta[0] + 4 * x[1] ** 2 / zeta[0] ** 2 * DZ[0][1] - 8 * x[2] ** 2 / zeta[0] ** 2 * DZ[0][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0] ** 2 * DZ[0][1]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (2 * DM[0][1] - 2 * DM[3][1]) * exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * zeta[0] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[0] ** 3 - R / zeta[0] ** 2 + complex(0, 12) * xm * x[2] / zeta[0] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[0] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[0] ** 2 + complex(0, 2) * x[2] / zeta[0] - x[0] / zeta[0] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[0] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[0] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[0] + K ** 2 / zeta[0] ** 3 - 4 * x[0] ** 2 / zeta[0] ** 3 + 4 * x[1] ** 2 / zeta[0] ** 3 - 12 * x[1] * x[2] / zeta[0] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[0] - 4 * x[0] ** 2 / zeta[0] - 4 * x[1] ** 2 / zeta[0] + 8 * x[2] ** 2 / zeta[0] + 4 * x[1] * x[2]) / zeta[0]) * (1 - exp(2 * mu[0] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[0] ** 3 + 2 * R * x[2] / zeta[0] ** 2 + RPBAR / zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[0] ** 3 + 3 * RMBAR / zeta[0] ** 4 * DZ[0][1] + 16 * x[1] * x[2] / zeta[0] ** 2 - 4 * R * x[2] / zeta[0] ** 3 * DZ[0][1] + DRPBAR[1] / zeta[0] - RPBAR / zeta[0] ** 2 * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + (2 * DM[2][1] * exp(2 * mu[2]) - 2 * DM[0][1] * exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * DZ[1][1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + 2 * (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) * DSP[1] + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (-4 * x[2] / zeta[1] ** 3 + complex(0, -12) * x[2] * xp / zeta[1] ** 4 * DZ[1][1] - 8 * x[1] / zeta[1] ** 2 + 2 * R / zeta[1] ** 3 * DZ[1][1] + 12 * x[2] / zeta[1] + complex(0, -12) * xm * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * SM * DSM[1]) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) + (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * DZ[1][1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (-2 * (x[0] + complex(0, -1) * x[1]) * zeta[3] + complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * DZ[3][1] + complex(0, 1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) + 4 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] * (complex(0, -1) / zeta[1] ** 2 + complex(0, 2) * x[1] / zeta[1] ** 3 * DZ[1][1] + complex(0, -2) * x[2] / zeta[1] ** 2 * DZ[1][1] + 2 * x[0] / zeta[1] ** 3 * DZ[1][1] + complex(0, 1)) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (2 * (x[0] + complex(0, 1) * x[1]) / zeta[3] + complex(0, -0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] ** 2 * DZ[3][1] + complex(0, -1) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) ** 2 / zeta[1] * (complex(0, -8) * x[0] / zeta[1] ** 3 + complex(0, -24) * x[0] * x[2] / zeta[1] ** 3 * DZ[1][1] + complex(0, 24) * x[0] * x[1] / zeta[1] ** 4 * DZ[1][1] + 2 * K ** 2 * k1 ** 2 / zeta[1] ** 2 * DZ[1][1] - 3 * K ** 2 / zeta[1] ** 4 * DZ[1][1] + 12 * x[0] ** 2 / zeta[1] ** 4 * DZ[1][1] + 8 * x[1] / zeta[1] ** 3 - 12 * x[1] ** 2 / zeta[1] ** 4 * DZ[1][1] - 12 * x[2] / zeta[1] ** 2 + 24 * x[1] * x[2] / zeta[1] ** 3 * DZ[1][1] - K ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[0] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[1] / zeta[1] + 4 * x[1] ** 2 / zeta[1] ** 2 * DZ[1][1] - 8 * x[2] ** 2 / zeta[1] ** 2 * DZ[1][1] + 4 * x[2]) - 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1] ** 2 * DZ[1][1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (2 * DM[1][1] - 2 * DM[3][1]) * exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3]) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) - (exp(2 * mu[2]) - exp(2 * mu[0])) * zeta[1] * SP ** 2 * (complex(0, 4) * x[2] * xp / zeta[1] ** 3 - R / zeta[1] ** 2 + complex(0, 12) * xm * x[2] / zeta[1] + SM ** 2) * (2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * zeta[1] * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, -1) * x[1]) ** 2) * zeta[3] - (x[0] + complex(0, -1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) + 2 * (complex(0, -1) * x[1] / zeta[1] ** 2 + complex(0, 2) * x[2] / zeta[1] - x[0] / zeta[1] ** 2 + complex(0, 1) * x[1] - x[0]) ** 2 * (complex(0, 0.1e1 / 0.4e1) * (K ** 2 - 4 * (x[0] + complex(0, 1) * x[1]) ** 2) / zeta[3] - (x[0] + complex(0, 1) * x[1]) * x[2]) / (complex(0, -8) * x[0] * x[1] / zeta[1] ** 3 + complex(0, 12) * x[0] * x[2] / zeta[1] ** 2 - 2 * K ** 2 * k1 ** 2 / zeta[1] + K ** 2 / zeta[1] ** 3 - 4 * x[0] ** 2 / zeta[1] ** 3 + 4 * x[1] ** 2 / zeta[1] ** 3 - 12 * x[1] * x[2] / zeta[1] ** 2 + complex(0, 4) * x[0] * x[2] + K ** 2 / zeta[1] - 4 * x[0] ** 2 / zeta[1] - 4 * x[1] ** 2 / zeta[1] + 8 * x[2] ** 2 / zeta[1] + 4 * x[1] * x[2]) / zeta[1]) * (1 - exp(2 * mu[1] + complex(0, 2) * pi - 2 * mu[3])) / K ** 2 / (-RMBAR / zeta[1] ** 3 + 2 * R * x[2] / zeta[1] ** 2 + RPBAR / zeta[1] - x[2] * (SM ** 2 + SP ** 2)) ** 2 * (-DRMBAR[1] / zeta[1] ** 3 + 3 * RMBAR / zeta[1] ** 4 * DZ[1][1] + 16 * x[1] * x[2] / zeta[1] ** 2 - 4 * R * x[2] / zeta[1] ** 3 * DZ[1][1] + DRPBAR[1] / zeta[1] - RPBAR / zeta[1] ** 2 * DZ[1][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1]))) * (2 * DM[0][1] * exp(-2 * mu[0]) - 2 * DM[2][1] * exp(-2 * mu[2])) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * DZ[2][1] ** 2 + 4 * K ** 2 * k1 ** 2 * zeta[2] * DDZ[2][1] + complex(0, -24) * zeta[2] * x[0] * x[2] * DZ[2][1] ** 2 + complex(0, -12) * x[0] * x[2] * DDZ[2][1] - 24 * zeta[2] * x[1] * x[2] * DZ[2][1] ** 2 - 24 * zeta[2] ** 2 * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DDZ[2][1] - 2 * K ** 2 * DZ[2][1] ** 2 - 2 * K ** 2 * zeta[2] * DDZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DDZ[2][1] + 8 * DZ[2][1] ** 2 * x[0] ** 2 + 8 * zeta[2] * x[0] ** 2 * DDZ[2][1] + 8 * DZ[2][1] ** 2 * x[1] ** 2 + 32 * zeta[2] * x[1] * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DDZ[2][1] + 8 * zeta[2] ** 2 - 16 * DZ[2][1] ** 2 * x[2] ** 2 - 16 * zeta[2] * x[2] ** 2 * DDZ[2][1] + 12 * DDZ[2][1] * x[1] * x[2] + 24 * DZ[2][1] * x[2] - 8) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] - 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] + 12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 5 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][1] ** 2 - 6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][1] - 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * x[1] - 6 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][1] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) + 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) - 12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][1] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) - (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DDRM[1] * zeta[2] ** 3 + 6 * DRM[1] * zeta[2] ** 2 * DZ[2][1] + 6 * RM * zeta[2] * DZ[2][1] ** 2 + 3 * RM * zeta[2] ** 2 * DDZ[2][1] + 16 * zeta[2] ** 2 * x[2] + 64 * x[1] * x[2] * zeta[2] * DZ[2][1] + 4 * R * x[2] * DZ[2][1] ** 2 + 4 * R * x[2] * zeta[2] * DDZ[2][1] - DDRP[1] * zeta[2] - 2 * DRP[1] * DZ[2][1] - RP * DDZ[2][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) - (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DDRM[1] * zeta[0] ** 3 + 6 * DRM[1] * zeta[0] ** 2 * DZ[0][1] + 6 * RM * zeta[0] * DZ[0][1] ** 2 + 3 * RM * zeta[0] ** 2 * DDZ[0][1] + 16 * zeta[0] ** 2 * x[2] + 64 * x[1] * x[2] * zeta[0] * DZ[0][1] + 4 * R * x[2] * DZ[0][1] ** 2 + 4 * R * x[2] * zeta[0] * DDZ[0][1] - DDRP[1] * zeta[0] - 2 * DRP[1] * DZ[0][1] - RP * DDZ[0][1] - x[2] * (2 * SM * DDSM[1] + 2 * SP * DDSP[1] + 2 * DSM[1] ** 2 + 2 * DSP[1] ** 2)) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) * x[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) * x[1] + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) * x[1] + 6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DZ[0][1] * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) + 12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][1] * x[1] - 12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * DZ[0][1] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DSM[1] * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) - 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * x[1] - 12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * DZ[2][1] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DSM[1] * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) + 6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * DZ[2][1] * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) + 12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][1] * x[1] + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) * x[1] - 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * x[1] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) * x[1] - 12 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) * DZ[0][1] - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) * (4 * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * zeta[0] ** 2 * x[0] * x[2] * DZ[0][1] - 12 * zeta[0] ** 2 * x[1] * x[2] * DZ[0][1] - 4 * x[2] * zeta[0] ** 3 - 2 * K ** 2 * zeta[0] * DZ[0][1] + complex(0, -12) * DZ[0][1] * x[0] * x[2] + 8 * zeta[0] * x[0] ** 2 * DZ[0][1] + 8 * zeta[0] * x[1] ** 2 * DZ[0][1] + 8 * zeta[0] ** 2 * x[1] - 16 * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 8) * x[0] + 12 * DZ[0][1] * x[1] * x[2] + 12 * x[2] * zeta[0] - 8 * x[1]) - 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 6 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 4 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[0][1] * (DRM[1] * zeta[0] ** 3 + 3 * RM * zeta[0] ** 2 * DZ[0][1] + 16 * zeta[0] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[0] * DZ[0][1] - DRP[1] * zeta[0] - RP * DZ[0][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) + 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) - 12 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) * DZ[2][1] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) ** 2 * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) * (4 * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * zeta[2] ** 2 * x[0] * x[2] * DZ[2][1] - 12 * zeta[2] ** 2 * x[1] * x[2] * DZ[2][1] - 4 * x[2] * zeta[2] ** 3 - 2 * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -12) * x[0] * x[2] * DZ[2][1] + 8 * zeta[2] * x[0] ** 2 * DZ[2][1] + 8 * zeta[2] * x[1] ** 2 * DZ[2][1] + 8 * zeta[2] ** 2 * x[1] - 16 * zeta[2] * x[2] ** 2 * DZ[2][1] + complex(0, 8) * x[0] + 12 * DZ[2][1] * x[1] * x[2] + 12 * x[2] * zeta[2] - 8 * x[1]) - 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) * x[1] - 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DSM[1] * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 6 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 4 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) ** 2 / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) * DZ[2][1] * (DRM[1] * zeta[2] ** 3 + 3 * RM * zeta[2] ** 2 * DZ[2][1] + 16 * zeta[2] ** 2 * x[1] * x[2] + 4 * R * x[2] * zeta[2] * DZ[2][1] - DRP[1] * zeta[2] - RP * DZ[2][1] - x[2] * (2 * SM * DSM[1] + 2 * SP * DSP[1])) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 4 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) - 8 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (4 * x[2] * zeta[2] ** 3 + complex(0, 12) * x[2] * xm * zeta[2] ** 2 * DZ[2][1] - 8 * zeta[2] ** 2 * x[1] - 2 * R * zeta[2] * DZ[2][1] - 12 * x[2] * zeta[2] + complex(0, 12) * xp * x[2] * DZ[2][1] + 2 * SP * DSP[1]) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (4 * x[2] * zeta[0] ** 3 + complex(0, 12) * x[2] * xm * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 2 * x[1] - 2 * R * zeta[0] * DZ[0][1] - 12 * x[2] * zeta[0] + complex(0, 12) * xp * x[2] * DZ[0][1] + 2 * SP * DSP[1]) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (-8 * zeta[0] ** 4 * x[0] - 2 * K ** 2 * cm * DZ[0][1] ** 2 * x[0] + 8 * K ** 2 * k1 ** 2 * DZ[0][1] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * DDZ[0][1] - 64 * zeta[0] ** 3 * x[0] * x[1] * DZ[0][1] - 48 * zeta[0] ** 2 * x[0] * x[1] ** 2 * DZ[0][1] ** 2 - 96 * x[0] * x[2] ** 2 * zeta[0] ** 2 * DZ[0][1] ** 2 - 2 * K ** 2 * zeta[0] * x[0] * DDZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DDZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DDZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DDZ[0][1] + complex(0, -24) * x[1] + complex(0, -6) * K ** 2 * DZ[0][1] ** 2 * x[1] + complex(0, -48) * DZ[0][1] ** 2 * x[1] * x[2] ** 2 + complex(0, 64) * x[1] * x[2] * DZ[0][1] + complex(0, 32) * x[2] * zeta[0] + complex(0, 24) * zeta[0] ** 4 * x[1] + complex(0, -16) * x[0] ** 2 * x[2] * DDZ[0][1] + complex(0, 16) * x[1] ** 2 * x[2] * DDZ[0][1] + complex(0, 48) * zeta[0] ** 2 * x[1] ** 3 * DZ[0][1] ** 2 + complex(0, 96) * x[2] ** 3 * zeta[0] * DZ[0][1] ** 2 + complex(0, -96) * zeta[0] * x[2] ** 2 * DZ[0][1] + complex(0, 64) * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 32) * zeta[0] ** 3 * x[0] ** 2 * DZ[0][1] + complex(0, 96) * zeta[0] ** 3 * x[1] ** 2 * DZ[0][1] + complex(0, -12) * K ** 2 * zeta[0] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DDZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DDZ[0][1] - 48 * zeta[0] ** 2 * x[0] ** 3 * DZ[0][1] ** 2 - 16 * zeta[0] ** 3 * x[0] ** 3 * DDZ[0][1] - 2 * K ** 2 * DZ[0][1] ** 2 * x[0] - 48 * DZ[0][1] ** 2 * x[0] * x[2] ** 2 + 64 * DZ[0][1] * x[0] * x[2] - 2 * K ** 2 * cm * zeta[0] * x[0] * DDZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DDZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DDZ[0][1] - 12 * K ** 2 * cm * x[0] * zeta[0] ** 2 * DZ[0][1] ** 2 - 24 * x[0] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DDZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DDZ[0][1] + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DDZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DDZ[0][1] + complex(0, 12) * K ** 2 * cm * x[1] * zeta[0] ** 2 * DZ[0][1] ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DDZ[0][1] + complex(0, 12) * K ** 2 * cm * x[2] * zeta[0] * DZ[0][1] ** 2 + complex(0, 8) * K ** 2 * cm * zeta[0] ** 3 * DZ[0][1] + complex(0, -4) * K ** 2 * cm * zeta[0] * DZ[0][1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[0] * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DDZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DDZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DDZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DDZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DDZ[0][1] + complex(0, 96) * x[1] * x[2] ** 2 * zeta[0] ** 2 * DZ[0][1] ** 2 + complex(0, 12) * K ** 2 * x[2] * zeta[0] * DZ[0][1] ** 2 + complex(0, 48) * zeta[0] ** 2 * x[0] ** 2 * x[1] * DZ[0][1] ** 2 + complex(0, -24) * K ** 2 * k1 ** 2 * x[2] * zeta[0] * DZ[0][1] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * DZ[0][1] ** 2 * x[1] + complex(0, -2) * K ** 2 * cm * DZ[0][1] ** 2 * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DDM[0][1] * exp(-2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(-2 * mu[0]) + 2 * DDM[3][1] * exp(-2 * mu[3]) - 4 * DM[3][1] ** 2 * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (32 * x[0] * x[1] * x[2] * DDZ[2][1] - 2 * K ** 2 * cm * x[0] * DZ[2][1] ** 2 + 8 * K ** 2 * k1 ** 2 * x[0] * DZ[2][1] ** 2 - 2 * K ** 2 * x[0] * zeta[2] * DDZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DDZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DDZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DDZ[2][1] - 64 * x[0] * x[1] * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[1] ** 2 * zeta[2] ** 2 * DZ[2][1] ** 2 - 96 * x[0] * x[2] ** 2 * zeta[2] ** 2 * DZ[2][1] ** 2 + complex(0, 24) * x[1] * zeta[2] ** 4 + complex(0, 16) * x[1] ** 2 * x[2] * DDZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DDZ[2][1] + complex(0, 64) * x[1] * x[2] * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * DZ[2][1] ** 2 + complex(0, -48) * x[1] * x[2] ** 2 * DZ[2][1] ** 2 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DDZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DDZ[2][1] + complex(0, 96) * x[2] ** 3 * zeta[2] * DZ[2][1] ** 2 + complex(0, 48) * x[1] ** 3 * zeta[2] ** 2 * DZ[2][1] ** 2 + complex(0, 96) * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, -12) * K ** 2 * zeta[2] * DZ[2][1] + complex(0, -96) * x[2] ** 2 * zeta[2] * DZ[2][1] + complex(0, 32) * x[0] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 64) * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[2] * zeta[2] + complex(0, -24) * x[1] - 8 * x[0] * zeta[2] ** 4 + 64 * x[0] * x[2] * DZ[2][1] - 48 * x[0] ** 3 * zeta[2] ** 2 * DZ[2][1] ** 2 - 16 * x[0] ** 3 * zeta[2] ** 3 * DDZ[2][1] - 2 * K ** 2 * x[0] * DZ[2][1] ** 2 - 48 * x[0] * x[2] ** 2 * DZ[2][1] ** 2 - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DDZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DDZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DDZ[2][1] - 12 * K ** 2 * cm * x[0] * zeta[2] ** 2 * DZ[2][1] ** 2 - 24 * x[0] + complex(0, -4) * K ** 2 * cm * zeta[2] * DZ[2][1] + complex(0, 8) * K ** 2 * cm * zeta[2] ** 3 * DZ[2][1] + complex(0, 16) * K ** 2 * k1 ** 2 * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DDZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DDZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DDZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DDZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DDZ[2][1] + complex(0, 48) * x[0] ** 2 * x[1] * zeta[2] ** 2 * DZ[2][1] ** 2 + complex(0, 96) * x[1] * x[2] ** 2 * zeta[2] ** 2 * DZ[2][1] ** 2 + complex(0, 12) * K ** 2 * x[2] * zeta[2] * DZ[2][1] ** 2 + complex(0, -2) * K ** 2 * cm * x[1] * DZ[2][1] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * DZ[2][1] ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DDZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DDZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DDZ[2][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DDZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DDZ[2][1] + complex(0, -24) * K ** 2 * k1 ** 2 * x[2] * zeta[2] * DZ[2][1] ** 2 + complex(0, 12) * K ** 2 * cm * x[1] * zeta[2] ** 2 * DZ[2][1] ** 2 + complex(0, 12) * K ** 2 * cm * x[2] * zeta[2] * DZ[2][1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-2 * DDM[1][1] * exp(2 * mu[1]) - 4 * DM[1][1] ** 2 * exp(2 * mu[1]) + 2 * DDM[0][1] * exp(2 * mu[0]) + 4 * DM[0][1] ** 2 * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-2 * DDM[2][1] * exp(2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(2 * mu[2]) + 2 * DDM[1][1] * exp(2 * mu[1]) + 4 * DM[1][1] ** 2 * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DDM[3][1] * exp(-2 * mu[3]) + 4 * DM[3][1] ** 2 * exp(-2 * mu[3]) + 2 * DDM[2][1] * exp(-2 * mu[2]) - 4 * DM[2][1] ** 2 * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * DSM[1] ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-2 * DM[1][1] * exp(2 * mu[1]) + 2 * DM[0][1] * exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[0][1] * exp(-2 * mu[0]) + 2 * DM[3][1] * exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * DSM[1] ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) - 8 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 4 * (-2 * DM[2][1] * exp(2 * mu[2]) + 2 * DM[1][1] * exp(2 * mu[1])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (-2 * DM[3][1] * exp(-2 * mu[3]) + 2 * DM[2][1] * exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 4 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 8) * K ** 2 * k1 ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 4) * K ** 2 * cm * x[1] * zeta[0] ** 3 * DZ[0][1] + complex(0, -2) * K ** 2 * cm * zeta[0] * x[1] * DZ[0][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, -6) * K ** 2 * zeta[0] * x[1] * DZ[0][1] + complex(0, -48) * zeta[0] * x[1] * x[2] ** 2 * DZ[0][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] + complex(0, 6) * K ** 2 * x[2] * zeta[0] ** 2 * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[0] ** 2 * x[1] * DZ[0][1] + complex(0, -3) * K ** 2 * zeta[0] ** 2 + complex(0, -24) * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[2] ** 2 * zeta[0] ** 4 + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 + complex(0, 12) * zeta[0] ** 4 * x[1] ** 2 + complex(0, 1) * K ** 2 * cm * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, 16) * x[1] ** 2 * x[2] * DZ[0][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[0][1] + complex(0, 16) * zeta[0] ** 3 * x[1] ** 3 * DZ[0][1] + complex(0, 48) * x[2] ** 3 * zeta[0] ** 2 * DZ[0][1] - 8 * zeta[0] ** 4 * x[0] * x[1] + 32 * zeta[0] * x[0] * x[2] - 16 * zeta[0] ** 3 * x[0] ** 3 * DZ[0][1] - 2 * K ** 2 * cm * zeta[0] * x[0] * DZ[0][1] + 8 * K ** 2 * k1 ** 2 * zeta[0] * x[0] * DZ[0][1] - 4 * K ** 2 * cm * x[0] * zeta[0] ** 3 * DZ[0][1] + 32 * x[0] * x[1] * x[2] * DZ[0][1] - 2 * K ** 2 * zeta[0] * x[0] * DZ[0][1] - 16 * zeta[0] ** 3 * x[0] * x[1] ** 2 * DZ[0][1] - 48 * zeta[0] * x[0] * x[2] ** 2 * DZ[0][1] - 32 * x[0] * x[2] ** 2 * zeta[0] ** 3 * DZ[0][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 4 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * x[1] * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (complex(0, -12) * x[1] ** 2 + complex(0, 12) * x[0] ** 2 + complex(0, -1) * K ** 2 + complex(0, 4) * K ** 2 * cm * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * cm * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, 8) * K ** 2 * k1 ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -12) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -2) * K ** 2 * cm * x[1] * zeta[2] * DZ[2][1] + complex(0, 16) * x[0] ** 2 * x[1] * zeta[2] ** 3 * DZ[2][1] + complex(0, 32) * x[1] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] + complex(0, 6) * K ** 2 * x[2] * zeta[2] ** 2 * DZ[2][1] + complex(0, -6) * K ** 2 * x[1] * zeta[2] * DZ[2][1] + complex(0, -48) * x[1] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * zeta[2] ** 4 + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -1) * K ** 2 * cm * zeta[2] ** 2 + complex(0, 32) * x[1] * x[2] * zeta[2] + complex(0, -3) * K ** 2 * zeta[2] ** 2 + complex(0, -24) * x[2] ** 2 * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * zeta[2] ** 4 + complex(0, 8) * x[2] ** 2 * zeta[2] ** 4 + complex(0, 12) * x[1] ** 2 * zeta[2] ** 4 + complex(0, 48) * x[2] ** 3 * zeta[2] ** 2 * DZ[2][1] + complex(0, 16) * x[1] ** 3 * zeta[2] ** 3 * DZ[2][1] + complex(0, -16) * x[0] ** 2 * x[2] * DZ[2][1] + complex(0, 16) * x[1] ** 2 * x[2] * DZ[2][1] - 8 * x[0] * x[1] * zeta[2] ** 4 - 16 * x[0] ** 3 * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * cm * x[0] * zeta[2] * DZ[2][1] + 8 * K ** 2 * k1 ** 2 * x[0] * zeta[2] * DZ[2][1] - 4 * K ** 2 * cm * x[0] * zeta[2] ** 3 * DZ[2][1] - 2 * K ** 2 * x[0] * zeta[2] * DZ[2][1] - 16 * x[0] * x[1] ** 2 * zeta[2] ** 3 * DZ[2][1] - 32 * x[0] * x[2] ** 2 * zeta[2] ** 3 * DZ[2][1] - 48 * x[0] * x[2] ** 2 * zeta[2] * DZ[2][1] + 32 * x[0] * x[1] * x[2] * DZ[2][1] - 24 * x[0] * x[1]) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) - 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[2]) + exp(2 * mu[1])) * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[0] ** 3 - R * zeta[0] ** 2 + complex(0, 12) * xp * x[2] * zeta[0] + SP ** 2) ** 2 * (4 * x[0] ** 3 - 4 * zeta[0] ** 4 * x[0] ** 3 + complex(0, 2) * K ** 2 * x[2] * zeta[0] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[0] + complex(0, 4) * zeta[0] ** 4 * x[0] ** 2 * x[1] + complex(0, 4) * zeta[0] ** 4 * x[1] ** 3 + complex(0, 16) * x[2] ** 3 * zeta[0] ** 3 - K ** 2 * zeta[0] ** 2 * x[0] - K ** 2 * cm * zeta[0] ** 2 * x[0] + complex(0, -16) * x[0] ** 2 * x[2] * zeta[0] + complex(0, -3) * K ** 2 * zeta[0] ** 2 * x[1] + complex(0, -24) * zeta[0] ** 2 * x[1] * x[2] ** 2 - K ** 2 * cm * x[0] * zeta[0] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[0] ** 4 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * zeta[0] ** 4 * x[0] * x[1] ** 2 - 24 * zeta[0] ** 2 * x[0] * x[2] ** 2 - 8 * x[0] * x[2] ** 2 * zeta[0] ** 4 + 4 * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[0] + 32 * x[0] * x[1] * x[2] * zeta[0] + complex(0, 4) * K ** 2 * k1 ** 2 * zeta[0] ** 2 * x[1] + complex(0, 2) * K ** 2 * cm * x[2] * zeta[0] ** 3 + complex(0, 1) * K ** 2 * cm * x[1] * zeta[0] ** 4 + complex(0, -1) * K ** 2 * cm * zeta[0] ** 2 * x[1] + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[0] ** 3 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[3]) - exp(-2 * mu[2])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[0] ** 3 / K ** 2 / (RM * zeta[0] ** 3 + 2 * R * x[2] * zeta[0] ** 2 - RP * zeta[0] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[0] ** 2 + complex(0, -4) * zeta[0] ** 3 * x[0] * x[2] - 4 * zeta[0] ** 3 * x[1] * x[2] - K ** 2 * zeta[0] ** 2 + complex(0, -12) * zeta[0] * x[0] * x[2] + 4 * zeta[0] ** 2 * x[0] ** 2 + 4 * zeta[0] ** 2 * x[1] ** 2 - 8 * zeta[0] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[0] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) + 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2) - 2 * (-exp(2 * mu[1]) + exp(2 * mu[0])) * r ** 2 * SM ** 2 * (complex(0, 4) * x[2] * xm * zeta[2] ** 3 - R * zeta[2] ** 2 + complex(0, 12) * xp * x[2] * zeta[2] + SP ** 2) ** 2 * (4 * x[0] ** 3 + complex(0, -3) * K ** 2 * x[1] * zeta[2] ** 2 - K ** 2 * cm * x[0] * zeta[2] ** 4 + complex(0, -24) * x[1] * x[2] ** 2 * zeta[2] ** 2 + complex(0, -16) * x[0] ** 2 * x[2] * zeta[2] - K ** 2 * cm * x[0] * zeta[2] ** 2 + complex(0, 4) * x[0] ** 2 * x[1] * zeta[2] ** 4 + complex(0, 8) * x[1] * x[2] ** 2 * zeta[2] ** 4 + complex(0, 2) * K ** 2 * x[2] * zeta[2] ** 3 + complex(0, 16) * x[1] ** 2 * x[2] * zeta[2] + complex(0, 16) * x[2] ** 3 * zeta[2] ** 3 + complex(0, 4) * x[1] ** 3 * zeta[2] ** 4 - K ** 2 * x[0] * zeta[2] ** 2 - 4 * x[0] * x[1] ** 2 * zeta[2] ** 4 - 8 * x[0] * x[2] ** 2 * zeta[2] ** 4 - 24 * x[0] * x[2] ** 2 * zeta[2] ** 2 + complex(0, 12) * x[0] ** 2 * x[1] + complex(0, -1) * K ** 2 * x[1] - 4 * x[0] ** 3 * zeta[2] ** 4 + 4 * K ** 2 * k1 ** 2 * x[0] * zeta[2] ** 2 + 32 * x[0] * x[1] * x[2] * zeta[2] + complex(0, 1) * K ** 2 * cm * x[1] * zeta[2] ** 4 + complex(0, 2) * K ** 2 * cm * x[2] * zeta[2] ** 3 + complex(0, 4) * K ** 2 * k1 ** 2 * x[1] * zeta[2] ** 2 + complex(0, -4) * K ** 2 * k1 ** 2 * x[2] * zeta[2] ** 3 + complex(0, -1) * K ** 2 * cm * x[1] * zeta[2] ** 2 - K ** 2 * x[0] + complex(0, -4) * x[1] ** 3 - 12 * x[0] * x[1] ** 2) * (exp(-2 * mu[0]) - exp(-2 * mu[3])) / (x[0] ** 2 + x[1] ** 2 + x[2] ** 2) ** 2 / zeta[2] ** 3 / K ** 2 / (RM * zeta[2] ** 3 + 2 * R * x[2] * zeta[2] ** 2 - RP * zeta[2] - x[2] * (SM ** 2 + SP ** 2)) / (2 * K ** 2 * k1 ** 2 * zeta[2] ** 2 + complex(0, -4) * zeta[2] ** 3 * x[0] * x[2] - 4 * zeta[2] ** 3 * x[1] * x[2] - K ** 2 * zeta[2] ** 2 + complex(0, -12) * x[0] * x[2] * zeta[2] + 4 * zeta[2] ** 2 * x[0] ** 2 + 4 * zeta[2] ** 2 * x[1] ** 2 - 8 * zeta[2] ** 2 * x[2] ** 2 + complex(0, 8) * x[0] * x[1] + 12 * zeta[2] * x[1] * x[2] - K ** 2 + 4 * x[0] ** 2 - 4 * x[1] ** 2)
